package com.ctsi.block.repository;

import com.ctsi.block.domain.BlockedImg;
import com.ctsi.block.domain.BlockedImgExample;
import java.util.List;
import org.apache.ibatis.annotations.DeleteProvider;
import org.apache.ibatis.annotations.Insert;
import org.apache.ibatis.annotations.InsertProvider;
import org.apache.ibatis.annotations.Mapper;
import org.apache.ibatis.annotations.Param;
import org.apache.ibatis.annotations.Result;
import org.apache.ibatis.annotations.Results;
import org.apache.ibatis.annotations.SelectProvider;
import org.apache.ibatis.annotations.UpdateProvider;
import org.apache.ibatis.type.JdbcType;
import org.springframework.stereotype.Repository;

/**
 * @author ctsi-biyi-generator
*/
@Mapper
@Repository
public interface BlockedImgRepository extends com.ctsi.ssdc.repository.BaseRepository<BlockedImg, Object, BlockedImgExample> {
    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table blocked_img
     *
     * @mbg.generated Wed Oct 28 17:18:33 CST 2020
     */
    @SelectProvider(type=BlockedImgSqlProvider.class, method="countByExample")
    long countByExample(BlockedImgExample example);

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table blocked_img
     *
     * @mbg.generated Wed Oct 28 17:18:33 CST 2020
     */
    @DeleteProvider(type=BlockedImgSqlProvider.class, method="deleteByExample")
    int deleteByExample(BlockedImgExample example);

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table blocked_img
     *
     * @mbg.generated Wed Oct 28 17:18:33 CST 2020
     */
    @Insert({
        "insert into trans_con_db.blocked_img (id, blocked_id, ",
        "img_name, img_path)",
        "values (#{id,jdbcType=DECIMAL}, #{blockedId,jdbcType=DECIMAL}, ",
        "#{imgName,jdbcType=VARCHAR}, #{imgPath,jdbcType=VARCHAR})"
    })
    int insert(BlockedImg record);

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table blocked_img
     *
     * @mbg.generated Wed Oct 28 17:18:33 CST 2020
     */
    @InsertProvider(type=BlockedImgSqlProvider.class, method="insertSelective")
    int insertSelective(BlockedImg record);

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table blocked_img
     *
     * @mbg.generated Wed Oct 28 17:18:33 CST 2020
     */
    @SelectProvider(type=BlockedImgSqlProvider.class, method="selectByExample")
    @Results({
        @Result(column="id", property="id", jdbcType=JdbcType.DECIMAL),
        @Result(column="blocked_id", property="blockedId", jdbcType=JdbcType.DECIMAL),
        @Result(column="img_name", property="imgName", jdbcType=JdbcType.VARCHAR),
        @Result(column="img_path", property="imgPath", jdbcType=JdbcType.VARCHAR)
    })
    List<BlockedImg> selectByExample(BlockedImgExample example);

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table blocked_img
     *
     * @mbg.generated Wed Oct 28 17:18:33 CST 2020
     */
    @UpdateProvider(type=BlockedImgSqlProvider.class, method="updateByExampleSelective")
    int updateByExampleSelective(@Param("record") BlockedImg record, @Param("example") BlockedImgExample example);

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table blocked_img
     *
     * @mbg.generated Wed Oct 28 17:18:33 CST 2020
     */
    @UpdateProvider(type=BlockedImgSqlProvider.class, method="updateByExample")
    int updateByExample(@Param("record") BlockedImg record, @Param("example") BlockedImgExample example);
}