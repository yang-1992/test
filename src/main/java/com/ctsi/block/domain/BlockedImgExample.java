package com.ctsi.block.domain;

import com.ctsi.ssdc.criteria.LongCriteria;
import com.ctsi.ssdc.criteria.StringCriteria;
import com.ctsi.ssdc.example.BaseExample;
import io.swagger.annotations.ApiParam;
import java.util.ArrayList;
import java.util.List;
import org.apache.commons.lang3.StringUtils;

/**
 * @author ctsi-biyi-generator
*/
public class BlockedImgExample extends BaseExample {
    /**
     * This field was generated by MyBatis Generator.
     * This field corresponds to the database table blocked_img
     *
     * @mbg.generated Wed Oct 28 17:18:33 CST 2020
     */
    protected String orderByClause;

    /**
     * This field was generated by MyBatis Generator.
     * This field corresponds to the database table blocked_img
     *
     * @mbg.generated Wed Oct 28 17:18:33 CST 2020
     */
    protected boolean distinct;

    /**
     * This field was generated by MyBatis Generator.
     * This field corresponds to the database table blocked_img
     *
     * @mbg.generated Wed Oct 28 17:18:33 CST 2020
     */
    protected List<Criteria> oredCriteria;

    /**
     * This field was generated by MyBatis Generator.
     * This field corresponds to the database table blocked_img
     *
     * @mbg.generated Wed Oct 28 17:18:33 CST 2020
     */
    private static final String LIKE_FORMAT = "%%%s%%";

    /**
     *
     * This field was generated by MyBatis Generator.
     * This field corresponds to the database column blocked_img.id
     *
     * @mbg.generated Wed Oct 28 17:18:33 CST 2020
     */
    private LongCriteria id;

    /**
     *
     * This field was generated by MyBatis Generator.
     * This field corresponds to the database column blocked_img.blocked_id
     *
     * @mbg.generated Wed Oct 28 17:18:33 CST 2020
     */
    private LongCriteria blockedId;

    /**
     *
     * This field was generated by MyBatis Generator.
     * This field corresponds to the database column blocked_img.img_name
     *
     * @mbg.generated Wed Oct 28 17:18:33 CST 2020
     */
    private StringCriteria imgName;

    /**
     *
     * This field was generated by MyBatis Generator.
     * This field corresponds to the database column blocked_img.img_path
     *
     * @mbg.generated Wed Oct 28 17:18:33 CST 2020
     */
    private StringCriteria imgPath;

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table blocked_img
     *
     * @mbg.generated Wed Oct 28 17:18:33 CST 2020
     */
    public BlockedImgExample() {
        oredCriteria = new ArrayList<Criteria>();
    }

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table blocked_img
     *
     * @mbg.generated Wed Oct 28 17:18:33 CST 2020
     */
    public void setOrderByClause(String orderByClause) {
        this.orderByClause = orderByClause;
    }

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table blocked_img
     *
     * @mbg.generated Wed Oct 28 17:18:33 CST 2020
     */
    public String getOrderByClause() {
        return orderByClause;
    }

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table blocked_img
     *
     * @mbg.generated Wed Oct 28 17:18:33 CST 2020
     */
    public void setDistinct(boolean distinct) {
        this.distinct = distinct;
    }

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table blocked_img
     *
     * @mbg.generated Wed Oct 28 17:18:33 CST 2020
     */
    public boolean isDistinct() {
        return distinct;
    }

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table blocked_img
     *
     * @mbg.generated Wed Oct 28 17:18:33 CST 2020
     */
    public List<Criteria> getOredCriteria() {
        return oredCriteria;
    }

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table blocked_img
     *
     * @mbg.generated Wed Oct 28 17:18:33 CST 2020
     */
    public void or(Criteria criteria) {
        oredCriteria.add(criteria);
    }

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table blocked_img
     *
     * @mbg.generated Wed Oct 28 17:18:33 CST 2020
     */
    public Criteria or() {
        Criteria criteria = createCriteriaInternal();
        oredCriteria.add(criteria);
        return criteria;
    }

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table blocked_img
     *
     * @mbg.generated Wed Oct 28 17:18:33 CST 2020
     */
    public Criteria createCriteria() {
        Criteria criteria = createCriteriaInternal();
        if (oredCriteria.size() == 0) {
            oredCriteria.add(criteria);
        }
        return criteria;
    }

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table blocked_img
     *
     * @mbg.generated Wed Oct 28 17:18:33 CST 2020
     */
    protected Criteria createCriteriaInternal() {
        Criteria criteria = new Criteria();
        return criteria;
    }

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table blocked_img
     *
     * @mbg.generated Wed Oct 28 17:18:33 CST 2020
     */
    public void clear() {
        oredCriteria.clear();
        orderByClause = null;
        distinct = false;
    }

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table blocked_img
     *
     * @mbg.generated Wed Oct 28 17:18:33 CST 2020
     */
    public LongCriteria getId() {
        return id;
    }

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table blocked_img
     *
     * @mbg.generated Wed Oct 28 17:18:33 CST 2020
     */
    public void setId(LongCriteria id) {
        this. id = id;
    }

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table blocked_img
     *
     * @mbg.generated Wed Oct 28 17:18:33 CST 2020
     */
    private void buildIdCriteria(Criteria criteria) {
        if (this.getId() == null) {
            return;
        }
        if (this.getId().getEquals() != null) {
            criteria.andIdEqualTo(this.getId().getEquals());
        } else {
            if (this.getId().getGreaterOrEqualThan() != null) {
                criteria.andIdGreaterThanOrEqualTo(this.getId().getGreaterOrEqualThan());
            }
            if (this.getId().getLessOrEqualThan() != null) {
                criteria.andIdLessThanOrEqualTo(this.getId().getLessOrEqualThan());
            }
        }
    }

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table blocked_img
     *
     * @mbg.generated Wed Oct 28 17:18:33 CST 2020
     */
    public LongCriteria getBlockedId() {
        return blockedId;
    }

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table blocked_img
     *
     * @mbg.generated Wed Oct 28 17:18:33 CST 2020
     */
    public void setBlockedId(LongCriteria blockedId) {
        this. blockedId = blockedId;
    }

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table blocked_img
     *
     * @mbg.generated Wed Oct 28 17:18:33 CST 2020
     */
    private void buildBlockedIdCriteria(Criteria criteria) {
        if (this.getBlockedId() == null) {
            return;
        }
        if (this.getBlockedId().getEquals() != null) {
            criteria.andBlockedIdEqualTo(this.getBlockedId().getEquals());
        } else {
            if (this.getBlockedId().getGreaterOrEqualThan() != null) {
                criteria.andBlockedIdGreaterThanOrEqualTo(this.getBlockedId().getGreaterOrEqualThan());
            }
            if (this.getBlockedId().getLessOrEqualThan() != null) {
                criteria.andBlockedIdLessThanOrEqualTo(this.getBlockedId().getLessOrEqualThan());
            }
        }
    }

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table blocked_img
     *
     * @mbg.generated Wed Oct 28 17:18:33 CST 2020
     */
    public StringCriteria getImgName() {
        return imgName;
    }

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table blocked_img
     *
     * @mbg.generated Wed Oct 28 17:18:33 CST 2020
     */
    public void setImgName(StringCriteria imgName) {
        this. imgName = imgName;
    }

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table blocked_img
     *
     * @mbg.generated Wed Oct 28 17:18:33 CST 2020
     */
    private void buildImgNameCriteria(Criteria criteria) {
        if (this.getImgName() == null) {
            return;
        }
        if (this.getImgName().getEquals() != null) {
            criteria.andImgNameEqualTo(this.getImgName().getEquals());
        } else {
            if (StringUtils.isNotBlank(this.getImgName().getContains())) {
                criteria.andImgNameLike(String.format(LIKE_FORMAT, this.getImgName().getContains()));
            }
        }
    }

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table blocked_img
     *
     * @mbg.generated Wed Oct 28 17:18:33 CST 2020
     */
    public StringCriteria getImgPath() {
        return imgPath;
    }

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table blocked_img
     *
     * @mbg.generated Wed Oct 28 17:18:33 CST 2020
     */
    public void setImgPath(StringCriteria imgPath) {
        this. imgPath = imgPath;
    }

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table blocked_img
     *
     * @mbg.generated Wed Oct 28 17:18:33 CST 2020
     */
    private void buildImgPathCriteria(Criteria criteria) {
        if (this.getImgPath() == null) {
            return;
        }
        if (this.getImgPath().getEquals() != null) {
            criteria.andImgPathEqualTo(this.getImgPath().getEquals());
        } else {
            if (StringUtils.isNotBlank(this.getImgPath().getContains())) {
                criteria.andImgPathLike(String.format(LIKE_FORMAT, this.getImgPath().getContains()));
            }
        }
    }

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table blocked_img
     *
     * @mbg.generated Wed Oct 28 17:18:33 CST 2020
     */
    public Object buildCriteria() {
        Criteria criteria = this.createCriteria();
        this.buildIdCriteria(criteria);
        this.buildBlockedIdCriteria(criteria);
        this.buildImgNameCriteria(criteria);
        this.buildImgPathCriteria(criteria);
        return criteria;
    }

    /**
     * This class was generated by MyBatis Generator.
     * This class corresponds to the database table blocked_img
     *
     * @mbg.generated Wed Oct 28 17:18:33 CST 2020
     */
    protected abstract static class GeneratedCriteria {
        protected List<Criterion> criteria;

        protected GeneratedCriteria() {
            super();
            criteria = new ArrayList<Criterion>();
        }

        public boolean isValid() {
            return criteria.size() > 0;
        }

        public List<Criterion> getAllCriteria() {
            return criteria;
        }

        public List<Criterion> getCriteria() {
            return criteria;
        }

        protected void addCriterion(String condition) {
            if (condition == null) {
                throw new RuntimeException("Value for condition cannot be null");
            }
            criteria.add(new Criterion(condition));
        }

        protected void addCriterion(String condition, Object value, String property) {
            if (value == null) {
                throw new RuntimeException("Value for " + property + " cannot be null");
            }
            criteria.add(new Criterion(condition, value));
        }

        protected void addCriterion(String condition, Object value1, Object value2, String property) {
            if (value1 == null || value2 == null) {
                throw new RuntimeException("Between values for " + property + " cannot be null");
            }
            criteria.add(new Criterion(condition, value1, value2));
        }

        public Criteria andIdIsNull() {
            addCriterion("id is null");
            return (Criteria) this;
        }

        public Criteria andIdIsNotNull() {
            addCriterion("id is not null");
            return (Criteria) this;
        }

        public Criteria andIdEqualTo(Long value) {
            addCriterion("id =", value, "id");
            return (Criteria) this;
        }

        public Criteria andIdNotEqualTo(Long value) {
            addCriterion("id <>", value, "id");
            return (Criteria) this;
        }

        public Criteria andIdGreaterThan(Long value) {
            addCriterion("id >", value, "id");
            return (Criteria) this;
        }

        public Criteria andIdGreaterThanOrEqualTo(Long value) {
            addCriterion("id >=", value, "id");
            return (Criteria) this;
        }

        public Criteria andIdLessThan(Long value) {
            addCriterion("id <", value, "id");
            return (Criteria) this;
        }

        public Criteria andIdLessThanOrEqualTo(Long value) {
            addCriterion("id <=", value, "id");
            return (Criteria) this;
        }

        public Criteria andIdIn(List<Long> values) {
            addCriterion("id in", values, "id");
            return (Criteria) this;
        }

        public Criteria andIdNotIn(List<Long> values) {
            addCriterion("id not in", values, "id");
            return (Criteria) this;
        }

        public Criteria andIdBetween(Long value1, Long value2) {
            addCriterion("id between", value1, value2, "id");
            return (Criteria) this;
        }

        public Criteria andIdNotBetween(Long value1, Long value2) {
            addCriterion("id not between", value1, value2, "id");
            return (Criteria) this;
        }

        public Criteria andBlockedIdIsNull() {
            addCriterion("blocked_id is null");
            return (Criteria) this;
        }

        public Criteria andBlockedIdIsNotNull() {
            addCriterion("blocked_id is not null");
            return (Criteria) this;
        }

        public Criteria andBlockedIdEqualTo(Long value) {
            addCriterion("blocked_id =", value, "blockedId");
            return (Criteria) this;
        }

        public Criteria andBlockedIdNotEqualTo(Long value) {
            addCriterion("blocked_id <>", value, "blockedId");
            return (Criteria) this;
        }

        public Criteria andBlockedIdGreaterThan(Long value) {
            addCriterion("blocked_id >", value, "blockedId");
            return (Criteria) this;
        }

        public Criteria andBlockedIdGreaterThanOrEqualTo(Long value) {
            addCriterion("blocked_id >=", value, "blockedId");
            return (Criteria) this;
        }

        public Criteria andBlockedIdLessThan(Long value) {
            addCriterion("blocked_id <", value, "blockedId");
            return (Criteria) this;
        }

        public Criteria andBlockedIdLessThanOrEqualTo(Long value) {
            addCriterion("blocked_id <=", value, "blockedId");
            return (Criteria) this;
        }

        public Criteria andBlockedIdIn(List<Long> values) {
            addCriterion("blocked_id in", values, "blockedId");
            return (Criteria) this;
        }

        public Criteria andBlockedIdNotIn(List<Long> values) {
            addCriterion("blocked_id not in", values, "blockedId");
            return (Criteria) this;
        }

        public Criteria andBlockedIdBetween(Long value1, Long value2) {
            addCriterion("blocked_id between", value1, value2, "blockedId");
            return (Criteria) this;
        }

        public Criteria andBlockedIdNotBetween(Long value1, Long value2) {
            addCriterion("blocked_id not between", value1, value2, "blockedId");
            return (Criteria) this;
        }

        public Criteria andImgNameIsNull() {
            addCriterion("img_name is null");
            return (Criteria) this;
        }

        public Criteria andImgNameIsNotNull() {
            addCriterion("img_name is not null");
            return (Criteria) this;
        }

        public Criteria andImgNameEqualTo(String value) {
            addCriterion("img_name =", value, "imgName");
            return (Criteria) this;
        }

        public Criteria andImgNameNotEqualTo(String value) {
            addCriterion("img_name <>", value, "imgName");
            return (Criteria) this;
        }

        public Criteria andImgNameGreaterThan(String value) {
            addCriterion("img_name >", value, "imgName");
            return (Criteria) this;
        }

        public Criteria andImgNameGreaterThanOrEqualTo(String value) {
            addCriterion("img_name >=", value, "imgName");
            return (Criteria) this;
        }

        public Criteria andImgNameLessThan(String value) {
            addCriterion("img_name <", value, "imgName");
            return (Criteria) this;
        }

        public Criteria andImgNameLessThanOrEqualTo(String value) {
            addCriterion("img_name <=", value, "imgName");
            return (Criteria) this;
        }

        public Criteria andImgNameLike(String value) {
            addCriterion("img_name like", value, "imgName");
            return (Criteria) this;
        }

        public Criteria andImgNameNotLike(String value) {
            addCriterion("img_name not like", value, "imgName");
            return (Criteria) this;
        }

        public Criteria andImgNameIn(List<String> values) {
            addCriterion("img_name in", values, "imgName");
            return (Criteria) this;
        }

        public Criteria andImgNameNotIn(List<String> values) {
            addCriterion("img_name not in", values, "imgName");
            return (Criteria) this;
        }

        public Criteria andImgNameBetween(String value1, String value2) {
            addCriterion("img_name between", value1, value2, "imgName");
            return (Criteria) this;
        }

        public Criteria andImgNameNotBetween(String value1, String value2) {
            addCriterion("img_name not between", value1, value2, "imgName");
            return (Criteria) this;
        }

        public Criteria andImgPathIsNull() {
            addCriterion("img_path is null");
            return (Criteria) this;
        }

        public Criteria andImgPathIsNotNull() {
            addCriterion("img_path is not null");
            return (Criteria) this;
        }

        public Criteria andImgPathEqualTo(String value) {
            addCriterion("img_path =", value, "imgPath");
            return (Criteria) this;
        }

        public Criteria andImgPathNotEqualTo(String value) {
            addCriterion("img_path <>", value, "imgPath");
            return (Criteria) this;
        }

        public Criteria andImgPathGreaterThan(String value) {
            addCriterion("img_path >", value, "imgPath");
            return (Criteria) this;
        }

        public Criteria andImgPathGreaterThanOrEqualTo(String value) {
            addCriterion("img_path >=", value, "imgPath");
            return (Criteria) this;
        }

        public Criteria andImgPathLessThan(String value) {
            addCriterion("img_path <", value, "imgPath");
            return (Criteria) this;
        }

        public Criteria andImgPathLessThanOrEqualTo(String value) {
            addCriterion("img_path <=", value, "imgPath");
            return (Criteria) this;
        }

        public Criteria andImgPathLike(String value) {
            addCriterion("img_path like", value, "imgPath");
            return (Criteria) this;
        }

        public Criteria andImgPathNotLike(String value) {
            addCriterion("img_path not like", value, "imgPath");
            return (Criteria) this;
        }

        public Criteria andImgPathIn(List<String> values) {
            addCriterion("img_path in", values, "imgPath");
            return (Criteria) this;
        }

        public Criteria andImgPathNotIn(List<String> values) {
            addCriterion("img_path not in", values, "imgPath");
            return (Criteria) this;
        }

        public Criteria andImgPathBetween(String value1, String value2) {
            addCriterion("img_path between", value1, value2, "imgPath");
            return (Criteria) this;
        }

        public Criteria andImgPathNotBetween(String value1, String value2) {
            addCriterion("img_path not between", value1, value2, "imgPath");
            return (Criteria) this;
        }
    }

    /**
     * This class was generated by MyBatis Generator.
     * This class corresponds to the database table blocked_img
     *
     * @mbg.generated do_not_delete_during_merge Wed Oct 28 17:18:33 CST 2020
     */
    public static class Criteria extends GeneratedCriteria {

        protected Criteria() {
            super();
        }
    }

    /**
     * This class was generated by MyBatis Generator.
     * This class corresponds to the database table blocked_img
     *
     * @mbg.generated Wed Oct 28 17:18:33 CST 2020
     */
    public static class Criterion {
        @ApiParam(hidden=true)
        private String condition;

        @ApiParam(hidden=true)
        private Object value;

        @ApiParam(hidden=true)
        private Object secondValue;

        @ApiParam(hidden=true)
        private boolean noValue;

        @ApiParam(hidden=true)
        private boolean singleValue;

        @ApiParam(hidden=true)
        private boolean betweenValue;

        @ApiParam(hidden=true)
        private boolean listValue;

        @ApiParam(hidden=true)
        private String typeHandler;

        public String getCondition() {
            return condition;
        }

        public Object getValue() {
            return value;
        }

        public Object getSecondValue() {
            return secondValue;
        }

        public boolean isNoValue() {
            return noValue;
        }

        public boolean isSingleValue() {
            return singleValue;
        }

        public boolean isBetweenValue() {
            return betweenValue;
        }

        public boolean isListValue() {
            return listValue;
        }

        public String getTypeHandler() {
            return typeHandler;
        }

        protected Criterion(String condition) {
            super();
            this.condition = condition;
            this.typeHandler = null;
            this.noValue = true;
        }

        protected Criterion(String condition, Object value, String typeHandler) {
            super();
            this.condition = condition;
            this.value = value;
            this.typeHandler = typeHandler;
            if (value instanceof List<?>) {
                this.listValue = true;
            } else {
                this.singleValue = true;
            }
        }

        protected Criterion(String condition, Object value) {
            this(condition, value, null);
        }

        protected Criterion(String condition, Object value, Object secondValue, String typeHandler) {
            super();
            this.condition = condition;
            this.value = value;
            this.secondValue = secondValue;
            this.typeHandler = typeHandler;
            this.betweenValue = true;
        }

        protected Criterion(String condition, Object value, Object secondValue) {
            this(condition, value, secondValue, null);
        }
    }
}