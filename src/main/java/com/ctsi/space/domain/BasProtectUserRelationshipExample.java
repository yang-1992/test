package com.ctsi.space.domain;

import com.ctsi.ssdc.criteria.LongCriteria;
import com.ctsi.ssdc.example.BaseExample;
import io.swagger.annotations.ApiParam;

import java.util.ArrayList;
import java.util.List;

/**
 * @author ctsi-biyi-generator
*/
public class BasProtectUserRelationshipExample extends BaseExample {
    /**
     * This field was generated by MyBatis Generator.
     * This field corresponds to the database table bas_protect_user_relationship
     *
     * @mbg.generated Fri Sep 11 16:09:31 CST 2020
     */
    protected String orderByClause;

    /**
     * This field was generated by MyBatis Generator.
     * This field corresponds to the database table bas_protect_user_relationship
     *
     * @mbg.generated Fri Sep 11 16:09:31 CST 2020
     */
    protected boolean distinct;

    /**
     * This field was generated by MyBatis Generator.
     * This field corresponds to the database table bas_protect_user_relationship
     *
     * @mbg.generated Fri Sep 11 16:09:31 CST 2020
     */
    protected List<Criteria> oredCriteria;

    /**
     * This field was generated by MyBatis Generator.
     * This field corresponds to the database table bas_protect_user_relationship
     *
     * @mbg.generated Fri Sep 11 16:09:31 CST 2020
     */
    private static final String LIKE_FORMAT = "%%%s%%";

    /**
     *
     * This field was generated by MyBatis Generator.
     * This field corresponds to the database column bas_protect_user_relationship.relationship_id
     *
     * @mbg.generated Fri Sep 11 16:09:31 CST 2020
     */
    private LongCriteria relationshipId;

    /**
     *
     * This field was generated by MyBatis Generator.
     * This field corresponds to the database column bas_protect_user_relationship.protect_user_id
     *
     * @mbg.generated Fri Sep 11 16:09:31 CST 2020
     */
    private LongCriteria protectUserId;

    /**
     *
     * This field was generated by MyBatis Generator.
     * This field corresponds to the database column bas_protect_user_relationship.user_id
     *
     * @mbg.generated Fri Sep 11 16:09:31 CST 2020
     */
    private LongCriteria userId;

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table bas_protect_user_relationship
     *
     * @mbg.generated Fri Sep 11 16:09:31 CST 2020
     */
    public BasProtectUserRelationshipExample() {
        oredCriteria = new ArrayList<Criteria>();
    }

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table bas_protect_user_relationship
     *
     * @mbg.generated Fri Sep 11 16:09:31 CST 2020
     */
    public void setOrderByClause(String orderByClause) {
        this.orderByClause = orderByClause;
    }

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table bas_protect_user_relationship
     *
     * @mbg.generated Fri Sep 11 16:09:31 CST 2020
     */
    public String getOrderByClause() {
        return orderByClause;
    }

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table bas_protect_user_relationship
     *
     * @mbg.generated Fri Sep 11 16:09:31 CST 2020
     */
    public void setDistinct(boolean distinct) {
        this.distinct = distinct;
    }

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table bas_protect_user_relationship
     *
     * @mbg.generated Fri Sep 11 16:09:31 CST 2020
     */
    public boolean isDistinct() {
        return distinct;
    }

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table bas_protect_user_relationship
     *
     * @mbg.generated Fri Sep 11 16:09:31 CST 2020
     */
    public List<Criteria> getOredCriteria() {
        return oredCriteria;
    }

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table bas_protect_user_relationship
     *
     * @mbg.generated Fri Sep 11 16:09:31 CST 2020
     */
    public void or(Criteria criteria) {
        oredCriteria.add(criteria);
    }

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table bas_protect_user_relationship
     *
     * @mbg.generated Fri Sep 11 16:09:31 CST 2020
     */
    public Criteria or() {
        Criteria criteria = createCriteriaInternal();
        oredCriteria.add(criteria);
        return criteria;
    }

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table bas_protect_user_relationship
     *
     * @mbg.generated Fri Sep 11 16:09:31 CST 2020
     */
    public Criteria createCriteria() {
        Criteria criteria = createCriteriaInternal();
        if (oredCriteria.size() == 0) {
            oredCriteria.add(criteria);
        }
        return criteria;
    }

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table bas_protect_user_relationship
     *
     * @mbg.generated Fri Sep 11 16:09:31 CST 2020
     */
    protected Criteria createCriteriaInternal() {
        Criteria criteria = new Criteria();
        return criteria;
    }

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table bas_protect_user_relationship
     *
     * @mbg.generated Fri Sep 11 16:09:31 CST 2020
     */
    public void clear() {
        oredCriteria.clear();
        orderByClause = null;
        distinct = false;
    }

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table bas_protect_user_relationship
     *
     * @mbg.generated Fri Sep 11 16:09:31 CST 2020
     */
    public LongCriteria getRelationshipId() {
        return relationshipId;
    }

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table bas_protect_user_relationship
     *
     * @mbg.generated Fri Sep 11 16:09:31 CST 2020
     */
    public void setRelationshipId(LongCriteria relationshipId) {
        this. relationshipId = relationshipId;
    }

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table bas_protect_user_relationship
     *
     * @mbg.generated Fri Sep 11 16:09:31 CST 2020
     */
    private void buildRelationshipIdCriteria(Criteria criteria) {
        if (this.getRelationshipId() == null) {
            return;
        }
        if (this.getRelationshipId().getEquals() != null) {
            criteria.andRelationshipIdEqualTo(this.getRelationshipId().getEquals());
        } else {
            if (this.getRelationshipId().getGreaterOrEqualThan() != null) {
                criteria.andRelationshipIdGreaterThanOrEqualTo(this.getRelationshipId().getGreaterOrEqualThan());
            }
            if (this.getRelationshipId().getLessOrEqualThan() != null) {
                criteria.andRelationshipIdLessThanOrEqualTo(this.getRelationshipId().getLessOrEqualThan());
            }
        }
    }

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table bas_protect_user_relationship
     *
     * @mbg.generated Fri Sep 11 16:09:31 CST 2020
     */
    public LongCriteria getProtectUserId() {
        return protectUserId;
    }

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table bas_protect_user_relationship
     *
     * @mbg.generated Fri Sep 11 16:09:31 CST 2020
     */
    public void setProtectUserId(LongCriteria protectUserId) {
        this. protectUserId = protectUserId;
    }

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table bas_protect_user_relationship
     *
     * @mbg.generated Fri Sep 11 16:09:31 CST 2020
     */
    private void buildProtectUserIdCriteria(Criteria criteria) {
        if (this.getProtectUserId() == null) {
            return;
        }
        if (this.getProtectUserId().getEquals() != null) {
            criteria.andProtectUserIdEqualTo(this.getProtectUserId().getEquals());
        } else {
            if (this.getProtectUserId().getGreaterOrEqualThan() != null) {
                criteria.andProtectUserIdGreaterThanOrEqualTo(this.getProtectUserId().getGreaterOrEqualThan());
            }
            if (this.getProtectUserId().getLessOrEqualThan() != null) {
                criteria.andProtectUserIdLessThanOrEqualTo(this.getProtectUserId().getLessOrEqualThan());
            }
        }
    }

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table bas_protect_user_relationship
     *
     * @mbg.generated Fri Sep 11 16:09:31 CST 2020
     */
    public LongCriteria getUserId() {
        return userId;
    }

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table bas_protect_user_relationship
     *
     * @mbg.generated Fri Sep 11 16:09:31 CST 2020
     */
    public void setUserId(LongCriteria userId) {
        this. userId = userId;
    }

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table bas_protect_user_relationship
     *
     * @mbg.generated Fri Sep 11 16:09:31 CST 2020
     */
    private void buildUserIdCriteria(Criteria criteria) {
        if (this.getUserId() == null) {
            return;
        }
        if (this.getUserId().getEquals() != null) {
            criteria.andUserIdEqualTo(this.getUserId().getEquals());
        } else {
            if (this.getUserId().getGreaterOrEqualThan() != null) {
                criteria.andUserIdGreaterThanOrEqualTo(this.getUserId().getGreaterOrEqualThan());
            }
            if (this.getUserId().getLessOrEqualThan() != null) {
                criteria.andUserIdLessThanOrEqualTo(this.getUserId().getLessOrEqualThan());
            }
        }
    }

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table bas_protect_user_relationship
     *
     * @mbg.generated Fri Sep 11 16:09:31 CST 2020
     */
    public Object buildCriteria() {
        Criteria criteria = this.createCriteria();
        this.buildRelationshipIdCriteria(criteria);
        this.buildProtectUserIdCriteria(criteria);
        this.buildUserIdCriteria(criteria);
        return criteria;
    }

    /**
     * This class was generated by MyBatis Generator.
     * This class corresponds to the database table bas_protect_user_relationship
     *
     * @mbg.generated Fri Sep 11 16:09:31 CST 2020
     */
    protected abstract static class GeneratedCriteria {
        protected List<Criterion> criteria;

        protected GeneratedCriteria() {
            super();
            criteria = new ArrayList<Criterion>();
        }

        public boolean isValid() {
            return criteria.size() > 0;
        }

        public List<Criterion> getAllCriteria() {
            return criteria;
        }

        public List<Criterion> getCriteria() {
            return criteria;
        }

        protected void addCriterion(String condition) {
            if (condition == null) {
                throw new RuntimeException("Value for condition cannot be null");
            }
            criteria.add(new Criterion(condition));
        }

        protected void addCriterion(String condition, Object value, String property) {
            if (value == null) {
                throw new RuntimeException("Value for " + property + " cannot be null");
            }
            criteria.add(new Criterion(condition, value));
        }

        protected void addCriterion(String condition, Object value1, Object value2, String property) {
            if (value1 == null || value2 == null) {
                throw new RuntimeException("Between values for " + property + " cannot be null");
            }
            criteria.add(new Criterion(condition, value1, value2));
        }

        public Criteria andRelationshipIdIsNull() {
            addCriterion("relationship_id is null");
            return (Criteria) this;
        }

        public Criteria andRelationshipIdIsNotNull() {
            addCriterion("relationship_id is not null");
            return (Criteria) this;
        }

        public Criteria andRelationshipIdEqualTo(Long value) {
            addCriterion("relationship_id =", value, "relationshipId");
            return (Criteria) this;
        }

        public Criteria andRelationshipIdNotEqualTo(Long value) {
            addCriterion("relationship_id <>", value, "relationshipId");
            return (Criteria) this;
        }

        public Criteria andRelationshipIdGreaterThan(Long value) {
            addCriterion("relationship_id >", value, "relationshipId");
            return (Criteria) this;
        }

        public Criteria andRelationshipIdGreaterThanOrEqualTo(Long value) {
            addCriterion("relationship_id >=", value, "relationshipId");
            return (Criteria) this;
        }

        public Criteria andRelationshipIdLessThan(Long value) {
            addCriterion("relationship_id <", value, "relationshipId");
            return (Criteria) this;
        }

        public Criteria andRelationshipIdLessThanOrEqualTo(Long value) {
            addCriterion("relationship_id <=", value, "relationshipId");
            return (Criteria) this;
        }

        public Criteria andRelationshipIdIn(List<Long> values) {
            addCriterion("relationship_id in", values, "relationshipId");
            return (Criteria) this;
        }

        public Criteria andRelationshipIdNotIn(List<Long> values) {
            addCriterion("relationship_id not in", values, "relationshipId");
            return (Criteria) this;
        }

        public Criteria andRelationshipIdBetween(Long value1, Long value2) {
            addCriterion("relationship_id between", value1, value2, "relationshipId");
            return (Criteria) this;
        }

        public Criteria andRelationshipIdNotBetween(Long value1, Long value2) {
            addCriterion("relationship_id not between", value1, value2, "relationshipId");
            return (Criteria) this;
        }

        public Criteria andProtectUserIdIsNull() {
            addCriterion("protect_user_id is null");
            return (Criteria) this;
        }

        public Criteria andProtectUserIdIsNotNull() {
            addCriterion("protect_user_id is not null");
            return (Criteria) this;
        }

        public Criteria andProtectUserIdEqualTo(Long value) {
            addCriterion("protect_user_id =", value, "protectUserId");
            return (Criteria) this;
        }

        public Criteria andProtectUserIdNotEqualTo(Long value) {
            addCriterion("protect_user_id <>", value, "protectUserId");
            return (Criteria) this;
        }

        public Criteria andProtectUserIdGreaterThan(Long value) {
            addCriterion("protect_user_id >", value, "protectUserId");
            return (Criteria) this;
        }

        public Criteria andProtectUserIdGreaterThanOrEqualTo(Long value) {
            addCriterion("protect_user_id >=", value, "protectUserId");
            return (Criteria) this;
        }

        public Criteria andProtectUserIdLessThan(Long value) {
            addCriterion("protect_user_id <", value, "protectUserId");
            return (Criteria) this;
        }

        public Criteria andProtectUserIdLessThanOrEqualTo(Long value) {
            addCriterion("protect_user_id <=", value, "protectUserId");
            return (Criteria) this;
        }

        public Criteria andProtectUserIdIn(List<Long> values) {
            addCriterion("protect_user_id in", values, "protectUserId");
            return (Criteria) this;
        }

        public Criteria andProtectUserIdNotIn(List<Long> values) {
            addCriterion("protect_user_id not in", values, "protectUserId");
            return (Criteria) this;
        }

        public Criteria andProtectUserIdBetween(Long value1, Long value2) {
            addCriterion("protect_user_id between", value1, value2, "protectUserId");
            return (Criteria) this;
        }

        public Criteria andProtectUserIdNotBetween(Long value1, Long value2) {
            addCriterion("protect_user_id not between", value1, value2, "protectUserId");
            return (Criteria) this;
        }

        public Criteria andUserIdIsNull() {
            addCriterion("user_id is null");
            return (Criteria) this;
        }

        public Criteria andUserIdIsNotNull() {
            addCriterion("user_id is not null");
            return (Criteria) this;
        }

        public Criteria andUserIdEqualTo(Long value) {
            addCriterion("user_id =", value, "userId");
            return (Criteria) this;
        }

        public Criteria andUserIdNotEqualTo(Long value) {
            addCriterion("user_id <>", value, "userId");
            return (Criteria) this;
        }

        public Criteria andUserIdGreaterThan(Long value) {
            addCriterion("user_id >", value, "userId");
            return (Criteria) this;
        }

        public Criteria andUserIdGreaterThanOrEqualTo(Long value) {
            addCriterion("user_id >=", value, "userId");
            return (Criteria) this;
        }

        public Criteria andUserIdLessThan(Long value) {
            addCriterion("user_id <", value, "userId");
            return (Criteria) this;
        }

        public Criteria andUserIdLessThanOrEqualTo(Long value) {
            addCriterion("user_id <=", value, "userId");
            return (Criteria) this;
        }

        public Criteria andUserIdIn(List<Long> values) {
            addCriterion("user_id in", values, "userId");
            return (Criteria) this;
        }

        public Criteria andUserIdNotIn(List<Long> values) {
            addCriterion("user_id not in", values, "userId");
            return (Criteria) this;
        }

        public Criteria andUserIdBetween(Long value1, Long value2) {
            addCriterion("user_id between", value1, value2, "userId");
            return (Criteria) this;
        }

        public Criteria andUserIdNotBetween(Long value1, Long value2) {
            addCriterion("user_id not between", value1, value2, "userId");
            return (Criteria) this;
        }
    }

    /**
     * This class was generated by MyBatis Generator.
     * This class corresponds to the database table bas_protect_user_relationship
     *
     * @mbg.generated do_not_delete_during_merge Fri Sep 11 16:09:31 CST 2020
     */
    public static class Criteria extends GeneratedCriteria {

        protected Criteria() {
            super();
        }
    }

    /**
     * This class was generated by MyBatis Generator.
     * This class corresponds to the database table bas_protect_user_relationship
     *
     * @mbg.generated Fri Sep 11 16:09:31 CST 2020
     */
    public static class Criterion {
        @ApiParam(hidden=true)
        private String condition;

        @ApiParam(hidden=true)
        private Object value;

        @ApiParam(hidden=true)
        private Object secondValue;

        @ApiParam(hidden=true)
        private boolean noValue;

        @ApiParam(hidden=true)
        private boolean singleValue;

        @ApiParam(hidden=true)
        private boolean betweenValue;

        @ApiParam(hidden=true)
        private boolean listValue;

        @ApiParam(hidden=true)
        private String typeHandler;

        public String getCondition() {
            return condition;
        }

        public Object getValue() {
            return value;
        }

        public Object getSecondValue() {
            return secondValue;
        }

        public boolean isNoValue() {
            return noValue;
        }

        public boolean isSingleValue() {
            return singleValue;
        }

        public boolean isBetweenValue() {
            return betweenValue;
        }

        public boolean isListValue() {
            return listValue;
        }

        public String getTypeHandler() {
            return typeHandler;
        }

        protected Criterion(String condition) {
            super();
            this.condition = condition;
            this.typeHandler = null;
            this.noValue = true;
        }

        protected Criterion(String condition, Object value, String typeHandler) {
            super();
            this.condition = condition;
            this.value = value;
            this.typeHandler = typeHandler;
            if (value instanceof List<?>) {
                this.listValue = true;
            } else {
                this.singleValue = true;
            }
        }

        protected Criterion(String condition, Object value) {
            this(condition, value, null);
        }

        protected Criterion(String condition, Object value, Object secondValue, String typeHandler) {
            super();
            this.condition = condition;
            this.value = value;
            this.secondValue = secondValue;
            this.typeHandler = typeHandler;
            this.betweenValue = true;
        }

        protected Criterion(String condition, Object value, Object secondValue) {
            this(condition, value, secondValue, null);
        }
    }
}