package com.ctsi.space.domain;

import com.ctsi.ssdc.criteria.IntegerCriteria;
import com.ctsi.ssdc.criteria.LongCriteria;
import com.ctsi.ssdc.criteria.StringCriteria;
import com.ctsi.ssdc.example.BaseExample;
import io.swagger.annotations.ApiParam;
import java.util.ArrayList;
import java.util.List;
import org.apache.commons.lang3.StringUtils;

/**
 * @author ctsi-biyi-generator
 */
public class BasProtectedUserExample extends BaseExample {
    /**
     * This field was generated by MyBatis Generator.
     * This field corresponds to the database table bas_protected_user
     *
     * @mbg.generated Thu Sep 24 14:35:22 CST 2020
     */
    protected String orderByClause;

    /**
     * This field was generated by MyBatis Generator.
     * This field corresponds to the database table bas_protected_user
     *
     * @mbg.generated Thu Sep 24 14:35:22 CST 2020
     */
    protected boolean distinct;

    /**
     * This field was generated by MyBatis Generator.
     * This field corresponds to the database table bas_protected_user
     *
     * @mbg.generated Thu Sep 24 14:35:22 CST 2020
     */
    protected List<Criteria> oredCriteria;

    /**
     * This field was generated by MyBatis Generator.
     * This field corresponds to the database table bas_protected_user
     *
     * @mbg.generated Thu Sep 24 14:35:22 CST 2020
     */
    private static final String LIKE_FORMAT = "%%%s%%";

    /**
     *
     * This field was generated by MyBatis Generator.
     * This field corresponds to the database column bas_protected_user.user_id
     *
     * @mbg.generated Thu Sep 24 14:35:22 CST 2020
     */
    private LongCriteria userId;

    /**
     *
     * This field was generated by MyBatis Generator.
     * This field corresponds to the database column bas_protected_user.user_name
     *
     * @mbg.generated Thu Sep 24 14:35:22 CST 2020
     */
    private StringCriteria userName;

    /**
     *
     * This field was generated by MyBatis Generator.
     * This field corresponds to the database column bas_protected_user.user_full_name
     *
     * @mbg.generated Thu Sep 24 14:35:22 CST 2020
     */
    private StringCriteria userFullName;

    /**
     *
     * This field was generated by MyBatis Generator.
     * This field corresponds to the database column bas_protected_user.user_level
     *
     * @mbg.generated Thu Sep 24 14:35:22 CST 2020
     */
    private LongCriteria userLevel;

    /**
     *
     * This field was generated by MyBatis Generator.
     * This field corresponds to the database column bas_protected_user.area
     *
     * @mbg.generated Thu Sep 24 14:35:22 CST 2020
     */
    private LongCriteria area;

    /**
     *
     * This field was generated by MyBatis Generator.
     * This field corresponds to the database column bas_protected_user.address
     *
     * @mbg.generated Thu Sep 24 14:35:22 CST 2020
     */
    private StringCriteria address;

    /**
     *
     * This field was generated by MyBatis Generator.
     * This field corresponds to the database column bas_protected_user.connect_user
     *
     * @mbg.generated Thu Sep 24 14:35:22 CST 2020
     */
    private StringCriteria connectUser;

    /**
     *
     * This field was generated by MyBatis Generator.
     * This field corresponds to the database column bas_protected_user.connect_tel
     *
     * @mbg.generated Thu Sep 24 14:35:22 CST 2020
     */
    private StringCriteria connectTel;

    /**
     *
     * This field was generated by MyBatis Generator.
     * This field corresponds to the database column bas_protected_user.armt_type
     *
     * @mbg.generated Thu Sep 24 14:35:22 CST 2020
     */
    private LongCriteria armtType;

    /**
     *
     * This field was generated by MyBatis Generator.
     * This field corresponds to the database column bas_protected_user.is_valid
     *
     * @mbg.generated Thu Sep 24 14:35:22 CST 2020
     */
    private LongCriteria isValid;

    /**
     *
     * This field was generated by MyBatis Generator.
     * This field corresponds to the database column bas_protected_user.note
     *
     * @mbg.generated Thu Sep 24 14:35:22 CST 2020
     */
    private StringCriteria note;

    /**
     *
     * This field was generated by MyBatis Generator.
     * This field corresponds to the database column bas_protected_user.cus_id
     *
     * @mbg.generated Thu Sep 24 14:35:22 CST 2020
     */
    private LongCriteria cusId;

    /**
     *
     * This field was generated by MyBatis Generator.
     * This field corresponds to the database column bas_protected_user.user_type
     *
     * @mbg.generated Thu Sep 24 14:35:22 CST 2020
     */
    private LongCriteria userType;

    /**
     *
     * This field was generated by MyBatis Generator.
     * This field corresponds to the database column bas_protected_user.armt_name
     *
     * @mbg.generated Thu Sep 24 14:35:22 CST 2020
     */
    private StringCriteria armtName;

    /**
     *
     * This field was generated by MyBatis Generator.
     * This field corresponds to the database column bas_protected_user.user_mark
     *
     * @mbg.generated Thu Sep 24 14:35:22 CST 2020
     */
    private LongCriteria userMark;

    /**
     *
     * This field was generated by MyBatis Generator.
     * This field corresponds to the database column bas_protected_user.cus_type
     *
     * @mbg.generated Thu Sep 24 14:35:22 CST 2020
     */
    private IntegerCriteria cusType;

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table bas_protected_user
     *
     * @mbg.generated Thu Sep 24 14:35:22 CST 2020
     */
    public BasProtectedUserExample() {
        oredCriteria = new ArrayList<Criteria>();
    }

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table bas_protected_user
     *
     * @mbg.generated Thu Sep 24 14:35:22 CST 2020
     */
    public void setOrderByClause(String orderByClause) {
        this.orderByClause = orderByClause;
    }

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table bas_protected_user
     *
     * @mbg.generated Thu Sep 24 14:35:22 CST 2020
     */
    public String getOrderByClause() {
        return orderByClause;
    }

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table bas_protected_user
     *
     * @mbg.generated Thu Sep 24 14:35:22 CST 2020
     */
    public void setDistinct(boolean distinct) {
        this.distinct = distinct;
    }

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table bas_protected_user
     *
     * @mbg.generated Thu Sep 24 14:35:22 CST 2020
     */
    public boolean isDistinct() {
        return distinct;
    }

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table bas_protected_user
     *
     * @mbg.generated Thu Sep 24 14:35:22 CST 2020
     */
    public List<Criteria> getOredCriteria() {
        return oredCriteria;
    }

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table bas_protected_user
     *
     * @mbg.generated Thu Sep 24 14:35:22 CST 2020
     */
    public void or(Criteria criteria) {
        oredCriteria.add(criteria);
    }

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table bas_protected_user
     *
     * @mbg.generated Thu Sep 24 14:35:22 CST 2020
     */
    public Criteria or() {
        Criteria criteria = createCriteriaInternal();
        oredCriteria.add(criteria);
        return criteria;
    }

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table bas_protected_user
     *
     * @mbg.generated Thu Sep 24 14:35:22 CST 2020
     */
    public Criteria createCriteria() {
        Criteria criteria = createCriteriaInternal();
        if (oredCriteria.size() == 0) {
            oredCriteria.add(criteria);
        }
        return criteria;
    }

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table bas_protected_user
     *
     * @mbg.generated Thu Sep 24 14:35:22 CST 2020
     */
    protected Criteria createCriteriaInternal() {
        Criteria criteria = new Criteria();
        return criteria;
    }

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table bas_protected_user
     *
     * @mbg.generated Thu Sep 24 14:35:22 CST 2020
     */
    public void clear() {
        oredCriteria.clear();
        orderByClause = null;
        distinct = false;
    }

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table bas_protected_user
     *
     * @mbg.generated Thu Sep 24 14:35:22 CST 2020
     */
    public LongCriteria getUserId() {
        return userId;
    }

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table bas_protected_user
     *
     * @mbg.generated Thu Sep 24 14:35:22 CST 2020
     */
    public void setUserId(LongCriteria userId) {
        this. userId = userId;
    }

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table bas_protected_user
     *
     * @mbg.generated Thu Sep 24 14:35:22 CST 2020
     */
    private void buildUserIdCriteria(Criteria criteria) {
        if (this.getUserId() == null) {
            return;
        }
        if (this.getUserId().getEquals() != null) {
            criteria.andUserIdEqualTo(this.getUserId().getEquals());
        } else {
            if (this.getUserId().getGreaterOrEqualThan() != null) {
                criteria.andUserIdGreaterThanOrEqualTo(this.getUserId().getGreaterOrEqualThan());
            }
            if (this.getUserId().getLessOrEqualThan() != null) {
                criteria.andUserIdLessThanOrEqualTo(this.getUserId().getLessOrEqualThan());
            }
        }
    }

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table bas_protected_user
     *
     * @mbg.generated Thu Sep 24 14:35:22 CST 2020
     */
    public StringCriteria getUserName() {
        return userName;
    }

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table bas_protected_user
     *
     * @mbg.generated Thu Sep 24 14:35:22 CST 2020
     */
    public void setUserName(StringCriteria userName) {
        this. userName = userName;
    }

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table bas_protected_user
     *
     * @mbg.generated Thu Sep 24 14:35:22 CST 2020
     */
    private void buildUserNameCriteria(Criteria criteria) {
        if (this.getUserName() == null) {
            return;
        }
        if (this.getUserName().getEquals() != null) {
            criteria.andUserNameEqualTo(this.getUserName().getEquals());
        } else {
            if (StringUtils.isNotBlank(this.getUserName().getContains())) {
                criteria.andUserNameLike(String.format(LIKE_FORMAT, this.getUserName().getContains()));
            }
        }
    }

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table bas_protected_user
     *
     * @mbg.generated Thu Sep 24 14:35:22 CST 2020
     */
    public StringCriteria getUserFullName() {
        return userFullName;
    }

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table bas_protected_user
     *
     * @mbg.generated Thu Sep 24 14:35:22 CST 2020
     */
    public void setUserFullName(StringCriteria userFullName) {
        this. userFullName = userFullName;
    }

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table bas_protected_user
     *
     * @mbg.generated Thu Sep 24 14:35:22 CST 2020
     */
    private void buildUserFullNameCriteria(Criteria criteria) {
        if (this.getUserFullName() == null) {
            return;
        }
        if (this.getUserFullName().getEquals() != null) {
            criteria.andUserFullNameEqualTo(this.getUserFullName().getEquals());
        } else {
            if (StringUtils.isNotBlank(this.getUserFullName().getContains())) {
                criteria.andUserFullNameLike(String.format(LIKE_FORMAT, this.getUserFullName().getContains()));
            }
        }
    }

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table bas_protected_user
     *
     * @mbg.generated Thu Sep 24 14:35:22 CST 2020
     */
    public LongCriteria getUserLevel() {
        return userLevel;
    }

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table bas_protected_user
     *
     * @mbg.generated Thu Sep 24 14:35:22 CST 2020
     */
    public void setUserLevel(LongCriteria userLevel) {
        this. userLevel = userLevel;
    }

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table bas_protected_user
     *
     * @mbg.generated Thu Sep 24 14:35:22 CST 2020
     */
    private void buildUserLevelCriteria(Criteria criteria) {
        if (this.getUserLevel() == null) {
            return;
        }
        if (this.getUserLevel().getEquals() != null) {
            criteria.andUserLevelEqualTo(this.getUserLevel().getEquals());
        } else {
            if (this.getUserLevel().getGreaterOrEqualThan() != null) {
                criteria.andUserLevelGreaterThanOrEqualTo(this.getUserLevel().getGreaterOrEqualThan());
            }
            if (this.getUserLevel().getLessOrEqualThan() != null) {
                criteria.andUserLevelLessThanOrEqualTo(this.getUserLevel().getLessOrEqualThan());
            }
        }
    }

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table bas_protected_user
     *
     * @mbg.generated Thu Sep 24 14:35:22 CST 2020
     */
    public LongCriteria getArea() {
        return area;
    }

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table bas_protected_user
     *
     * @mbg.generated Thu Sep 24 14:35:22 CST 2020
     */
    public void setArea(LongCriteria area) {
        this. area = area;
    }

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table bas_protected_user
     *
     * @mbg.generated Thu Sep 24 14:35:22 CST 2020
     */
    private void buildAreaCriteria(Criteria criteria) {
        if (this.getArea() == null) {
            return;
        }
        if (this.getArea().getEquals() != null) {
            criteria.andAreaEqualTo(this.getArea().getEquals());
        } else {
            if (this.getArea().getGreaterOrEqualThan() != null) {
                criteria.andAreaGreaterThanOrEqualTo(this.getArea().getGreaterOrEqualThan());
            }
            if (this.getArea().getLessOrEqualThan() != null) {
                criteria.andAreaLessThanOrEqualTo(this.getArea().getLessOrEqualThan());
            }
        }
    }

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table bas_protected_user
     *
     * @mbg.generated Thu Sep 24 14:35:22 CST 2020
     */
    public StringCriteria getAddress() {
        return address;
    }

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table bas_protected_user
     *
     * @mbg.generated Thu Sep 24 14:35:22 CST 2020
     */
    public void setAddress(StringCriteria address) {
        this. address = address;
    }

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table bas_protected_user
     *
     * @mbg.generated Thu Sep 24 14:35:22 CST 2020
     */
    private void buildAddressCriteria(Criteria criteria) {
        if (this.getAddress() == null) {
            return;
        }
        if (this.getAddress().getEquals() != null) {
            criteria.andAddressEqualTo(this.getAddress().getEquals());
        } else {
            if (StringUtils.isNotBlank(this.getAddress().getContains())) {
                criteria.andAddressLike(String.format(LIKE_FORMAT, this.getAddress().getContains()));
            }
        }
    }

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table bas_protected_user
     *
     * @mbg.generated Thu Sep 24 14:35:22 CST 2020
     */
    public StringCriteria getConnectUser() {
        return connectUser;
    }

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table bas_protected_user
     *
     * @mbg.generated Thu Sep 24 14:35:22 CST 2020
     */
    public void setConnectUser(StringCriteria connectUser) {
        this. connectUser = connectUser;
    }

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table bas_protected_user
     *
     * @mbg.generated Thu Sep 24 14:35:22 CST 2020
     */
    private void buildConnectUserCriteria(Criteria criteria) {
        if (this.getConnectUser() == null) {
            return;
        }
        if (this.getConnectUser().getEquals() != null) {
            criteria.andConnectUserEqualTo(this.getConnectUser().getEquals());
        } else {
            if (StringUtils.isNotBlank(this.getConnectUser().getContains())) {
                criteria.andConnectUserLike(String.format(LIKE_FORMAT, this.getConnectUser().getContains()));
            }
        }
    }

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table bas_protected_user
     *
     * @mbg.generated Thu Sep 24 14:35:22 CST 2020
     */
    public StringCriteria getConnectTel() {
        return connectTel;
    }

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table bas_protected_user
     *
     * @mbg.generated Thu Sep 24 14:35:22 CST 2020
     */
    public void setConnectTel(StringCriteria connectTel) {
        this. connectTel = connectTel;
    }

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table bas_protected_user
     *
     * @mbg.generated Thu Sep 24 14:35:22 CST 2020
     */
    private void buildConnectTelCriteria(Criteria criteria) {
        if (this.getConnectTel() == null) {
            return;
        }
        if (this.getConnectTel().getEquals() != null) {
            criteria.andConnectTelEqualTo(this.getConnectTel().getEquals());
        } else {
            if (StringUtils.isNotBlank(this.getConnectTel().getContains())) {
                criteria.andConnectTelLike(String.format(LIKE_FORMAT, this.getConnectTel().getContains()));
            }
        }
    }

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table bas_protected_user
     *
     * @mbg.generated Thu Sep 24 14:35:22 CST 2020
     */
    public LongCriteria getArmtType() {
        return armtType;
    }

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table bas_protected_user
     *
     * @mbg.generated Thu Sep 24 14:35:22 CST 2020
     */
    public void setArmtType(LongCriteria armtType) {
        this. armtType = armtType;
    }

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table bas_protected_user
     *
     * @mbg.generated Thu Sep 24 14:35:22 CST 2020
     */
    private void buildArmtTypeCriteria(Criteria criteria) {
        if (this.getArmtType() == null) {
            return;
        }
        if (this.getArmtType().getEquals() != null) {
            criteria.andArmtTypeEqualTo(this.getArmtType().getEquals());
        } else {
            if (this.getArmtType().getGreaterOrEqualThan() != null) {
                criteria.andArmtTypeGreaterThanOrEqualTo(this.getArmtType().getGreaterOrEqualThan());
            }
            if (this.getArmtType().getLessOrEqualThan() != null) {
                criteria.andArmtTypeLessThanOrEqualTo(this.getArmtType().getLessOrEqualThan());
            }
        }
    }

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table bas_protected_user
     *
     * @mbg.generated Thu Sep 24 14:35:22 CST 2020
     */
    public LongCriteria getIsValid() {
        return isValid;
    }

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table bas_protected_user
     *
     * @mbg.generated Thu Sep 24 14:35:22 CST 2020
     */
    public void setIsValid(LongCriteria isValid) {
        this. isValid = isValid;
    }

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table bas_protected_user
     *
     * @mbg.generated Thu Sep 24 14:35:22 CST 2020
     */
    private void buildIsValidCriteria(Criteria criteria) {
        if (this.getIsValid() == null) {
            return;
        }
        if (this.getIsValid().getEquals() != null) {
            criteria.andIsValidEqualTo(this.getIsValid().getEquals());
        } else {
            if (this.getIsValid().getGreaterOrEqualThan() != null) {
                criteria.andIsValidGreaterThanOrEqualTo(this.getIsValid().getGreaterOrEqualThan());
            }
            if (this.getIsValid().getLessOrEqualThan() != null) {
                criteria.andIsValidLessThanOrEqualTo(this.getIsValid().getLessOrEqualThan());
            }
        }
    }

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table bas_protected_user
     *
     * @mbg.generated Thu Sep 24 14:35:22 CST 2020
     */
    public StringCriteria getNote() {
        return note;
    }

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table bas_protected_user
     *
     * @mbg.generated Thu Sep 24 14:35:22 CST 2020
     */
    public void setNote(StringCriteria note) {
        this. note = note;
    }

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table bas_protected_user
     *
     * @mbg.generated Thu Sep 24 14:35:22 CST 2020
     */
    private void buildNoteCriteria(Criteria criteria) {
        if (this.getNote() == null) {
            return;
        }
        if (this.getNote().getEquals() != null) {
            criteria.andNoteEqualTo(this.getNote().getEquals());
        } else {
            if (StringUtils.isNotBlank(this.getNote().getContains())) {
                criteria.andNoteLike(String.format(LIKE_FORMAT, this.getNote().getContains()));
            }
        }
    }

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table bas_protected_user
     *
     * @mbg.generated Thu Sep 24 14:35:22 CST 2020
     */
    public LongCriteria getCusId() {
        return cusId;
    }

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table bas_protected_user
     *
     * @mbg.generated Thu Sep 24 14:35:22 CST 2020
     */
    public void setCusId(LongCriteria cusId) {
        this. cusId = cusId;
    }

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table bas_protected_user
     *
     * @mbg.generated Thu Sep 24 14:35:22 CST 2020
     */
    private void buildCusIdCriteria(Criteria criteria) {
        if (this.getCusId() == null) {
            return;
        }
        if (this.getCusId().getEquals() != null) {
            criteria.andCusIdEqualTo(this.getCusId().getEquals());
        } else {
            if (this.getCusId().getGreaterOrEqualThan() != null) {
                criteria.andCusIdGreaterThanOrEqualTo(this.getCusId().getGreaterOrEqualThan());
            }
            if (this.getCusId().getLessOrEqualThan() != null) {
                criteria.andCusIdLessThanOrEqualTo(this.getCusId().getLessOrEqualThan());
            }
        }
    }

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table bas_protected_user
     *
     * @mbg.generated Thu Sep 24 14:35:22 CST 2020
     */
    public LongCriteria getUserType() {
        return userType;
    }

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table bas_protected_user
     *
     * @mbg.generated Thu Sep 24 14:35:22 CST 2020
     */
    public void setUserType(LongCriteria userType) {
        this. userType = userType;
    }

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table bas_protected_user
     *
     * @mbg.generated Thu Sep 24 14:35:22 CST 2020
     */
    private void buildUserTypeCriteria(Criteria criteria) {
        if (this.getUserType() == null) {
            return;
        }
        if (this.getUserType().getEquals() != null) {
            criteria.andUserTypeEqualTo(this.getUserType().getEquals());
        } else {
            if (this.getUserType().getGreaterOrEqualThan() != null) {
                criteria.andUserTypeGreaterThanOrEqualTo(this.getUserType().getGreaterOrEqualThan());
            }
            if (this.getUserType().getLessOrEqualThan() != null) {
                criteria.andUserTypeLessThanOrEqualTo(this.getUserType().getLessOrEqualThan());
            }
        }
    }

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table bas_protected_user
     *
     * @mbg.generated Thu Sep 24 14:35:22 CST 2020
     */
    public StringCriteria getArmtName() {
        return armtName;
    }

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table bas_protected_user
     *
     * @mbg.generated Thu Sep 24 14:35:22 CST 2020
     */
    public void setArmtName(StringCriteria armtName) {
        this. armtName = armtName;
    }

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table bas_protected_user
     *
     * @mbg.generated Thu Sep 24 14:35:22 CST 2020
     */
    private void buildArmtNameCriteria(Criteria criteria) {
        if (this.getArmtName() == null) {
            return;
        }
        if (this.getArmtName().getEquals() != null) {
            criteria.andArmtNameEqualTo(this.getArmtName().getEquals());
        } else {
            if (StringUtils.isNotBlank(this.getArmtName().getContains())) {
                criteria.andArmtNameLike(String.format(LIKE_FORMAT, this.getArmtName().getContains()));
            }
        }
    }

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table bas_protected_user
     *
     * @mbg.generated Thu Sep 24 14:35:22 CST 2020
     */
    public LongCriteria getUserMark() {
        return userMark;
    }

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table bas_protected_user
     *
     * @mbg.generated Thu Sep 24 14:35:22 CST 2020
     */
    public void setUserMark(LongCriteria userMark) {
        this. userMark = userMark;
    }

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table bas_protected_user
     *
     * @mbg.generated Thu Sep 24 14:35:22 CST 2020
     */
    private void buildUserMarkCriteria(Criteria criteria) {
        if (this.getUserMark() == null) {
            return;
        }
        if (this.getUserMark().getEquals() != null) {
            criteria.andUserMarkEqualTo(this.getUserMark().getEquals());
        } else {
            if (this.getUserMark().getGreaterOrEqualThan() != null) {
                criteria.andUserMarkGreaterThanOrEqualTo(this.getUserMark().getGreaterOrEqualThan());
            }
            if (this.getUserMark().getLessOrEqualThan() != null) {
                criteria.andUserMarkLessThanOrEqualTo(this.getUserMark().getLessOrEqualThan());
            }
        }
    }

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table bas_protected_user
     *
     * @mbg.generated Thu Sep 24 14:35:22 CST 2020
     */
    public IntegerCriteria getCusType() {
        return cusType;
    }

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table bas_protected_user
     *
     * @mbg.generated Thu Sep 24 14:35:22 CST 2020
     */
    public void setCusType(IntegerCriteria cusType) {
        this. cusType = cusType;
    }

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table bas_protected_user
     *
     * @mbg.generated Thu Sep 24 14:35:22 CST 2020
     */
    private void buildCusTypeCriteria(Criteria criteria) {
        if (this.getCusType() == null) {
            return;
        }
        if (this.getCusType().getEquals() != null) {
            criteria.andCusTypeEqualTo(this.getCusType().getEquals());
        } else {
            if (this.getCusType().getGreaterOrEqualThan() != null) {
                criteria.andCusTypeGreaterThanOrEqualTo(this.getCusType().getGreaterOrEqualThan());
            }
            if (this.getCusType().getLessOrEqualThan() != null) {
                criteria.andCusTypeLessThanOrEqualTo(this.getCusType().getLessOrEqualThan());
            }
        }
    }

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table bas_protected_user
     *
     * @mbg.generated Thu Sep 24 14:35:22 CST 2020
     */
    public Object buildCriteria() {
        Criteria criteria = this.createCriteria();
        this.buildUserIdCriteria(criteria);
        this.buildUserNameCriteria(criteria);
        this.buildUserFullNameCriteria(criteria);
        this.buildUserLevelCriteria(criteria);
        this.buildAreaCriteria(criteria);
        this.buildAddressCriteria(criteria);
        this.buildConnectUserCriteria(criteria);
        this.buildConnectTelCriteria(criteria);
        this.buildArmtTypeCriteria(criteria);
        this.buildIsValidCriteria(criteria);
        this.buildNoteCriteria(criteria);
        this.buildCusIdCriteria(criteria);
        this.buildUserTypeCriteria(criteria);
        this.buildArmtNameCriteria(criteria);
        this.buildUserMarkCriteria(criteria);
        this.buildCusTypeCriteria(criteria);
        return criteria;
    }

    /**
     * This class was generated by MyBatis Generator.
     * This class corresponds to the database table bas_protected_user
     *
     * @mbg.generated Thu Sep 24 14:35:22 CST 2020
     */
    protected abstract static class GeneratedCriteria {
        protected List<Criterion> criteria;

        protected GeneratedCriteria() {
            super();
            criteria = new ArrayList<Criterion>();
        }

        public boolean isValid() {
            return criteria.size() > 0;
        }

        public List<Criterion> getAllCriteria() {
            return criteria;
        }

        public List<Criterion> getCriteria() {
            return criteria;
        }

        protected void addCriterion(String condition) {
            if (condition == null) {
                throw new RuntimeException("Value for condition cannot be null");
            }
            criteria.add(new Criterion(condition));
        }

        protected void addCriterion(String condition, Object value, String property) {
            if (value == null) {
                throw new RuntimeException("Value for " + property + " cannot be null");
            }
            criteria.add(new Criterion(condition, value));
        }

        protected void addCriterion(String condition, Object value1, Object value2, String property) {
            if (value1 == null || value2 == null) {
                throw new RuntimeException("Between values for " + property + " cannot be null");
            }
            criteria.add(new Criterion(condition, value1, value2));
        }

        public Criteria andUserIdIsNull() {
            addCriterion("user_id is null");
            return (Criteria) this;
        }

        public Criteria andUserIdIsNotNull() {
            addCriterion("user_id is not null");
            return (Criteria) this;
        }

        public Criteria andUserIdEqualTo(Long value) {
            addCriterion("user_id =", value, "userId");
            return (Criteria) this;
        }

        public Criteria andUserIdNotEqualTo(Long value) {
            addCriterion("user_id <>", value, "userId");
            return (Criteria) this;
        }

        public Criteria andUserIdGreaterThan(Long value) {
            addCriterion("user_id >", value, "userId");
            return (Criteria) this;
        }

        public Criteria andUserIdGreaterThanOrEqualTo(Long value) {
            addCriterion("user_id >=", value, "userId");
            return (Criteria) this;
        }

        public Criteria andUserIdLessThan(Long value) {
            addCriterion("user_id <", value, "userId");
            return (Criteria) this;
        }

        public Criteria andUserIdLessThanOrEqualTo(Long value) {
            addCriterion("user_id <=", value, "userId");
            return (Criteria) this;
        }

        public Criteria andUserIdIn(List<Long> values) {
            addCriterion("user_id in", values, "userId");
            return (Criteria) this;
        }

        public Criteria andUserIdNotIn(List<Long> values) {
            addCriterion("user_id not in", values, "userId");
            return (Criteria) this;
        }

        public Criteria andUserIdBetween(Long value1, Long value2) {
            addCriterion("user_id between", value1, value2, "userId");
            return (Criteria) this;
        }

        public Criteria andUserIdNotBetween(Long value1, Long value2) {
            addCriterion("user_id not between", value1, value2, "userId");
            return (Criteria) this;
        }

        public Criteria andUserNameIsNull() {
            addCriterion("user_name is null");
            return (Criteria) this;
        }

        public Criteria andUserNameIsNotNull() {
            addCriterion("user_name is not null");
            return (Criteria) this;
        }

        public Criteria andUserNameEqualTo(String value) {
            addCriterion("user_name =", value, "userName");
            return (Criteria) this;
        }

        public Criteria andUserNameNotEqualTo(String value) {
            addCriterion("user_name <>", value, "userName");
            return (Criteria) this;
        }

        public Criteria andUserNameGreaterThan(String value) {
            addCriterion("user_name >", value, "userName");
            return (Criteria) this;
        }

        public Criteria andUserNameGreaterThanOrEqualTo(String value) {
            addCriterion("user_name >=", value, "userName");
            return (Criteria) this;
        }

        public Criteria andUserNameLessThan(String value) {
            addCriterion("user_name <", value, "userName");
            return (Criteria) this;
        }

        public Criteria andUserNameLessThanOrEqualTo(String value) {
            addCriterion("user_name <=", value, "userName");
            return (Criteria) this;
        }

        public Criteria andUserNameLike(String value) {
            addCriterion("user_name like", value, "userName");
            return (Criteria) this;
        }

        public Criteria andUserNameNotLike(String value) {
            addCriterion("user_name not like", value, "userName");
            return (Criteria) this;
        }

        public Criteria andUserNameIn(List<String> values) {
            addCriterion("user_name in", values, "userName");
            return (Criteria) this;
        }

        public Criteria andUserNameNotIn(List<String> values) {
            addCriterion("user_name not in", values, "userName");
            return (Criteria) this;
        }

        public Criteria andUserNameBetween(String value1, String value2) {
            addCriterion("user_name between", value1, value2, "userName");
            return (Criteria) this;
        }

        public Criteria andUserNameNotBetween(String value1, String value2) {
            addCriterion("user_name not between", value1, value2, "userName");
            return (Criteria) this;
        }

        public Criteria andUserFullNameIsNull() {
            addCriterion("user_full_name is null");
            return (Criteria) this;
        }

        public Criteria andUserFullNameIsNotNull() {
            addCriterion("user_full_name is not null");
            return (Criteria) this;
        }

        public Criteria andUserFullNameEqualTo(String value) {
            addCriterion("user_full_name =", value, "userFullName");
            return (Criteria) this;
        }

        public Criteria andUserFullNameNotEqualTo(String value) {
            addCriterion("user_full_name <>", value, "userFullName");
            return (Criteria) this;
        }

        public Criteria andUserFullNameGreaterThan(String value) {
            addCriterion("user_full_name >", value, "userFullName");
            return (Criteria) this;
        }

        public Criteria andUserFullNameGreaterThanOrEqualTo(String value) {
            addCriterion("user_full_name >=", value, "userFullName");
            return (Criteria) this;
        }

        public Criteria andUserFullNameLessThan(String value) {
            addCriterion("user_full_name <", value, "userFullName");
            return (Criteria) this;
        }

        public Criteria andUserFullNameLessThanOrEqualTo(String value) {
            addCriterion("user_full_name <=", value, "userFullName");
            return (Criteria) this;
        }

        public Criteria andUserFullNameLike(String value) {
            addCriterion("user_full_name like", value, "userFullName");
            return (Criteria) this;
        }

        public Criteria andUserFullNameNotLike(String value) {
            addCriterion("user_full_name not like", value, "userFullName");
            return (Criteria) this;
        }

        public Criteria andUserFullNameIn(List<String> values) {
            addCriterion("user_full_name in", values, "userFullName");
            return (Criteria) this;
        }

        public Criteria andUserFullNameNotIn(List<String> values) {
            addCriterion("user_full_name not in", values, "userFullName");
            return (Criteria) this;
        }

        public Criteria andUserFullNameBetween(String value1, String value2) {
            addCriterion("user_full_name between", value1, value2, "userFullName");
            return (Criteria) this;
        }

        public Criteria andUserFullNameNotBetween(String value1, String value2) {
            addCriterion("user_full_name not between", value1, value2, "userFullName");
            return (Criteria) this;
        }

        public Criteria andUserLevelIsNull() {
            addCriterion("user_level is null");
            return (Criteria) this;
        }

        public Criteria andUserLevelIsNotNull() {
            addCriterion("user_level is not null");
            return (Criteria) this;
        }

        public Criteria andUserLevelEqualTo(Long value) {
            addCriterion("user_level =", value, "userLevel");
            return (Criteria) this;
        }

        public Criteria andUserLevelNotEqualTo(Long value) {
            addCriterion("user_level <>", value, "userLevel");
            return (Criteria) this;
        }

        public Criteria andUserLevelGreaterThan(Long value) {
            addCriterion("user_level >", value, "userLevel");
            return (Criteria) this;
        }

        public Criteria andUserLevelGreaterThanOrEqualTo(Long value) {
            addCriterion("user_level >=", value, "userLevel");
            return (Criteria) this;
        }

        public Criteria andUserLevelLessThan(Long value) {
            addCriterion("user_level <", value, "userLevel");
            return (Criteria) this;
        }

        public Criteria andUserLevelLessThanOrEqualTo(Long value) {
            addCriterion("user_level <=", value, "userLevel");
            return (Criteria) this;
        }

        public Criteria andUserLevelIn(List<Long> values) {
            addCriterion("user_level in", values, "userLevel");
            return (Criteria) this;
        }

        public Criteria andUserLevelNotIn(List<Long> values) {
            addCriterion("user_level not in", values, "userLevel");
            return (Criteria) this;
        }

        public Criteria andUserLevelBetween(Long value1, Long value2) {
            addCriterion("user_level between", value1, value2, "userLevel");
            return (Criteria) this;
        }

        public Criteria andUserLevelNotBetween(Long value1, Long value2) {
            addCriterion("user_level not between", value1, value2, "userLevel");
            return (Criteria) this;
        }

        public Criteria andAreaIsNull() {
            addCriterion("area is null");
            return (Criteria) this;
        }

        public Criteria andAreaIsNotNull() {
            addCriterion("area is not null");
            return (Criteria) this;
        }

        public Criteria andAreaEqualTo(Long value) {
            addCriterion("area =", value, "area");
            return (Criteria) this;
        }

        public Criteria andAreaNotEqualTo(Long value) {
            addCriterion("area <>", value, "area");
            return (Criteria) this;
        }

        public Criteria andAreaGreaterThan(Long value) {
            addCriterion("area >", value, "area");
            return (Criteria) this;
        }

        public Criteria andAreaGreaterThanOrEqualTo(Long value) {
            addCriterion("area >=", value, "area");
            return (Criteria) this;
        }

        public Criteria andAreaLessThan(Long value) {
            addCriterion("area <", value, "area");
            return (Criteria) this;
        }

        public Criteria andAreaLessThanOrEqualTo(Long value) {
            addCriterion("area <=", value, "area");
            return (Criteria) this;
        }

        public Criteria andAreaIn(List<Long> values) {
            addCriterion("area in", values, "area");
            return (Criteria) this;
        }

        public Criteria andAreaNotIn(List<Long> values) {
            addCriterion("area not in", values, "area");
            return (Criteria) this;
        }

        public Criteria andAreaBetween(Long value1, Long value2) {
            addCriterion("area between", value1, value2, "area");
            return (Criteria) this;
        }

        public Criteria andAreaNotBetween(Long value1, Long value2) {
            addCriterion("area not between", value1, value2, "area");
            return (Criteria) this;
        }

        public Criteria andAddressIsNull() {
            addCriterion("address is null");
            return (Criteria) this;
        }

        public Criteria andAddressIsNotNull() {
            addCriterion("address is not null");
            return (Criteria) this;
        }

        public Criteria andAddressEqualTo(String value) {
            addCriterion("address =", value, "address");
            return (Criteria) this;
        }

        public Criteria andAddressNotEqualTo(String value) {
            addCriterion("address <>", value, "address");
            return (Criteria) this;
        }

        public Criteria andAddressGreaterThan(String value) {
            addCriterion("address >", value, "address");
            return (Criteria) this;
        }

        public Criteria andAddressGreaterThanOrEqualTo(String value) {
            addCriterion("address >=", value, "address");
            return (Criteria) this;
        }

        public Criteria andAddressLessThan(String value) {
            addCriterion("address <", value, "address");
            return (Criteria) this;
        }

        public Criteria andAddressLessThanOrEqualTo(String value) {
            addCriterion("address <=", value, "address");
            return (Criteria) this;
        }

        public Criteria andAddressLike(String value) {
            addCriterion("address like", value, "address");
            return (Criteria) this;
        }

        public Criteria andAddressNotLike(String value) {
            addCriterion("address not like", value, "address");
            return (Criteria) this;
        }

        public Criteria andAddressIn(List<String> values) {
            addCriterion("address in", values, "address");
            return (Criteria) this;
        }

        public Criteria andAddressNotIn(List<String> values) {
            addCriterion("address not in", values, "address");
            return (Criteria) this;
        }

        public Criteria andAddressBetween(String value1, String value2) {
            addCriterion("address between", value1, value2, "address");
            return (Criteria) this;
        }

        public Criteria andAddressNotBetween(String value1, String value2) {
            addCriterion("address not between", value1, value2, "address");
            return (Criteria) this;
        }

        public Criteria andConnectUserIsNull() {
            addCriterion("connect_user is null");
            return (Criteria) this;
        }

        public Criteria andConnectUserIsNotNull() {
            addCriterion("connect_user is not null");
            return (Criteria) this;
        }

        public Criteria andConnectUserEqualTo(String value) {
            addCriterion("connect_user =", value, "connectUser");
            return (Criteria) this;
        }

        public Criteria andConnectUserNotEqualTo(String value) {
            addCriterion("connect_user <>", value, "connectUser");
            return (Criteria) this;
        }

        public Criteria andConnectUserGreaterThan(String value) {
            addCriterion("connect_user >", value, "connectUser");
            return (Criteria) this;
        }

        public Criteria andConnectUserGreaterThanOrEqualTo(String value) {
            addCriterion("connect_user >=", value, "connectUser");
            return (Criteria) this;
        }

        public Criteria andConnectUserLessThan(String value) {
            addCriterion("connect_user <", value, "connectUser");
            return (Criteria) this;
        }

        public Criteria andConnectUserLessThanOrEqualTo(String value) {
            addCriterion("connect_user <=", value, "connectUser");
            return (Criteria) this;
        }

        public Criteria andConnectUserLike(String value) {
            addCriterion("connect_user like", value, "connectUser");
            return (Criteria) this;
        }

        public Criteria andConnectUserNotLike(String value) {
            addCriterion("connect_user not like", value, "connectUser");
            return (Criteria) this;
        }

        public Criteria andConnectUserIn(List<String> values) {
            addCriterion("connect_user in", values, "connectUser");
            return (Criteria) this;
        }

        public Criteria andConnectUserNotIn(List<String> values) {
            addCriterion("connect_user not in", values, "connectUser");
            return (Criteria) this;
        }

        public Criteria andConnectUserBetween(String value1, String value2) {
            addCriterion("connect_user between", value1, value2, "connectUser");
            return (Criteria) this;
        }

        public Criteria andConnectUserNotBetween(String value1, String value2) {
            addCriterion("connect_user not between", value1, value2, "connectUser");
            return (Criteria) this;
        }

        public Criteria andConnectTelIsNull() {
            addCriterion("connect_tel is null");
            return (Criteria) this;
        }

        public Criteria andConnectTelIsNotNull() {
            addCriterion("connect_tel is not null");
            return (Criteria) this;
        }

        public Criteria andConnectTelEqualTo(String value) {
            addCriterion("connect_tel =", value, "connectTel");
            return (Criteria) this;
        }

        public Criteria andConnectTelNotEqualTo(String value) {
            addCriterion("connect_tel <>", value, "connectTel");
            return (Criteria) this;
        }

        public Criteria andConnectTelGreaterThan(String value) {
            addCriterion("connect_tel >", value, "connectTel");
            return (Criteria) this;
        }

        public Criteria andConnectTelGreaterThanOrEqualTo(String value) {
            addCriterion("connect_tel >=", value, "connectTel");
            return (Criteria) this;
        }

        public Criteria andConnectTelLessThan(String value) {
            addCriterion("connect_tel <", value, "connectTel");
            return (Criteria) this;
        }

        public Criteria andConnectTelLessThanOrEqualTo(String value) {
            addCriterion("connect_tel <=", value, "connectTel");
            return (Criteria) this;
        }

        public Criteria andConnectTelLike(String value) {
            addCriterion("connect_tel like", value, "connectTel");
            return (Criteria) this;
        }

        public Criteria andConnectTelNotLike(String value) {
            addCriterion("connect_tel not like", value, "connectTel");
            return (Criteria) this;
        }

        public Criteria andConnectTelIn(List<String> values) {
            addCriterion("connect_tel in", values, "connectTel");
            return (Criteria) this;
        }

        public Criteria andConnectTelNotIn(List<String> values) {
            addCriterion("connect_tel not in", values, "connectTel");
            return (Criteria) this;
        }

        public Criteria andConnectTelBetween(String value1, String value2) {
            addCriterion("connect_tel between", value1, value2, "connectTel");
            return (Criteria) this;
        }

        public Criteria andConnectTelNotBetween(String value1, String value2) {
            addCriterion("connect_tel not between", value1, value2, "connectTel");
            return (Criteria) this;
        }

        public Criteria andArmtTypeIsNull() {
            addCriterion("armt_type is null");
            return (Criteria) this;
        }

        public Criteria andArmtTypeIsNotNull() {
            addCriterion("armt_type is not null");
            return (Criteria) this;
        }

        public Criteria andArmtTypeEqualTo(Long value) {
            addCriterion("armt_type =", value, "armtType");
            return (Criteria) this;
        }

        public Criteria andArmtTypeNotEqualTo(Long value) {
            addCriterion("armt_type <>", value, "armtType");
            return (Criteria) this;
        }

        public Criteria andArmtTypeGreaterThan(Long value) {
            addCriterion("armt_type >", value, "armtType");
            return (Criteria) this;
        }

        public Criteria andArmtTypeGreaterThanOrEqualTo(Long value) {
            addCriterion("armt_type >=", value, "armtType");
            return (Criteria) this;
        }

        public Criteria andArmtTypeLessThan(Long value) {
            addCriterion("armt_type <", value, "armtType");
            return (Criteria) this;
        }

        public Criteria andArmtTypeLessThanOrEqualTo(Long value) {
            addCriterion("armt_type <=", value, "armtType");
            return (Criteria) this;
        }

        public Criteria andArmtTypeIn(List<Long> values) {
            addCriterion("armt_type in", values, "armtType");
            return (Criteria) this;
        }

        public Criteria andArmtTypeNotIn(List<Long> values) {
            addCriterion("armt_type not in", values, "armtType");
            return (Criteria) this;
        }

        public Criteria andArmtTypeBetween(Long value1, Long value2) {
            addCriterion("armt_type between", value1, value2, "armtType");
            return (Criteria) this;
        }

        public Criteria andArmtTypeNotBetween(Long value1, Long value2) {
            addCriterion("armt_type not between", value1, value2, "armtType");
            return (Criteria) this;
        }

        public Criteria andIsValidIsNull() {
            addCriterion("is_valid is null");
            return (Criteria) this;
        }

        public Criteria andIsValidIsNotNull() {
            addCriterion("is_valid is not null");
            return (Criteria) this;
        }

        public Criteria andIsValidEqualTo(Long value) {
            addCriterion("is_valid =", value, "isValid");
            return (Criteria) this;
        }

        public Criteria andIsValidNotEqualTo(Long value) {
            addCriterion("is_valid <>", value, "isValid");
            return (Criteria) this;
        }

        public Criteria andIsValidGreaterThan(Long value) {
            addCriterion("is_valid >", value, "isValid");
            return (Criteria) this;
        }

        public Criteria andIsValidGreaterThanOrEqualTo(Long value) {
            addCriterion("is_valid >=", value, "isValid");
            return (Criteria) this;
        }

        public Criteria andIsValidLessThan(Long value) {
            addCriterion("is_valid <", value, "isValid");
            return (Criteria) this;
        }

        public Criteria andIsValidLessThanOrEqualTo(Long value) {
            addCriterion("is_valid <=", value, "isValid");
            return (Criteria) this;
        }

        public Criteria andIsValidIn(List<Long> values) {
            addCriterion("is_valid in", values, "isValid");
            return (Criteria) this;
        }

        public Criteria andIsValidNotIn(List<Long> values) {
            addCriterion("is_valid not in", values, "isValid");
            return (Criteria) this;
        }

        public Criteria andIsValidBetween(Long value1, Long value2) {
            addCriterion("is_valid between", value1, value2, "isValid");
            return (Criteria) this;
        }

        public Criteria andIsValidNotBetween(Long value1, Long value2) {
            addCriterion("is_valid not between", value1, value2, "isValid");
            return (Criteria) this;
        }

        public Criteria andNoteIsNull() {
            addCriterion("note is null");
            return (Criteria) this;
        }

        public Criteria andNoteIsNotNull() {
            addCriterion("note is not null");
            return (Criteria) this;
        }

        public Criteria andNoteEqualTo(String value) {
            addCriterion("note =", value, "note");
            return (Criteria) this;
        }

        public Criteria andNoteNotEqualTo(String value) {
            addCriterion("note <>", value, "note");
            return (Criteria) this;
        }

        public Criteria andNoteGreaterThan(String value) {
            addCriterion("note >", value, "note");
            return (Criteria) this;
        }

        public Criteria andNoteGreaterThanOrEqualTo(String value) {
            addCriterion("note >=", value, "note");
            return (Criteria) this;
        }

        public Criteria andNoteLessThan(String value) {
            addCriterion("note <", value, "note");
            return (Criteria) this;
        }

        public Criteria andNoteLessThanOrEqualTo(String value) {
            addCriterion("note <=", value, "note");
            return (Criteria) this;
        }

        public Criteria andNoteLike(String value) {
            addCriterion("note like", value, "note");
            return (Criteria) this;
        }

        public Criteria andNoteNotLike(String value) {
            addCriterion("note not like", value, "note");
            return (Criteria) this;
        }

        public Criteria andNoteIn(List<String> values) {
            addCriterion("note in", values, "note");
            return (Criteria) this;
        }

        public Criteria andNoteNotIn(List<String> values) {
            addCriterion("note not in", values, "note");
            return (Criteria) this;
        }

        public Criteria andNoteBetween(String value1, String value2) {
            addCriterion("note between", value1, value2, "note");
            return (Criteria) this;
        }

        public Criteria andNoteNotBetween(String value1, String value2) {
            addCriterion("note not between", value1, value2, "note");
            return (Criteria) this;
        }

        public Criteria andCusIdIsNull() {
            addCriterion("cus_id is null");
            return (Criteria) this;
        }

        public Criteria andCusIdIsNotNull() {
            addCriterion("cus_id is not null");
            return (Criteria) this;
        }

        public Criteria andCusIdEqualTo(Long value) {
            addCriterion("cus_id =", value, "cusId");
            return (Criteria) this;
        }

        public Criteria andCusIdNotEqualTo(Long value) {
            addCriterion("cus_id <>", value, "cusId");
            return (Criteria) this;
        }

        public Criteria andCusIdGreaterThan(Long value) {
            addCriterion("cus_id >", value, "cusId");
            return (Criteria) this;
        }

        public Criteria andCusIdGreaterThanOrEqualTo(Long value) {
            addCriterion("cus_id >=", value, "cusId");
            return (Criteria) this;
        }

        public Criteria andCusIdLessThan(Long value) {
            addCriterion("cus_id <", value, "cusId");
            return (Criteria) this;
        }

        public Criteria andCusIdLessThanOrEqualTo(Long value) {
            addCriterion("cus_id <=", value, "cusId");
            return (Criteria) this;
        }

        public Criteria andCusIdIn(List<Long> values) {
            addCriterion("cus_id in", values, "cusId");
            return (Criteria) this;
        }

        public Criteria andCusIdNotIn(List<Long> values) {
            addCriterion("cus_id not in", values, "cusId");
            return (Criteria) this;
        }

        public Criteria andCusIdBetween(Long value1, Long value2) {
            addCriterion("cus_id between", value1, value2, "cusId");
            return (Criteria) this;
        }

        public Criteria andCusIdNotBetween(Long value1, Long value2) {
            addCriterion("cus_id not between", value1, value2, "cusId");
            return (Criteria) this;
        }

        public Criteria andUserTypeIsNull() {
            addCriterion("user_type is null");
            return (Criteria) this;
        }

        public Criteria andUserTypeIsNotNull() {
            addCriterion("user_type is not null");
            return (Criteria) this;
        }

        public Criteria andUserTypeEqualTo(Long value) {
            addCriterion("user_type =", value, "userType");
            return (Criteria) this;
        }

        public Criteria andUserTypeNotEqualTo(Long value) {
            addCriterion("user_type <>", value, "userType");
            return (Criteria) this;
        }

        public Criteria andUserTypeGreaterThan(Long value) {
            addCriterion("user_type >", value, "userType");
            return (Criteria) this;
        }

        public Criteria andUserTypeGreaterThanOrEqualTo(Long value) {
            addCriterion("user_type >=", value, "userType");
            return (Criteria) this;
        }

        public Criteria andUserTypeLessThan(Long value) {
            addCriterion("user_type <", value, "userType");
            return (Criteria) this;
        }

        public Criteria andUserTypeLessThanOrEqualTo(Long value) {
            addCriterion("user_type <=", value, "userType");
            return (Criteria) this;
        }

        public Criteria andUserTypeIn(List<Long> values) {
            addCriterion("user_type in", values, "userType");
            return (Criteria) this;
        }

        public Criteria andUserTypeNotIn(List<Long> values) {
            addCriterion("user_type not in", values, "userType");
            return (Criteria) this;
        }

        public Criteria andUserTypeBetween(Long value1, Long value2) {
            addCriterion("user_type between", value1, value2, "userType");
            return (Criteria) this;
        }

        public Criteria andUserTypeNotBetween(Long value1, Long value2) {
            addCriterion("user_type not between", value1, value2, "userType");
            return (Criteria) this;
        }

        public Criteria andArmtNameIsNull() {
            addCriterion("armt_name is null");
            return (Criteria) this;
        }

        public Criteria andArmtNameIsNotNull() {
            addCriterion("armt_name is not null");
            return (Criteria) this;
        }

        public Criteria andArmtNameEqualTo(String value) {
            addCriterion("armt_name =", value, "armtName");
            return (Criteria) this;
        }

        public Criteria andArmtNameNotEqualTo(String value) {
            addCriterion("armt_name <>", value, "armtName");
            return (Criteria) this;
        }

        public Criteria andArmtNameGreaterThan(String value) {
            addCriterion("armt_name >", value, "armtName");
            return (Criteria) this;
        }

        public Criteria andArmtNameGreaterThanOrEqualTo(String value) {
            addCriterion("armt_name >=", value, "armtName");
            return (Criteria) this;
        }

        public Criteria andArmtNameLessThan(String value) {
            addCriterion("armt_name <", value, "armtName");
            return (Criteria) this;
        }

        public Criteria andArmtNameLessThanOrEqualTo(String value) {
            addCriterion("armt_name <=", value, "armtName");
            return (Criteria) this;
        }

        public Criteria andArmtNameLike(String value) {
            addCriterion("armt_name like", value, "armtName");
            return (Criteria) this;
        }

        public Criteria andArmtNameNotLike(String value) {
            addCriterion("armt_name not like", value, "armtName");
            return (Criteria) this;
        }

        public Criteria andArmtNameIn(List<String> values) {
            addCriterion("armt_name in", values, "armtName");
            return (Criteria) this;
        }

        public Criteria andArmtNameNotIn(List<String> values) {
            addCriterion("armt_name not in", values, "armtName");
            return (Criteria) this;
        }

        public Criteria andArmtNameBetween(String value1, String value2) {
            addCriterion("armt_name between", value1, value2, "armtName");
            return (Criteria) this;
        }

        public Criteria andArmtNameNotBetween(String value1, String value2) {
            addCriterion("armt_name not between", value1, value2, "armtName");
            return (Criteria) this;
        }

        public Criteria andUserMarkIsNull() {
            addCriterion("user_mark is null");
            return (Criteria) this;
        }

        public Criteria andUserMarkIsNotNull() {
            addCriterion("user_mark is not null");
            return (Criteria) this;
        }

        public Criteria andUserMarkEqualTo(Long value) {
            addCriterion("user_mark =", value, "userMark");
            return (Criteria) this;
        }

        public Criteria andUserMarkNotEqualTo(Long value) {
            addCriterion("user_mark <>", value, "userMark");
            return (Criteria) this;
        }

        public Criteria andUserMarkGreaterThan(Long value) {
            addCriterion("user_mark >", value, "userMark");
            return (Criteria) this;
        }

        public Criteria andUserMarkGreaterThanOrEqualTo(Long value) {
            addCriterion("user_mark >=", value, "userMark");
            return (Criteria) this;
        }

        public Criteria andUserMarkLessThan(Long value) {
            addCriterion("user_mark <", value, "userMark");
            return (Criteria) this;
        }

        public Criteria andUserMarkLessThanOrEqualTo(Long value) {
            addCriterion("user_mark <=", value, "userMark");
            return (Criteria) this;
        }

        public Criteria andUserMarkIn(List<Long> values) {
            addCriterion("user_mark in", values, "userMark");
            return (Criteria) this;
        }

        public Criteria andUserMarkNotIn(List<Long> values) {
            addCriterion("user_mark not in", values, "userMark");
            return (Criteria) this;
        }

        public Criteria andUserMarkBetween(Long value1, Long value2) {
            addCriterion("user_mark between", value1, value2, "userMark");
            return (Criteria) this;
        }

        public Criteria andUserMarkNotBetween(Long value1, Long value2) {
            addCriterion("user_mark not between", value1, value2, "userMark");
            return (Criteria) this;
        }

        public Criteria andCusTypeIsNull() {
            addCriterion("cus_type is null");
            return (Criteria) this;
        }

        public Criteria andCusTypeIsNotNull() {
            addCriterion("cus_type is not null");
            return (Criteria) this;
        }

        public Criteria andCusTypeEqualTo(Integer value) {
            addCriterion("cus_type =", value, "cusType");
            return (Criteria) this;
        }

        public Criteria andCusTypeNotEqualTo(Integer value) {
            addCriterion("cus_type <>", value, "cusType");
            return (Criteria) this;
        }

        public Criteria andCusTypeGreaterThan(Integer value) {
            addCriterion("cus_type >", value, "cusType");
            return (Criteria) this;
        }

        public Criteria andCusTypeGreaterThanOrEqualTo(Integer value) {
            addCriterion("cus_type >=", value, "cusType");
            return (Criteria) this;
        }

        public Criteria andCusTypeLessThan(Integer value) {
            addCriterion("cus_type <", value, "cusType");
            return (Criteria) this;
        }

        public Criteria andCusTypeLessThanOrEqualTo(Integer value) {
            addCriterion("cus_type <=", value, "cusType");
            return (Criteria) this;
        }

        public Criteria andCusTypeIn(List<Integer> values) {
            addCriterion("cus_type in", values, "cusType");
            return (Criteria) this;
        }

        public Criteria andCusTypeNotIn(List<Integer> values) {
            addCriterion("cus_type not in", values, "cusType");
            return (Criteria) this;
        }

        public Criteria andCusTypeBetween(Integer value1, Integer value2) {
            addCriterion("cus_type between", value1, value2, "cusType");
            return (Criteria) this;
        }

        public Criteria andCusTypeNotBetween(Integer value1, Integer value2) {
            addCriterion("cus_type not between", value1, value2, "cusType");
            return (Criteria) this;
        }
    }

    /**
     * This class was generated by MyBatis Generator.
     * This class corresponds to the database table bas_protected_user
     *
     * @mbg.generated do_not_delete_during_merge Thu Sep 24 14:35:22 CST 2020
     */
    public static class Criteria extends GeneratedCriteria {

        protected Criteria() {
            super();
        }
    }

    /**
     * This class was generated by MyBatis Generator.
     * This class corresponds to the database table bas_protected_user
     *
     * @mbg.generated Thu Sep 24 14:35:22 CST 2020
     */
    public static class Criterion {
        @ApiParam(hidden=true)
        private String condition;

        @ApiParam(hidden=true)
        private Object value;

        @ApiParam(hidden=true)
        private Object secondValue;

        @ApiParam(hidden=true)
        private boolean noValue;

        @ApiParam(hidden=true)
        private boolean singleValue;

        @ApiParam(hidden=true)
        private boolean betweenValue;

        @ApiParam(hidden=true)
        private boolean listValue;

        @ApiParam(hidden=true)
        private String typeHandler;

        public String getCondition() {
            return condition;
        }

        public Object getValue() {
            return value;
        }

        public Object getSecondValue() {
            return secondValue;
        }

        public boolean isNoValue() {
            return noValue;
        }

        public boolean isSingleValue() {
            return singleValue;
        }

        public boolean isBetweenValue() {
            return betweenValue;
        }

        public boolean isListValue() {
            return listValue;
        }

        public String getTypeHandler() {
            return typeHandler;
        }

        protected Criterion(String condition) {
            super();
            this.condition = condition;
            this.typeHandler = null;
            this.noValue = true;
        }

        protected Criterion(String condition, Object value, String typeHandler) {
            super();
            this.condition = condition;
            this.value = value;
            this.typeHandler = typeHandler;
            if (value instanceof List<?>) {
                this.listValue = true;
            } else {
                this.singleValue = true;
            }
        }

        protected Criterion(String condition, Object value) {
            this(condition, value, null);
        }

        protected Criterion(String condition, Object value, Object secondValue, String typeHandler) {
            super();
            this.condition = condition;
            this.value = value;
            this.secondValue = secondValue;
            this.typeHandler = typeHandler;
            this.betweenValue = true;
        }

        protected Criterion(String condition, Object value, Object secondValue) {
            this(condition, value, secondValue, null);
        }
    }
}