package com.ctsi.space.repository;

import com.ctsi.space.domain.BasStation;
import com.ctsi.space.domain.BasStationExample;
import com.ctsi.space.domain.BasStationExample.Criteria;
import com.ctsi.space.domain.BasStationExample.Criterion;
import org.apache.ibatis.jdbc.SQL;

import java.util.List;
import java.util.Map;

/**
 * @author ctsi-biyi-generator
*/
public class BasStationSqlProvider {

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table bas_station
     *
     * @mbg.generated Mon Sep 14 11:17:32 CST 2020
     */
    public String countByExample(BasStationExample example) {
        SQL sql = new SQL();
        sql.SELECT("count(*)").FROM("bas_station");
        applyWhere(sql, example, false);
        return sql.toString();
    }

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table bas_station
     *
     * @mbg.generated Mon Sep 14 11:17:32 CST 2020
     */
    public String deleteByExample(BasStationExample example) {
        SQL sql = new SQL();
        sql.DELETE_FROM("bas_station");
        applyWhere(sql, example, false);
        return sql.toString();
    }

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table bas_station
     *
     * @mbg.generated Mon Sep 14 11:17:32 CST 2020
     */
    public String insertSelective(BasStation record) {
        SQL sql = new SQL();
        sql.INSERT_INTO("bas_station");
        
        if (record.getStationId() != null) {
            sql.VALUES("station_id", "#{stationId,jdbcType=DECIMAL}");
        }
        
        if (record.getResNo() != null) {
            sql.VALUES("res_no", "#{resNo,jdbcType=VARCHAR}");
        }
        
        if (record.getStationName() != null) {
            sql.VALUES("station_name", "#{stationName,jdbcType=VARCHAR}");
        }
        
        if (record.getStationType() != null) {
            sql.VALUES("station_type", "#{stationType,jdbcType=DECIMAL}");
        }
        
        if (record.getAdminDistrictId() != null) {
            sql.VALUES("admin_district_id", "#{adminDistrictId,jdbcType=DECIMAL}");
        }
        
        if (record.getOrgId() != null) {
            sql.VALUES("org_id", "#{orgId,jdbcType=DECIMAL}");
        }
        
        if (record.getOrgType() != null) {
            sql.VALUES("org_type", "#{orgType,jdbcType=DECIMAL}");
        }
        
        if (record.getStationOrder() != null) {
            sql.VALUES("station_order", "#{stationOrder,jdbcType=DECIMAL}");
        }
        
        if (record.getStationTel() != null) {
            sql.VALUES("station_tel", "#{stationTel,jdbcType=VARCHAR}");
        }
        
        if (record.getStationAddress() != null) {
            sql.VALUES("station_address", "#{stationAddress,jdbcType=VARCHAR}");
        }
        
        if (record.getCoordinateX() != null) {
            sql.VALUES("coordinate_x", "#{coordinateX,jdbcType=DECIMAL}");
        }
        
        if (record.getCoordinateY() != null) {
            sql.VALUES("coordinate_y", "#{coordinateY,jdbcType=DECIMAL}");
        }
        
        if (record.getCoordinateZ() != null) {
            sql.VALUES("coordinate_z", "#{coordinateZ,jdbcType=DECIMAL}");
        }
        
        if (record.getNote() != null) {
            sql.VALUES("note", "#{note,jdbcType=VARCHAR}");
        }
        
        if (record.getProtectUnit() != null) {
            sql.VALUES("protect_unit", "#{protectUnit,jdbcType=VARCHAR}");
        }
        
        if (record.getDutyType() != null) {
            sql.VALUES("duty_type", "#{dutyType,jdbcType=DECIMAL}");
        }
        
        if (record.getCdmaNodeTask() != null) {
            sql.VALUES("cdma_node_task", "#{cdmaNodeTask,jdbcType=VARCHAR}");
        }
        
        if (record.getStationOwner() != null) {
            sql.VALUES("station_owner", "#{stationOwner,jdbcType=DECIMAL}");
        }
        
        if (record.getTheaterId() != null) {
            sql.VALUES("theater_id", "#{theaterId,jdbcType=DECIMAL}");
        }
        
        if (record.getArmyType() != null) {
            sql.VALUES("army_type", "#{armyType,jdbcType=DECIMAL}");
        }
        
        if (record.getIsLiable() != null) {
            sql.VALUES("is_liable", "#{isLiable,jdbcType=DECIMAL}");
        }
        
        if (record.getDutyNum() != null) {
            sql.VALUES("duty_num", "#{dutyNum,jdbcType=DECIMAL}");
        }
        
        if (record.getStationUnknownFlg() != null) {
            sql.VALUES("station_unknown_flg", "#{stationUnknownFlg,jdbcType=TINYINT}");
        }
        
        if (record.getStationValid() != null) {
            sql.VALUES("station_valid", "#{stationValid,jdbcType=TINYINT}");
        }
        
        if (record.getCompany() != null) {
            sql.VALUES("company", "#{company,jdbcType=VARCHAR}");
        }
        
        if (record.getUpdateTimestamp() != null) {
            sql.VALUES("update_timestamp", "#{updateTimestamp,jdbcType=TIMESTAMP}");
        }
        
        return sql.toString();
    }

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table bas_station
     *
     * @mbg.generated Mon Sep 14 11:17:32 CST 2020
     */
    public String selectByExample(BasStationExample example) {
        SQL sql = new SQL();
        if (example != null && example.isDistinct()) {
            sql.SELECT_DISTINCT("station_id");
        } else {
            sql.SELECT("station_id");
        }
        sql.SELECT("res_no");
        sql.SELECT("station_name");
        sql.SELECT("station_type");
        sql.SELECT("admin_district_id");
        sql.SELECT("org_id");
        sql.SELECT("org_type");
        sql.SELECT("station_order");
        sql.SELECT("station_tel");
        sql.SELECT("station_address");
        sql.SELECT("coordinate_x");
        sql.SELECT("coordinate_y");
        sql.SELECT("coordinate_z");
        sql.SELECT("note");
        sql.SELECT("protect_unit");
        sql.SELECT("duty_type");
        sql.SELECT("cdma_node_task");
        sql.SELECT("station_owner");
        sql.SELECT("theater_id");
        sql.SELECT("army_type");
        sql.SELECT("is_liable");
        sql.SELECT("duty_num");
        sql.SELECT("station_unknown_flg");
        sql.SELECT("station_valid");
        sql.SELECT("company");
        sql.SELECT("update_timestamp");
        sql.FROM("bas_station");
        applyWhere(sql, example, false);
        
        if (example != null && example.getOrderByClause() != null) {
            sql.ORDER_BY(example.getOrderByClause());
        }
        
        return sql.toString();
    }

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table bas_station
     *
     * @mbg.generated Mon Sep 14 11:17:32 CST 2020
     */
    public String updateByExampleSelective(Map<String, Object> parameter) {
        BasStation record = (BasStation) parameter.get("record");
        BasStationExample example = (BasStationExample) parameter.get("example");
        
        SQL sql = new SQL();
        sql.UPDATE("bas_station");
        
        if (record.getStationId() != null) {
            sql.SET("station_id = #{record.stationId,jdbcType=DECIMAL}");
        }
        
        if (record.getResNo() != null) {
            sql.SET("res_no = #{record.resNo,jdbcType=VARCHAR}");
        }
        
        if (record.getStationName() != null) {
            sql.SET("station_name = #{record.stationName,jdbcType=VARCHAR}");
        }
        
        if (record.getStationType() != null) {
            sql.SET("station_type = #{record.stationType,jdbcType=DECIMAL}");
        }
        
        if (record.getAdminDistrictId() != null) {
            sql.SET("admin_district_id = #{record.adminDistrictId,jdbcType=DECIMAL}");
        }
        
        if (record.getOrgId() != null) {
            sql.SET("org_id = #{record.orgId,jdbcType=DECIMAL}");
        }
        
        if (record.getOrgType() != null) {
            sql.SET("org_type = #{record.orgType,jdbcType=DECIMAL}");
        }
        
        if (record.getStationOrder() != null) {
            sql.SET("station_order = #{record.stationOrder,jdbcType=DECIMAL}");
        }
        
        if (record.getStationTel() != null) {
            sql.SET("station_tel = #{record.stationTel,jdbcType=VARCHAR}");
        }
        
        if (record.getStationAddress() != null) {
            sql.SET("station_address = #{record.stationAddress,jdbcType=VARCHAR}");
        }
        
        if (record.getCoordinateX() != null) {
            sql.SET("coordinate_x = #{record.coordinateX,jdbcType=DECIMAL}");
        }
        
        if (record.getCoordinateY() != null) {
            sql.SET("coordinate_y = #{record.coordinateY,jdbcType=DECIMAL}");
        }
        
        if (record.getCoordinateZ() != null) {
            sql.SET("coordinate_z = #{record.coordinateZ,jdbcType=DECIMAL}");
        }
        
        if (record.getNote() != null) {
            sql.SET("note = #{record.note,jdbcType=VARCHAR}");
        }
        
        if (record.getProtectUnit() != null) {
            sql.SET("protect_unit = #{record.protectUnit,jdbcType=VARCHAR}");
        }
        
        if (record.getDutyType() != null) {
            sql.SET("duty_type = #{record.dutyType,jdbcType=DECIMAL}");
        }
        
        if (record.getCdmaNodeTask() != null) {
            sql.SET("cdma_node_task = #{record.cdmaNodeTask,jdbcType=VARCHAR}");
        }
        
        if (record.getStationOwner() != null) {
            sql.SET("station_owner = #{record.stationOwner,jdbcType=DECIMAL}");
        }
        
        if (record.getTheaterId() != null) {
            sql.SET("theater_id = #{record.theaterId,jdbcType=DECIMAL}");
        }
        
        if (record.getArmyType() != null) {
            sql.SET("army_type = #{record.armyType,jdbcType=DECIMAL}");
        }
        
        if (record.getIsLiable() != null) {
            sql.SET("is_liable = #{record.isLiable,jdbcType=DECIMAL}");
        }
        
        if (record.getDutyNum() != null) {
            sql.SET("duty_num = #{record.dutyNum,jdbcType=DECIMAL}");
        }
        
        if (record.getStationUnknownFlg() != null) {
            sql.SET("station_unknown_flg = #{record.stationUnknownFlg,jdbcType=TINYINT}");
        }
        
        if (record.getStationValid() != null) {
            sql.SET("station_valid = #{record.stationValid,jdbcType=TINYINT}");
        }
        
        if (record.getCompany() != null) {
            sql.SET("company = #{record.company,jdbcType=VARCHAR}");
        }
        
        if (record.getUpdateTimestamp() != null) {
            sql.SET("update_timestamp = #{record.updateTimestamp,jdbcType=TIMESTAMP}");
        }
        
        applyWhere(sql, example, true);
        return sql.toString();
    }

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table bas_station
     *
     * @mbg.generated Mon Sep 14 11:17:32 CST 2020
     */
    public String updateByExample(Map<String, Object> parameter) {
        SQL sql = new SQL();
        sql.UPDATE("bas_station");
        
        sql.SET("station_id = #{record.stationId,jdbcType=DECIMAL}");
        sql.SET("res_no = #{record.resNo,jdbcType=VARCHAR}");
        sql.SET("station_name = #{record.stationName,jdbcType=VARCHAR}");
        sql.SET("station_type = #{record.stationType,jdbcType=DECIMAL}");
        sql.SET("admin_district_id = #{record.adminDistrictId,jdbcType=DECIMAL}");
        sql.SET("org_id = #{record.orgId,jdbcType=DECIMAL}");
        sql.SET("org_type = #{record.orgType,jdbcType=DECIMAL}");
        sql.SET("station_order = #{record.stationOrder,jdbcType=DECIMAL}");
        sql.SET("station_tel = #{record.stationTel,jdbcType=VARCHAR}");
        sql.SET("station_address = #{record.stationAddress,jdbcType=VARCHAR}");
        sql.SET("coordinate_x = #{record.coordinateX,jdbcType=DECIMAL}");
        sql.SET("coordinate_y = #{record.coordinateY,jdbcType=DECIMAL}");
        sql.SET("coordinate_z = #{record.coordinateZ,jdbcType=DECIMAL}");
        sql.SET("note = #{record.note,jdbcType=VARCHAR}");
        sql.SET("protect_unit = #{record.protectUnit,jdbcType=VARCHAR}");
        sql.SET("duty_type = #{record.dutyType,jdbcType=DECIMAL}");
        sql.SET("cdma_node_task = #{record.cdmaNodeTask,jdbcType=VARCHAR}");
        sql.SET("station_owner = #{record.stationOwner,jdbcType=DECIMAL}");
        sql.SET("theater_id = #{record.theaterId,jdbcType=DECIMAL}");
        sql.SET("army_type = #{record.armyType,jdbcType=DECIMAL}");
        sql.SET("is_liable = #{record.isLiable,jdbcType=DECIMAL}");
        sql.SET("duty_num = #{record.dutyNum,jdbcType=DECIMAL}");
        sql.SET("station_unknown_flg = #{record.stationUnknownFlg,jdbcType=TINYINT}");
        sql.SET("station_valid = #{record.stationValid,jdbcType=TINYINT}");
        sql.SET("company = #{record.company,jdbcType=VARCHAR}");
        sql.SET("update_timestamp = #{record.updateTimestamp,jdbcType=TIMESTAMP}");
        
        BasStationExample example = (BasStationExample) parameter.get("example");
        applyWhere(sql, example, true);
        return sql.toString();
    }

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table bas_station
     *
     * @mbg.generated Mon Sep 14 11:17:32 CST 2020
     */
    public String updateByPrimaryKeySelective(BasStation record) {
        SQL sql = new SQL();
        sql.UPDATE("bas_station");
        
        if (record.getResNo() != null) {
            sql.SET("res_no = #{resNo,jdbcType=VARCHAR}");
        }
        
        if (record.getStationName() != null) {
            sql.SET("station_name = #{stationName,jdbcType=VARCHAR}");
        }
        
        if (record.getStationType() != null) {
            sql.SET("station_type = #{stationType,jdbcType=DECIMAL}");
        }
        
        if (record.getAdminDistrictId() != null) {
            sql.SET("admin_district_id = #{adminDistrictId,jdbcType=DECIMAL}");
        }
        
        if (record.getOrgId() != null) {
            sql.SET("org_id = #{orgId,jdbcType=DECIMAL}");
        }
        
        if (record.getOrgType() != null) {
            sql.SET("org_type = #{orgType,jdbcType=DECIMAL}");
        }
        
        if (record.getStationOrder() != null) {
            sql.SET("station_order = #{stationOrder,jdbcType=DECIMAL}");
        }
        
        if (record.getStationTel() != null) {
            sql.SET("station_tel = #{stationTel,jdbcType=VARCHAR}");
        }
        
        if (record.getStationAddress() != null) {
            sql.SET("station_address = #{stationAddress,jdbcType=VARCHAR}");
        }
        
        if (record.getCoordinateX() != null) {
            sql.SET("coordinate_x = #{coordinateX,jdbcType=DECIMAL}");
        }
        
        if (record.getCoordinateY() != null) {
            sql.SET("coordinate_y = #{coordinateY,jdbcType=DECIMAL}");
        }
        
        if (record.getCoordinateZ() != null) {
            sql.SET("coordinate_z = #{coordinateZ,jdbcType=DECIMAL}");
        }
        
        if (record.getNote() != null) {
            sql.SET("note = #{note,jdbcType=VARCHAR}");
        }
        
        if (record.getProtectUnit() != null) {
            sql.SET("protect_unit = #{protectUnit,jdbcType=VARCHAR}");
        }
        
        if (record.getDutyType() != null) {
            sql.SET("duty_type = #{dutyType,jdbcType=DECIMAL}");
        }
        
        if (record.getCdmaNodeTask() != null) {
            sql.SET("cdma_node_task = #{cdmaNodeTask,jdbcType=VARCHAR}");
        }
        
        if (record.getStationOwner() != null) {
            sql.SET("station_owner = #{stationOwner,jdbcType=DECIMAL}");
        }
        
        if (record.getTheaterId() != null) {
            sql.SET("theater_id = #{theaterId,jdbcType=DECIMAL}");
        }
        
        if (record.getArmyType() != null) {
            sql.SET("army_type = #{armyType,jdbcType=DECIMAL}");
        }
        
        if (record.getIsLiable() != null) {
            sql.SET("is_liable = #{isLiable,jdbcType=DECIMAL}");
        }
        
        if (record.getDutyNum() != null) {
            sql.SET("duty_num = #{dutyNum,jdbcType=DECIMAL}");
        }
        
        if (record.getStationUnknownFlg() != null) {
            sql.SET("station_unknown_flg = #{stationUnknownFlg,jdbcType=TINYINT}");
        }
        
        if (record.getStationValid() != null) {
            sql.SET("station_valid = #{stationValid,jdbcType=TINYINT}");
        }
        
        if (record.getCompany() != null) {
            sql.SET("company = #{company,jdbcType=VARCHAR}");
        }
        
        if (record.getUpdateTimestamp() != null) {
            sql.SET("update_timestamp = #{updateTimestamp,jdbcType=TIMESTAMP}");
        }
        
        sql.WHERE("station_id = #{stationId,jdbcType=DECIMAL}");
        
        return sql.toString();
    }

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table bas_station
     *
     * @mbg.generated Mon Sep 14 11:17:32 CST 2020
     */
    protected void applyWhere(SQL sql, BasStationExample example, boolean includeExamplePhrase) {
        if (example == null) {
            return;
        }
        
        String parmPhrase1;
        String parmPhrase1_th;
        String parmPhrase2;
        String parmPhrase2_th;
        String parmPhrase3;
        String parmPhrase3_th;
        if (includeExamplePhrase) {
            parmPhrase1 = "%s #{example.oredCriteria[%d].allCriteria[%d].value}";
            parmPhrase1_th = "%s #{example.oredCriteria[%d].allCriteria[%d].value,typeHandler=%s}";
            parmPhrase2 = "%s #{example.oredCriteria[%d].allCriteria[%d].value} and #{example.oredCriteria[%d].criteria[%d].secondValue}";
            parmPhrase2_th = "%s #{example.oredCriteria[%d].allCriteria[%d].value,typeHandler=%s} and #{example.oredCriteria[%d].criteria[%d].secondValue,typeHandler=%s}";
            parmPhrase3 = "#{example.oredCriteria[%d].allCriteria[%d].value[%d]}";
            parmPhrase3_th = "#{example.oredCriteria[%d].allCriteria[%d].value[%d],typeHandler=%s}";
        } else {
            parmPhrase1 = "%s #{oredCriteria[%d].allCriteria[%d].value}";
            parmPhrase1_th = "%s #{oredCriteria[%d].allCriteria[%d].value,typeHandler=%s}";
            parmPhrase2 = "%s #{oredCriteria[%d].allCriteria[%d].value} and #{oredCriteria[%d].criteria[%d].secondValue}";
            parmPhrase2_th = "%s #{oredCriteria[%d].allCriteria[%d].value,typeHandler=%s} and #{oredCriteria[%d].criteria[%d].secondValue,typeHandler=%s}";
            parmPhrase3 = "#{oredCriteria[%d].allCriteria[%d].value[%d]}";
            parmPhrase3_th = "#{oredCriteria[%d].allCriteria[%d].value[%d],typeHandler=%s}";
        }
        
        StringBuilder sb = new StringBuilder();
        List<Criteria> oredCriteria = example.getOredCriteria();
        boolean firstCriteria = true;
        for (int i = 0; i < oredCriteria.size(); i++) {
            Criteria criteria = oredCriteria.get(i);
            if (criteria.isValid()) {
                if (firstCriteria) {
                    firstCriteria = false;
                } else {
                    sb.append(" or ");
                }
                
                sb.append('(');
                List<Criterion> criterions = criteria.getAllCriteria();
                boolean firstCriterion = true;
                for (int j = 0; j < criterions.size(); j++) {
                    Criterion criterion = criterions.get(j);
                    if (firstCriterion) {
                        firstCriterion = false;
                    } else {
                        sb.append(" and ");
                    }
                    
                    if (criterion.isNoValue()) {
                        sb.append(criterion.getCondition());
                    } else if (criterion.isSingleValue()) {
                        if (criterion.getTypeHandler() == null) {
                            sb.append(String.format(parmPhrase1, criterion.getCondition(), i, j));
                        } else {
                            sb.append(String.format(parmPhrase1_th, criterion.getCondition(), i, j,criterion.getTypeHandler()));
                        }
                    } else if (criterion.isBetweenValue()) {
                        if (criterion.getTypeHandler() == null) {
                            sb.append(String.format(parmPhrase2, criterion.getCondition(), i, j, i, j));
                        } else {
                            sb.append(String.format(parmPhrase2_th, criterion.getCondition(), i, j, criterion.getTypeHandler(), i, j, criterion.getTypeHandler()));
                        }
                    } else if (criterion.isListValue()) {
                        sb.append(criterion.getCondition());
                        sb.append(" (");
                        List<?> listItems = (List<?>) criterion.getValue();
                        boolean comma = false;
                        for (int k = 0; k < listItems.size(); k++) {
                            if (comma) {
                                sb.append(", ");
                            } else {
                                comma = true;
                            }
                            if (criterion.getTypeHandler() == null) {
                                sb.append(String.format(parmPhrase3, i, j, k));
                            } else {
                                sb.append(String.format(parmPhrase3_th, i, j, k, criterion.getTypeHandler()));
                            }
                        }
                        sb.append(')');
                    }
                }
                sb.append(')');
            }
        }
        
        if (sb.length() > 0) {
            sql.WHERE(sb.toString());
        }
    }
}