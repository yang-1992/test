package com.ctsi.space.repository;

import com.ctsi.space.domain.BasUserStationRelation;
import com.ctsi.space.domain.BasUserStationRelationExample;
import org.apache.ibatis.annotations.*;
import org.apache.ibatis.type.JdbcType;

import java.util.List;
import java.util.Set;

/**
 * @author ctsi-biyi-generator
*/
@Mapper
public interface BasUserStationRelationRepository extends com.ctsi.ssdc.repository.BaseRepository<BasUserStationRelation, Long, BasUserStationRelationExample> {
    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table bas_user_station_relation
     *
     * @mbg.generated Wed Sep 16 13:10:12 CST 2020
     */
    @SelectProvider(type=BasUserStationRelationSqlProvider.class, method="countByExample")
    long countByExample(BasUserStationRelationExample example);

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table bas_user_station_relation
     *
     * @mbg.generated Wed Sep 16 13:10:12 CST 2020
     */
    @DeleteProvider(type=BasUserStationRelationSqlProvider.class, method="deleteByExample")
    int deleteByExample(BasUserStationRelationExample example);

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table bas_user_station_relation
     *
     * @mbg.generated Wed Sep 16 13:10:12 CST 2020
     */
    @Delete({
        "delete from bas_user_station_relation",
        "where id = #{id,jdbcType=DECIMAL}"
    })
    int deleteByPrimaryKey(Long id);

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table bas_user_station_relation
     *
     * @mbg.generated Wed Sep 16 13:10:12 CST 2020
     */
    @Insert({
        "insert into bas_user_station_relation (id, user_id, ",
        "station_id)",
        "values (#{id,jdbcType=DECIMAL}, #{userId,jdbcType=DECIMAL}, ",
        "#{stationId,jdbcType=DECIMAL})"
    })
    int insert(BasUserStationRelation record);

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table bas_user_station_relation
     *
     * @mbg.generated Wed Sep 16 13:10:12 CST 2020
     */
    @InsertProvider(type=BasUserStationRelationSqlProvider.class, method="insertSelective")
    int insertSelective(BasUserStationRelation record);

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table bas_user_station_relation
     *
     * @mbg.generated Wed Sep 16 13:10:12 CST 2020
     */
    @SelectProvider(type=BasUserStationRelationSqlProvider.class, method="selectByExample")
    @Results({
        @Result(column="id", property="id", jdbcType=JdbcType.DECIMAL, id=true),
        @Result(column="user_id", property="userId", jdbcType=JdbcType.DECIMAL),
        @Result(column="station_id", property="stationId", jdbcType=JdbcType.DECIMAL)
    })
    List<BasUserStationRelation> selectByExample(BasUserStationRelationExample example);

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table bas_user_station_relation
     *
     * @mbg.generated Wed Sep 16 13:10:12 CST 2020
     */
    @Select({
        "select",
        "id, user_id, station_id",
        "from bas_user_station_relation",
        "where id = #{id,jdbcType=DECIMAL}"
    })
    @Results({
        @Result(column="id", property="id", jdbcType=JdbcType.DECIMAL, id=true),
        @Result(column="user_id", property="userId", jdbcType=JdbcType.DECIMAL),
        @Result(column="station_id", property="stationId", jdbcType=JdbcType.DECIMAL)
    })
    BasUserStationRelation selectByPrimaryKey(Long id);

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table bas_user_station_relation
     *
     * @mbg.generated Wed Sep 16 13:10:12 CST 2020
     */
    @UpdateProvider(type=BasUserStationRelationSqlProvider.class, method="updateByExampleSelective")
    int updateByExampleSelective(@Param("record") BasUserStationRelation record, @Param("example") BasUserStationRelationExample example);

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table bas_user_station_relation
     *
     * @mbg.generated Wed Sep 16 13:10:12 CST 2020
     */
    @UpdateProvider(type=BasUserStationRelationSqlProvider.class, method="updateByExample")
    int updateByExample(@Param("record") BasUserStationRelation record, @Param("example") BasUserStationRelationExample example);

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table bas_user_station_relation
     *
     * @mbg.generated Wed Sep 16 13:10:12 CST 2020
     */
    @UpdateProvider(type=BasUserStationRelationSqlProvider.class, method="updateByPrimaryKeySelective")
    int updateByPrimaryKeySelective(BasUserStationRelation record);

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table bas_user_station_relation
     *
     * @mbg.generated Wed Sep 16 13:10:12 CST 2020
     */
    @Update({
        "update bas_user_station_relation",
        "set user_id = #{userId,jdbcType=DECIMAL},",
          "station_id = #{stationId,jdbcType=DECIMAL}",
        "where id = #{id,jdbcType=DECIMAL}"
    })
    int updateByPrimaryKey(BasUserStationRelation record);

    /**
     * 新增关联关系
     *
     * @param userId 用户ID
     * @param stationIds 台站ID列表
     * @author lechp
     *
     * @return 插入的数量
     */
    @InsertProvider(type=BasUserStationRelationSqlProvider.class, method="insertUserStationRelListForStations")
    int insertUserStationRelListForStations(@Param("userId") Long userId,
                                            @Param("stationIds") List<Long> stationIds);

    /**
     * 新增关联关系
     *
     * @param stationId 台站ID
     * @param userIds 用户ID列表
     * @author lechp
     *
     * @return 插入的数量
     */
    @InsertProvider(type=BasUserStationRelationSqlProvider.class, method="insertUserStationRelListForUsers")
    int insertUserStationRelListForUsers(@Param("stationId") Long stationId,
                                 @Param("userIds") List<Long> userIds);

    /**
     * 删除关联关系
     *
     * @param userId 用户ID
     * @param stationIds 台站ID列表
     * @author lechp
     *
     * @return 删除的数量
     */
    @DeleteProvider(type=BasUserStationRelationSqlProvider.class, method="deleteUserStationRelListForStations")
    int deleteUserStationRelListFoStations(@Param("userId") Long userId,
                                 @Param("stationIds") List<Long> stationIds);


    /**
     * 删除关联关系
     *
     * @param stationId 台站ID
     * @param userIds 用户ID列表
     * @author lechp
     *
     * @return 删除的数量
     */
    @DeleteProvider(type=BasUserStationRelationSqlProvider.class, method="deleteUserStationRelListForUsers")
    int deleteUserStationRelListForUsers(@Param("stationId") Long stationId,
                                 @Param("userIds") List<Long> userIds);

    /**
     * 删除用户关联的所有台站
     *
     * @param userId 用户ID
     * @return 行数
     */
    @Delete("DELETE FROM bas_user_station_relation WHERE user_id=#{userId}")
    int deleteByUserId(Long userId);

    /**
     * 查询对应用户ID的用户绑定的所有台站ID列表
     *
     * @param userId 用户ID
     * @return 台站ID列表
     */
    @Select("SELECT DISTINCT station_id FROM bas_user_station_relation WHERE user_id=#{userId}")
    Set<Long> selectStationIdsByUserId(Long userId);

    /**
     * 全表查询userId和stationId
     *
     * @return List<BasUserStationRelation>
     */
    @Select("SELECT user_id userId, station_id stationId FROM bas_user_station_relation ORDER BY user_id")
    List<BasUserStationRelation> selectAllUserIdStationId();
}