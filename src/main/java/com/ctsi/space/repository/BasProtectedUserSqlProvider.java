package com.ctsi.space.repository;

import com.ctsi.space.domain.BasProtectedUser;
import com.ctsi.space.domain.BasProtectedUserExample.Criteria;
import com.ctsi.space.domain.BasProtectedUserExample.Criterion;
import com.ctsi.space.domain.BasProtectedUserExample;
import java.util.List;
import java.util.Map;
import org.apache.ibatis.jdbc.SQL;

/**
 * @author ctsi-biyi-generator
 */
public class BasProtectedUserSqlProvider {

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table bas_protected_user
     *
     * @mbg.generated Thu Sep 24 14:35:22 CST 2020
     */
    public String countByExample(BasProtectedUserExample example) {
        SQL sql = new SQL();
        sql.SELECT("count(*)").FROM("bas_protected_user");
        applyWhere(sql, example, false);
        return sql.toString();
    }

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table bas_protected_user
     *
     * @mbg.generated Thu Sep 24 14:35:22 CST 2020
     */
    public String deleteByExample(BasProtectedUserExample example) {
        SQL sql = new SQL();
        sql.DELETE_FROM("bas_protected_user");
        applyWhere(sql, example, false);
        return sql.toString();
    }

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table bas_protected_user
     *
     * @mbg.generated Thu Sep 24 14:35:22 CST 2020
     */
    public String insertSelective(BasProtectedUser record) {
        SQL sql = new SQL();
        sql.INSERT_INTO("bas_protected_user");

        if (record.getUserId() != null) {
            sql.VALUES("user_id", "#{userId,jdbcType=DECIMAL}");
        }

        if (record.getUserName() != null) {
            sql.VALUES("user_name", "#{userName,jdbcType=VARCHAR}");
        }

        if (record.getUserFullName() != null) {
            sql.VALUES("user_full_name", "#{userFullName,jdbcType=VARCHAR}");
        }

        if (record.getUserLevel() != null) {
            sql.VALUES("user_level", "#{userLevel,jdbcType=DECIMAL}");
        }

        if (record.getArea() != null) {
            sql.VALUES("area", "#{area,jdbcType=DECIMAL}");
        }

        if (record.getAddress() != null) {
            sql.VALUES("address", "#{address,jdbcType=VARCHAR}");
        }

        if (record.getConnectUser() != null) {
            sql.VALUES("connect_user", "#{connectUser,jdbcType=VARCHAR}");
        }

        if (record.getConnectTel() != null) {
            sql.VALUES("connect_tel", "#{connectTel,jdbcType=VARCHAR}");
        }

        if (record.getArmtType() != null) {
            sql.VALUES("armt_type", "#{armtType,jdbcType=DECIMAL}");
        }

        if (record.getIsValid() != null) {
            sql.VALUES("is_valid", "#{isValid,jdbcType=DECIMAL}");
        }

        if (record.getNote() != null) {
            sql.VALUES("note", "#{note,jdbcType=VARCHAR}");
        }

        if (record.getCusId() != null) {
            sql.VALUES("cus_id", "#{cusId,jdbcType=DECIMAL}");
        }

        if (record.getUserType() != null) {
            sql.VALUES("user_type", "#{userType,jdbcType=DECIMAL}");
        }

        if (record.getArmtName() != null) {
            sql.VALUES("armt_name", "#{armtName,jdbcType=VARCHAR}");
        }

        if (record.getUserMark() != null) {
            sql.VALUES("user_mark", "#{userMark,jdbcType=DECIMAL}");
        }

        if (record.getCusType() != null) {
            sql.VALUES("cus_type", "#{cusType,jdbcType=INTEGER}");
        }

        return sql.toString();
    }

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table bas_protected_user
     *
     * @mbg.generated Thu Sep 24 14:35:22 CST 2020
     */
    public String selectByExample(BasProtectedUserExample example) {
        SQL sql = new SQL();
        if (example != null && example.isDistinct()) {
            sql.SELECT_DISTINCT("user_id");
        } else {
            sql.SELECT("user_id");
        }
        sql.SELECT("user_name");
        sql.SELECT("user_full_name");
        sql.SELECT("user_level");
        sql.SELECT("area");
        sql.SELECT("address");
        sql.SELECT("connect_user");
        sql.SELECT("connect_tel");
        sql.SELECT("armt_type");
        sql.SELECT("is_valid");
        sql.SELECT("note");
        sql.SELECT("cus_id");
        sql.SELECT("user_type");
        sql.SELECT("armt_name");
        sql.SELECT("user_mark");
        sql.SELECT("cus_type");
        sql.FROM("bas_protected_user");
        applyWhere(sql, example, false);

        if (example != null && example.getOrderByClause() != null) {
            sql.ORDER_BY(example.getOrderByClause());
        }

        return sql.toString();
    }

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table bas_protected_user
     *
     * @mbg.generated Thu Sep 24 14:35:22 CST 2020
     */
    public String updateByExampleSelective(Map<String, Object> parameter) {
        BasProtectedUser record = (BasProtectedUser) parameter.get("record");
        BasProtectedUserExample example = (BasProtectedUserExample) parameter.get("example");

        SQL sql = new SQL();
        sql.UPDATE("bas_protected_user");

        if (record.getUserId() != null) {
            sql.SET("user_id = #{record.userId,jdbcType=DECIMAL}");
        }

        if (record.getUserName() != null) {
            sql.SET("user_name = #{record.userName,jdbcType=VARCHAR}");
        }

        if (record.getUserFullName() != null) {
            sql.SET("user_full_name = #{record.userFullName,jdbcType=VARCHAR}");
        }

        if (record.getUserLevel() != null) {
            sql.SET("user_level = #{record.userLevel,jdbcType=DECIMAL}");
        }

        if (record.getArea() != null) {
            sql.SET("area = #{record.area,jdbcType=DECIMAL}");
        }

        if (record.getAddress() != null) {
            sql.SET("address = #{record.address,jdbcType=VARCHAR}");
        }

        if (record.getConnectUser() != null) {
            sql.SET("connect_user = #{record.connectUser,jdbcType=VARCHAR}");
        }

        if (record.getConnectTel() != null) {
            sql.SET("connect_tel = #{record.connectTel,jdbcType=VARCHAR}");
        }

        if (record.getArmtType() != null) {
            sql.SET("armt_type = #{record.armtType,jdbcType=DECIMAL}");
        }

        if (record.getIsValid() != null) {
            sql.SET("is_valid = #{record.isValid,jdbcType=DECIMAL}");
        }

        if (record.getNote() != null) {
            sql.SET("note = #{record.note,jdbcType=VARCHAR}");
        }

        if (record.getCusId() != null) {
            sql.SET("cus_id = #{record.cusId,jdbcType=DECIMAL}");
        }

        if (record.getUserType() != null) {
            sql.SET("user_type = #{record.userType,jdbcType=DECIMAL}");
        }

        if (record.getArmtName() != null) {
            sql.SET("armt_name = #{record.armtName,jdbcType=VARCHAR}");
        }

        if (record.getUserMark() != null) {
            sql.SET("user_mark = #{record.userMark,jdbcType=DECIMAL}");
        }

        if (record.getCusType() != null) {
            sql.SET("cus_type = #{record.cusType,jdbcType=INTEGER}");
        }

        applyWhere(sql, example, true);
        return sql.toString();
    }

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table bas_protected_user
     *
     * @mbg.generated Thu Sep 24 14:35:22 CST 2020
     */
    public String updateByExample(Map<String, Object> parameter) {
        SQL sql = new SQL();
        sql.UPDATE("bas_protected_user");

        sql.SET("user_id = #{record.userId,jdbcType=DECIMAL}");
        sql.SET("user_name = #{record.userName,jdbcType=VARCHAR}");
        sql.SET("user_full_name = #{record.userFullName,jdbcType=VARCHAR}");
        sql.SET("user_level = #{record.userLevel,jdbcType=DECIMAL}");
        sql.SET("area = #{record.area,jdbcType=DECIMAL}");
        sql.SET("address = #{record.address,jdbcType=VARCHAR}");
        sql.SET("connect_user = #{record.connectUser,jdbcType=VARCHAR}");
        sql.SET("connect_tel = #{record.connectTel,jdbcType=VARCHAR}");
        sql.SET("armt_type = #{record.armtType,jdbcType=DECIMAL}");
        sql.SET("is_valid = #{record.isValid,jdbcType=DECIMAL}");
        sql.SET("note = #{record.note,jdbcType=VARCHAR}");
        sql.SET("cus_id = #{record.cusId,jdbcType=DECIMAL}");
        sql.SET("user_type = #{record.userType,jdbcType=DECIMAL}");
        sql.SET("armt_name = #{record.armtName,jdbcType=VARCHAR}");
        sql.SET("user_mark = #{record.userMark,jdbcType=DECIMAL}");
        sql.SET("cus_type = #{record.cusType,jdbcType=INTEGER}");

        BasProtectedUserExample example = (BasProtectedUserExample) parameter.get("example");
        applyWhere(sql, example, true);
        return sql.toString();
    }

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table bas_protected_user
     *
     * @mbg.generated Thu Sep 24 14:35:22 CST 2020
     */
    public String updateByPrimaryKeySelective(BasProtectedUser record) {
        SQL sql = new SQL();
        sql.UPDATE("bas_protected_user");

        if (record.getUserName() != null) {
            sql.SET("user_name = #{userName,jdbcType=VARCHAR}");
        }

        if (record.getUserFullName() != null) {
            sql.SET("user_full_name = #{userFullName,jdbcType=VARCHAR}");
        }

        if (record.getUserLevel() != null) {
            sql.SET("user_level = #{userLevel,jdbcType=DECIMAL}");
        }

        if (record.getArea() != null) {
            sql.SET("area = #{area,jdbcType=DECIMAL}");
        }

        if (record.getAddress() != null) {
            sql.SET("address = #{address,jdbcType=VARCHAR}");
        }

        if (record.getConnectUser() != null) {
            sql.SET("connect_user = #{connectUser,jdbcType=VARCHAR}");
        }

        if (record.getConnectTel() != null) {
            sql.SET("connect_tel = #{connectTel,jdbcType=VARCHAR}");
        }

        if (record.getArmtType() != null) {
            sql.SET("armt_type = #{armtType,jdbcType=DECIMAL}");
        }

        if (record.getIsValid() != null) {
            sql.SET("is_valid = #{isValid,jdbcType=DECIMAL}");
        }

        if (record.getNote() != null) {
            sql.SET("note = #{note,jdbcType=VARCHAR}");
        }

        if (record.getCusId() != null) {
            sql.SET("cus_id = #{cusId,jdbcType=DECIMAL}");
        }

        if (record.getUserType() != null) {
            sql.SET("user_type = #{userType,jdbcType=DECIMAL}");
        }

        if (record.getArmtName() != null) {
            sql.SET("armt_name = #{armtName,jdbcType=VARCHAR}");
        }

        if (record.getUserMark() != null) {
            sql.SET("user_mark = #{userMark,jdbcType=DECIMAL}");
        }

        if (record.getCusType() != null) {
            sql.SET("cus_type = #{cusType,jdbcType=INTEGER}");
        }

        sql.WHERE("user_id = #{userId,jdbcType=DECIMAL}");

        return sql.toString();
    }

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table bas_protected_user
     *
     * @mbg.generated Thu Sep 24 14:35:22 CST 2020
     */
    protected void applyWhere(SQL sql, BasProtectedUserExample example, boolean includeExamplePhrase) {
        if (example == null) {
            return;
        }

        String parmPhrase1;
        String parmPhrase1_th;
        String parmPhrase2;
        String parmPhrase2_th;
        String parmPhrase3;
        String parmPhrase3_th;
        if (includeExamplePhrase) {
            parmPhrase1 = "%s #{example.oredCriteria[%d].allCriteria[%d].value}";
            parmPhrase1_th = "%s #{example.oredCriteria[%d].allCriteria[%d].value,typeHandler=%s}";
            parmPhrase2 = "%s #{example.oredCriteria[%d].allCriteria[%d].value} and #{example.oredCriteria[%d].criteria[%d].secondValue}";
            parmPhrase2_th = "%s #{example.oredCriteria[%d].allCriteria[%d].value,typeHandler=%s} and #{example.oredCriteria[%d].criteria[%d].secondValue,typeHandler=%s}";
            parmPhrase3 = "#{example.oredCriteria[%d].allCriteria[%d].value[%d]}";
            parmPhrase3_th = "#{example.oredCriteria[%d].allCriteria[%d].value[%d],typeHandler=%s}";
        } else {
            parmPhrase1 = "%s #{oredCriteria[%d].allCriteria[%d].value}";
            parmPhrase1_th = "%s #{oredCriteria[%d].allCriteria[%d].value,typeHandler=%s}";
            parmPhrase2 = "%s #{oredCriteria[%d].allCriteria[%d].value} and #{oredCriteria[%d].criteria[%d].secondValue}";
            parmPhrase2_th = "%s #{oredCriteria[%d].allCriteria[%d].value,typeHandler=%s} and #{oredCriteria[%d].criteria[%d].secondValue,typeHandler=%s}";
            parmPhrase3 = "#{oredCriteria[%d].allCriteria[%d].value[%d]}";
            parmPhrase3_th = "#{oredCriteria[%d].allCriteria[%d].value[%d],typeHandler=%s}";
        }

        StringBuilder sb = new StringBuilder();
        List<Criteria> oredCriteria = example.getOredCriteria();
        boolean firstCriteria = true;
        for (int i = 0; i < oredCriteria.size(); i++) {
            Criteria criteria = oredCriteria.get(i);
            if (criteria.isValid()) {
                if (firstCriteria) {
                    firstCriteria = false;
                } else {
                    sb.append(" or ");
                }

                sb.append('(');
                List<Criterion> criterions = criteria.getAllCriteria();
                boolean firstCriterion = true;
                for (int j = 0; j < criterions.size(); j++) {
                    Criterion criterion = criterions.get(j);
                    if (firstCriterion) {
                        firstCriterion = false;
                    } else {
                        sb.append(" and ");
                    }

                    if (criterion.isNoValue()) {
                        sb.append(criterion.getCondition());
                    } else if (criterion.isSingleValue()) {
                        if (criterion.getTypeHandler() == null) {
                            sb.append(String.format(parmPhrase1, criterion.getCondition(), i, j));
                        } else {
                            sb.append(String.format(parmPhrase1_th, criterion.getCondition(), i, j,criterion.getTypeHandler()));
                        }
                    } else if (criterion.isBetweenValue()) {
                        if (criterion.getTypeHandler() == null) {
                            sb.append(String.format(parmPhrase2, criterion.getCondition(), i, j, i, j));
                        } else {
                            sb.append(String.format(parmPhrase2_th, criterion.getCondition(), i, j, criterion.getTypeHandler(), i, j, criterion.getTypeHandler()));
                        }
                    } else if (criterion.isListValue()) {
                        sb.append(criterion.getCondition());
                        sb.append(" (");
                        List<?> listItems = (List<?>) criterion.getValue();
                        boolean comma = false;
                        for (int k = 0; k < listItems.size(); k++) {
                            if (comma) {
                                sb.append(", ");
                            } else {
                                comma = true;
                            }
                            if (criterion.getTypeHandler() == null) {
                                sb.append(String.format(parmPhrase3, i, j, k));
                            } else {
                                sb.append(String.format(parmPhrase3_th, i, j, k, criterion.getTypeHandler()));
                            }
                        }
                        sb.append(')');
                    }
                }
                sb.append(')');
            }
        }

        if (sb.length() > 0) {
            sql.WHERE(sb.toString());
        }
    }
}