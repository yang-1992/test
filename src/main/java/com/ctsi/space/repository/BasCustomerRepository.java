package com.ctsi.space.repository;

import com.ctsi.space.domain.BasCustomer;
import com.ctsi.space.domain.BasCustomerExample;
import com.ctsi.space.domain.dto.CustomerDto;
import com.ctsi.space.domain.dto.CustomerStationDto;
import com.ctsi.space.domain.dto.SimpleOrgDto;
import org.apache.ibatis.annotations.*;
import org.apache.ibatis.type.JdbcType;

import java.util.List;

/**
 * @author ctsi-biyi-generator
*/
@Mapper
public interface BasCustomerRepository extends com.ctsi.ssdc.repository.BaseRepository<BasCustomer, Long, BasCustomerExample> {
    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table bas_customer
     *
     * @mbg.generated Fri Sep 11 16:07:21 CST 2020
     */
    @SelectProvider(type= BasCustomerSqlProvider.class, method="countByExample")
    long countByExample(BasCustomerExample example);

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table bas_customer
     *
     * @mbg.generated Fri Sep 11 16:07:21 CST 2020
     */
    @DeleteProvider(type= BasCustomerSqlProvider.class, method="deleteByExample")
    int deleteByExample(BasCustomerExample example);

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table bas_customer
     *
     * @mbg.generated Fri Sep 11 16:07:21 CST 2020
     */
    @Delete({
        "delete from bas_customer",
        "where cus_id = #{cusId,jdbcType=DECIMAL}"
    })
    int deleteByPrimaryKey(Long cusId);

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table bas_customer
     *
     * @mbg.generated Fri Sep 11 16:07:21 CST 2020
     */
    @Insert({
        "insert into bas_customer (cus_id, cus_num, ",
        "cus_name, cus_name_ab, ",
        "cus_type, cus_level, ",
        "cus_addr, cus_person, ",
        "cus_tel, cus_email, ",
        "cus_note, cus_is_lease, ",
        "cus_circuit_postfix, cus_admin_district, ",
        "cus_postfix_type, is_valid, ",
        "cus_belong, cus_service_level, ",
        "cus_attribute1, cus_attribute2, ",
        "cus_attribute3, cus_attribute4, ",
        "parent_cus_id, cus_path, ",
        "inner_order)",
        "values (#{cusId,jdbcType=DECIMAL}, #{cusNum,jdbcType=VARCHAR}, ",
        "#{cusName,jdbcType=VARCHAR}, #{cusNameAb,jdbcType=VARCHAR}, ",
        "#{cusType,jdbcType=DECIMAL}, #{cusLevel,jdbcType=TINYINT}, ",
        "#{cusAddr,jdbcType=VARCHAR}, #{cusPerson,jdbcType=VARCHAR}, ",
        "#{cusTel,jdbcType=VARCHAR}, #{cusEmail,jdbcType=VARCHAR}, ",
        "#{cusNote,jdbcType=VARCHAR}, #{cusIsLease,jdbcType=TINYINT}, ",
        "#{cusCircuitPostfix,jdbcType=VARCHAR}, #{cusAdminDistrict,jdbcType=DECIMAL}, ",
        "#{cusPostfixType,jdbcType=INTEGER}, #{isValid,jdbcType=TINYINT}, ",
        "#{cusBelong,jdbcType=TINYINT}, #{cusServiceLevel,jdbcType=INTEGER}, ",
        "#{cusAttribute1,jdbcType=VARCHAR}, #{cusAttribute2,jdbcType=VARCHAR}, ",
        "#{cusAttribute3,jdbcType=VARCHAR}, #{cusAttribute4,jdbcType=VARCHAR}, ",
        "#{parentCusId,jdbcType=DECIMAL}, #{cusPath,jdbcType=VARCHAR}, ",
        "#{innerOrder,jdbcType=VARCHAR})"
    })
    int insert(BasCustomer record);

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table bas_customer
     *
     * @mbg.generated Fri Sep 11 16:07:21 CST 2020
     */
    @InsertProvider(type= BasCustomerSqlProvider.class, method="insertSelective")
    int insertSelective(BasCustomer record);

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table bas_customer
     *
     * @mbg.generated Fri Sep 11 16:07:21 CST 2020
     */
    @SelectProvider(type= BasCustomerSqlProvider.class, method="selectByExample")
    @Results({
        @Result(column="cus_id", property="cusId", jdbcType=JdbcType.DECIMAL, id=true),
        @Result(column="cus_num", property="cusNum", jdbcType=JdbcType.VARCHAR),
        @Result(column="cus_name", property="cusName", jdbcType=JdbcType.VARCHAR),
        @Result(column="cus_name_ab", property="cusNameAb", jdbcType=JdbcType.VARCHAR),
        @Result(column="cus_type", property="cusType", jdbcType=JdbcType.DECIMAL),
        @Result(column="cus_level", property="cusLevel", jdbcType=JdbcType.TINYINT),
        @Result(column="cus_addr", property="cusAddr", jdbcType=JdbcType.VARCHAR),
        @Result(column="cus_person", property="cusPerson", jdbcType=JdbcType.VARCHAR),
        @Result(column="cus_tel", property="cusTel", jdbcType=JdbcType.VARCHAR),
        @Result(column="cus_email", property="cusEmail", jdbcType=JdbcType.VARCHAR),
        @Result(column="cus_note", property="cusNote", jdbcType=JdbcType.VARCHAR),
        @Result(column="cus_is_lease", property="cusIsLease", jdbcType=JdbcType.TINYINT),
        @Result(column="cus_circuit_postfix", property="cusCircuitPostfix", jdbcType=JdbcType.VARCHAR),
        @Result(column="cus_admin_district", property="cusAdminDistrict", jdbcType=JdbcType.DECIMAL),
        @Result(column="cus_postfix_type", property="cusPostfixType", jdbcType=JdbcType.INTEGER),
        @Result(column="is_valid", property="isValid", jdbcType=JdbcType.TINYINT),
        @Result(column="cus_belong", property="cusBelong", jdbcType=JdbcType.TINYINT),
        @Result(column="cus_service_level", property="cusServiceLevel", jdbcType=JdbcType.INTEGER),
        @Result(column="cus_attribute1", property="cusAttribute1", jdbcType=JdbcType.VARCHAR),
        @Result(column="cus_attribute2", property="cusAttribute2", jdbcType=JdbcType.VARCHAR),
        @Result(column="cus_attribute3", property="cusAttribute3", jdbcType=JdbcType.VARCHAR),
        @Result(column="cus_attribute4", property="cusAttribute4", jdbcType=JdbcType.VARCHAR),
        @Result(column="parent_cus_id", property="parentCusId", jdbcType=JdbcType.DECIMAL),
        @Result(column="cus_path", property="cusPath", jdbcType=JdbcType.VARCHAR),
        @Result(column="inner_order", property="innerOrder", jdbcType=JdbcType.VARCHAR)
    })
    List<BasCustomer> selectByExample(BasCustomerExample example);

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table bas_customer
     *
     * @mbg.generated Fri Sep 11 16:07:21 CST 2020
     */
    @Select({
        "select",
        "cus_id, cus_num, cus_name, cus_name_ab, cus_type, cus_level, cus_addr, cus_person, ",
        "cus_tel, cus_email, cus_note, cus_is_lease, cus_circuit_postfix, cus_admin_district, ",
        "cus_postfix_type, is_valid, cus_belong, cus_service_level, cus_attribute1, cus_attribute2, ",
        "cus_attribute3, cus_attribute4, parent_cus_id, cus_path, inner_order",
        "from bas_customer",
        "where cus_id = #{cusId,jdbcType=DECIMAL}"
    })
    @Results({
        @Result(column="cus_id", property="cusId", jdbcType=JdbcType.DECIMAL, id=true),
        @Result(column="cus_num", property="cusNum", jdbcType=JdbcType.VARCHAR),
        @Result(column="cus_name", property="cusName", jdbcType=JdbcType.VARCHAR),
        @Result(column="cus_name_ab", property="cusNameAb", jdbcType=JdbcType.VARCHAR),
        @Result(column="cus_type", property="cusType", jdbcType=JdbcType.DECIMAL),
        @Result(column="cus_level", property="cusLevel", jdbcType=JdbcType.TINYINT),
        @Result(column="cus_addr", property="cusAddr", jdbcType=JdbcType.VARCHAR),
        @Result(column="cus_person", property="cusPerson", jdbcType=JdbcType.VARCHAR),
        @Result(column="cus_tel", property="cusTel", jdbcType=JdbcType.VARCHAR),
        @Result(column="cus_email", property="cusEmail", jdbcType=JdbcType.VARCHAR),
        @Result(column="cus_note", property="cusNote", jdbcType=JdbcType.VARCHAR),
        @Result(column="cus_is_lease", property="cusIsLease", jdbcType=JdbcType.TINYINT),
        @Result(column="cus_circuit_postfix", property="cusCircuitPostfix", jdbcType=JdbcType.VARCHAR),
        @Result(column="cus_admin_district", property="cusAdminDistrict", jdbcType=JdbcType.DECIMAL),
        @Result(column="cus_postfix_type", property="cusPostfixType", jdbcType=JdbcType.INTEGER),
        @Result(column="is_valid", property="isValid", jdbcType=JdbcType.TINYINT),
        @Result(column="cus_belong", property="cusBelong", jdbcType=JdbcType.TINYINT),
        @Result(column="cus_service_level", property="cusServiceLevel", jdbcType=JdbcType.INTEGER),
        @Result(column="cus_attribute1", property="cusAttribute1", jdbcType=JdbcType.VARCHAR),
        @Result(column="cus_attribute2", property="cusAttribute2", jdbcType=JdbcType.VARCHAR),
        @Result(column="cus_attribute3", property="cusAttribute3", jdbcType=JdbcType.VARCHAR),
        @Result(column="cus_attribute4", property="cusAttribute4", jdbcType=JdbcType.VARCHAR),
        @Result(column="parent_cus_id", property="parentCusId", jdbcType=JdbcType.DECIMAL),
        @Result(column="cus_path", property="cusPath", jdbcType=JdbcType.VARCHAR),
        @Result(column="inner_order", property="innerOrder", jdbcType=JdbcType.VARCHAR)
    })
    BasCustomer selectByPrimaryKey(Long cusId);

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table bas_customer
     *
     * @mbg.generated Fri Sep 11 16:07:21 CST 2020
     */
    @UpdateProvider(type= BasCustomerSqlProvider.class, method="updateByExampleSelective")
    int updateByExampleSelective(@Param("record") BasCustomer record, @Param("example") BasCustomerExample example);

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table bas_customer
     *
     * @mbg.generated Fri Sep 11 16:07:21 CST 2020
     */
    @UpdateProvider(type= BasCustomerSqlProvider.class, method="updateByExample")
    int updateByExample(@Param("record") BasCustomer record, @Param("example") BasCustomerExample example);

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table bas_customer
     *
     * @mbg.generated Fri Sep 11 16:07:21 CST 2020
     */
    @UpdateProvider(type= BasCustomerSqlProvider.class, method="updateByPrimaryKeySelective")
    int updateByPrimaryKeySelective(BasCustomer record);

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table bas_customer
     *
     * @mbg.generated Fri Sep 11 16:07:21 CST 2020
     */
    @Update({
        "update bas_customer",
        "set cus_num = #{cusNum,jdbcType=VARCHAR},",
          "cus_name = #{cusName,jdbcType=VARCHAR},",
          "cus_name_ab = #{cusNameAb,jdbcType=VARCHAR},",
          "cus_type = #{cusType,jdbcType=DECIMAL},",
          "cus_level = #{cusLevel,jdbcType=TINYINT},",
          "cus_addr = #{cusAddr,jdbcType=VARCHAR},",
          "cus_person = #{cusPerson,jdbcType=VARCHAR},",
          "cus_tel = #{cusTel,jdbcType=VARCHAR},",
          "cus_email = #{cusEmail,jdbcType=VARCHAR},",
          "cus_note = #{cusNote,jdbcType=VARCHAR},",
          "cus_is_lease = #{cusIsLease,jdbcType=TINYINT},",
          "cus_circuit_postfix = #{cusCircuitPostfix,jdbcType=VARCHAR},",
          "cus_admin_district = #{cusAdminDistrict,jdbcType=DECIMAL},",
          "cus_postfix_type = #{cusPostfixType,jdbcType=INTEGER},",
          "is_valid = #{isValid,jdbcType=TINYINT},",
          "cus_belong = #{cusBelong,jdbcType=TINYINT},",
          "cus_service_level = #{cusServiceLevel,jdbcType=INTEGER},",
          "cus_attribute1 = #{cusAttribute1,jdbcType=VARCHAR},",
          "cus_attribute2 = #{cusAttribute2,jdbcType=VARCHAR},",
          "cus_attribute3 = #{cusAttribute3,jdbcType=VARCHAR},",
          "cus_attribute4 = #{cusAttribute4,jdbcType=VARCHAR},",
          "parent_cus_id = #{parentCusId,jdbcType=DECIMAL},",
          "cus_path = #{cusPath,jdbcType=VARCHAR},",
          "inner_order = #{innerOrder,jdbcType=VARCHAR}",
        "where cus_id = #{cusId,jdbcType=DECIMAL}"
    })
    int updateByPrimaryKey(BasCustomer record);

    /**
     * 根据用户ID查找对应友邻台站组织信息
     * @param userId 用户ID
     * @return 对应友邻台站组织信息
     */
    @Select("SELECT c.cus_id cusId,c.cus_id treeId,c.cus_name cusName,c.cus_name title,c.cus_level cusLevel " +
            "FROM bas_protect_user_relationship r " +
            "JOIN bas_protected_user u ON r.protect_user_id=u.user_id " +
            "LEFT JOIN bas_customer c ON u.cus_id=c.cus_id " +
            "WHERE r.user_id=#{userId} AND c.is_valid=0 LIMIT 1")
    CustomerStationDto findCustomerByUserId(Long userId);

    /**
     * 根据保障用户ID查找对应友邻台站组织信息
     * @param puserId 保障用户ID
     * @return 对应友邻台站组织信息
     */
    @Select("SELECT c.cus_id cusId,c.cus_id treeId,c.cus_name cusName,c.cus_name title,c.cus_level cusLevel " +
            "FROM bas_protected_user u " +
            "LEFT JOIN bas_customer c ON u.cus_id=c.cus_id " +
            "WHERE u.user_id=#{puserId} AND c.is_valid=0 LIMIT 1 ")
    CustomerStationDto findCustomerByProtectedUserId(Long puserId);

    /**
     * 为保障用户设置友邻台站组织
     * @param puserId 保障用户ID
     * @param cusId 友邻台站组织ID
     * @return row
     */
    @Update("UPDATE bas_protected_user u SET cus_id = #{cusId} WHERE u.user_id=#{puserId}")
    int updateCustomerByProtectedUserId(@Param("puserId") Long puserId, @Param("cusId") Long cusId);

    /**
     * 获取子友邻台站组织信息
     * @param cusId 台站ID
     * @return 子友邻台站组织信息
     */
    @Select("SELECT c.cus_id cusId,c.cus_id treeId,c.cus_name cusName,c.cus_name title, c.cus_level cusLevel " +
            "FROM bas_customer c WHERE c.parent_cus_id=#{cusId}")
    List<CustomerStationDto> getChildrenCustomer(Long cusId);

    /**
     * 获取子友邻台站组织信息
     * @param cusId 台站ID
     * @return 子友邻台站组织信息，相比getChildrenCustomer返回DTO不同
     */
    @Select("SELECT c.cus_id cusId,c.cus_id treeId,c.cus_name cusName,c.cus_name title, c.cus_level cusLevel " +
            "FROM bas_customer c WHERE c.parent_cus_id=#{cusId}")
    List<CustomerDto> getChildrenCustomer2(Long cusId);

    /**
     * 获取子友邻台站组织信息
     * @param cusId 台站ID
     * @return 子友邻台站组织信息
     */
    @Select("SELECT c.cus_id orgId,c.cus_name orgName,c.cus_name_ab orgFullName," +
            "SUBSTRING_INDEX(SUBSTRING_INDEX(c.cus_path,'/',2),'/', -1) orgType FROM bas_customer c " +
            "WHERE c.parent_cus_id=#{cusId} AND c.is_valid=0")
    List<SimpleOrgDto> findChildrenOrgSimpleInfo(Long cusId);
}