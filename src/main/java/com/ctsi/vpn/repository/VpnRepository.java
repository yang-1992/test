package com.ctsi.vpn.repository;

import com.ctsi.vpn.domain.Vpn;
import com.ctsi.vpn.domain.VpnExample;
import java.util.List;

import com.ctsi.vpn.domain.dto.ProtectUserDto;
import com.ctsi.vpn.domain.dto.VpnInfoDto;
import org.apache.ibatis.annotations.Delete;
import org.apache.ibatis.annotations.DeleteProvider;
import org.apache.ibatis.annotations.Insert;
import org.apache.ibatis.annotations.InsertProvider;
import org.apache.ibatis.annotations.Mapper;
import org.apache.ibatis.annotations.Param;
import org.apache.ibatis.annotations.Result;
import org.apache.ibatis.annotations.Results;
import org.apache.ibatis.annotations.Select;
import org.apache.ibatis.annotations.SelectProvider;
import org.apache.ibatis.annotations.Update;
import org.apache.ibatis.annotations.UpdateProvider;
import org.apache.ibatis.type.JdbcType;
import org.springframework.stereotype.Repository;

/**
 * @author ctsi-biyi-generator
*/
@Mapper
@Repository
public interface VpnRepository extends com.ctsi.ssdc.repository.BaseRepository<Vpn, Long, VpnExample> {
    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table vpn
     *
     * @mbg.generated Tue Nov 17 18:33:03 CST 2020
     */
    @SelectProvider(type=VpnSqlProvider.class, method="countByExample")
    long countByExample(VpnExample example);

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table vpn
     *
     * @mbg.generated Tue Nov 17 18:33:03 CST 2020
     */
    @DeleteProvider(type=VpnSqlProvider.class, method="deleteByExample")
    int deleteByExample(VpnExample example);

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table vpn
     *
     * @mbg.generated Tue Nov 17 18:33:03 CST 2020
     */
    @Delete({
        "delete from vpn",
        "where vpn_id = #{vpnId,jdbcType=DECIMAL}"
    })
    int deleteByPrimaryKey(Long vpnId);

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table vpn
     *
     * @mbg.generated Tue Nov 17 18:33:03 CST 2020
     */
    @Insert({
        "insert into vpn_db.vpn (vpn_id, net_code, ",
        "crm_net_code, vpn_type, ",
        "vsi, vrf, rd, ",
        "cus_num, cus_name, ",
        "cus_name_ab, cus_address, ",
        "cus_contact, cus_tel, ",
        "cus_fax_email, vpn_route_num, ",
        "net_topo, busi_create_area, ",
        "vpn_type_detail, rt_ipv6, ",
        "optional_rd, create_time, ",
        "rd_ipv6, vpn_ipv6, ",
        "accept_carrier, optional_rd_ipv6, ",
        "update_timestamp, topology_level)",
        "values (#{vpnId,jdbcType=DECIMAL}, #{netCode,jdbcType=VARCHAR}, ",
        "#{crmNetCode,jdbcType=VARCHAR}, #{vpnType,jdbcType=SMALLINT}, ",
        "#{vsi,jdbcType=VARCHAR}, #{vrf,jdbcType=VARCHAR}, #{rd,jdbcType=VARCHAR}, ",
        "#{cusNum,jdbcType=VARCHAR}, #{cusName,jdbcType=VARCHAR}, ",
        "#{cusNameAb,jdbcType=VARCHAR}, #{cusAddress,jdbcType=VARCHAR}, ",
        "#{cusContact,jdbcType=VARCHAR}, #{cusTel,jdbcType=VARCHAR}, ",
        "#{cusFaxEmail,jdbcType=VARCHAR}, #{vpnRouteNum,jdbcType=DECIMAL}, ",
        "#{netTopo,jdbcType=SMALLINT}, #{busiCreateArea,jdbcType=DECIMAL}, ",
        "#{vpnTypeDetail,jdbcType=INTEGER}, #{rtIpv6,jdbcType=VARCHAR}, ",
        "#{optionalRd,jdbcType=VARCHAR}, #{createTime,jdbcType=TIMESTAMP}, ",
        "#{rdIpv6,jdbcType=VARCHAR}, #{vpnIpv6,jdbcType=SMALLINT}, ",
        "#{acceptCarrier,jdbcType=DECIMAL}, #{optionalRdIpv6,jdbcType=VARCHAR}, ",
        "#{updateTimestamp,jdbcType=TIMESTAMP}, #{topologyLevel,jdbcType=VARCHAR})"
    })
    int insert(Vpn record);

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table vpn
     *
     * @mbg.generated Tue Nov 17 18:33:03 CST 2020
     */
    @InsertProvider(type=VpnSqlProvider.class, method="insertSelective")
    int insertSelective(Vpn record);

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table vpn
     *
     * @mbg.generated Tue Nov 17 18:33:03 CST 2020
     */
    @SelectProvider(type=VpnSqlProvider.class, method="selectByExample")
    @Results({
        @Result(column="vpn_id", property="vpnId", jdbcType=JdbcType.DECIMAL, id=true),
        @Result(column="net_code", property="netCode", jdbcType=JdbcType.VARCHAR),
        @Result(column="crm_net_code", property="crmNetCode", jdbcType=JdbcType.VARCHAR),
        @Result(column="vpn_type", property="vpnType", jdbcType=JdbcType.SMALLINT),
        @Result(column="vsi", property="vsi", jdbcType=JdbcType.VARCHAR),
        @Result(column="vrf", property="vrf", jdbcType=JdbcType.VARCHAR),
        @Result(column="rd", property="rd", jdbcType=JdbcType.VARCHAR),
        @Result(column="cus_num", property="cusNum", jdbcType=JdbcType.VARCHAR),
        @Result(column="cus_name", property="cusName", jdbcType=JdbcType.VARCHAR),
        @Result(column="cus_name_ab", property="cusNameAb", jdbcType=JdbcType.VARCHAR),
        @Result(column="cus_address", property="cusAddress", jdbcType=JdbcType.VARCHAR),
        @Result(column="cus_contact", property="cusContact", jdbcType=JdbcType.VARCHAR),
        @Result(column="cus_tel", property="cusTel", jdbcType=JdbcType.VARCHAR),
        @Result(column="cus_fax_email", property="cusFaxEmail", jdbcType=JdbcType.VARCHAR),
        @Result(column="vpn_route_num", property="vpnRouteNum", jdbcType=JdbcType.DECIMAL),
        @Result(column="net_topo", property="netTopo", jdbcType=JdbcType.SMALLINT),
        @Result(column="busi_create_area", property="busiCreateArea", jdbcType=JdbcType.DECIMAL),
        @Result(column="vpn_type_detail", property="vpnTypeDetail", jdbcType=JdbcType.INTEGER),
        @Result(column="rt_ipv6", property="rtIpv6", jdbcType=JdbcType.VARCHAR),
        @Result(column="optional_rd", property="optionalRd", jdbcType=JdbcType.VARCHAR),
        @Result(column="create_time", property="createTime", jdbcType=JdbcType.TIMESTAMP),
        @Result(column="rd_ipv6", property="rdIpv6", jdbcType=JdbcType.VARCHAR),
        @Result(column="vpn_ipv6", property="vpnIpv6", jdbcType=JdbcType.SMALLINT),
        @Result(column="accept_carrier", property="acceptCarrier", jdbcType=JdbcType.DECIMAL),
        @Result(column="optional_rd_ipv6", property="optionalRdIpv6", jdbcType=JdbcType.VARCHAR),
        @Result(column="update_timestamp", property="updateTimestamp", jdbcType=JdbcType.TIMESTAMP),
        @Result(column="topology_level", property="topologyLevel", jdbcType=JdbcType.VARCHAR)
    })
    List<Vpn> selectByExample(VpnExample example);

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table vpn
     *
     * @mbg.generated Tue Nov 17 18:33:03 CST 2020
     */
    @Select({
        "select",
        "vpn_id, net_code, crm_net_code, vpn_type, vsi, vrf, rd, cus_num, cus_name, cus_name_ab, ",
        "cus_address, cus_contact, cus_tel, cus_fax_email, vpn_route_num, net_topo, busi_create_area, ",
        "vpn_type_detail, rt_ipv6, optional_rd, create_time, rd_ipv6, vpn_ipv6, accept_carrier, ",
        "optional_rd_ipv6, update_timestamp, topology_level",
        "from vpn",
        "where vpn_id = #{vpnId,jdbcType=DECIMAL}"
    })
    @Results({
        @Result(column="vpn_id", property="vpnId", jdbcType=JdbcType.DECIMAL, id=true),
        @Result(column="net_code", property="netCode", jdbcType=JdbcType.VARCHAR),
        @Result(column="crm_net_code", property="crmNetCode", jdbcType=JdbcType.VARCHAR),
        @Result(column="vpn_type", property="vpnType", jdbcType=JdbcType.SMALLINT),
        @Result(column="vsi", property="vsi", jdbcType=JdbcType.VARCHAR),
        @Result(column="vrf", property="vrf", jdbcType=JdbcType.VARCHAR),
        @Result(column="rd", property="rd", jdbcType=JdbcType.VARCHAR),
        @Result(column="cus_num", property="cusNum", jdbcType=JdbcType.VARCHAR),
        @Result(column="cus_name", property="cusName", jdbcType=JdbcType.VARCHAR),
        @Result(column="cus_name_ab", property="cusNameAb", jdbcType=JdbcType.VARCHAR),
        @Result(column="cus_address", property="cusAddress", jdbcType=JdbcType.VARCHAR),
        @Result(column="cus_contact", property="cusContact", jdbcType=JdbcType.VARCHAR),
        @Result(column="cus_tel", property="cusTel", jdbcType=JdbcType.VARCHAR),
        @Result(column="cus_fax_email", property="cusFaxEmail", jdbcType=JdbcType.VARCHAR),
        @Result(column="vpn_route_num", property="vpnRouteNum", jdbcType=JdbcType.DECIMAL),
        @Result(column="net_topo", property="netTopo", jdbcType=JdbcType.SMALLINT),
        @Result(column="busi_create_area", property="busiCreateArea", jdbcType=JdbcType.DECIMAL),
        @Result(column="vpn_type_detail", property="vpnTypeDetail", jdbcType=JdbcType.INTEGER),
        @Result(column="rt_ipv6", property="rtIpv6", jdbcType=JdbcType.VARCHAR),
        @Result(column="optional_rd", property="optionalRd", jdbcType=JdbcType.VARCHAR),
        @Result(column="create_time", property="createTime", jdbcType=JdbcType.TIMESTAMP),
        @Result(column="rd_ipv6", property="rdIpv6", jdbcType=JdbcType.VARCHAR),
        @Result(column="vpn_ipv6", property="vpnIpv6", jdbcType=JdbcType.SMALLINT),
        @Result(column="accept_carrier", property="acceptCarrier", jdbcType=JdbcType.DECIMAL),
        @Result(column="optional_rd_ipv6", property="optionalRdIpv6", jdbcType=JdbcType.VARCHAR),
        @Result(column="update_timestamp", property="updateTimestamp", jdbcType=JdbcType.TIMESTAMP),
        @Result(column="topology_level", property="topologyLevel", jdbcType=JdbcType.VARCHAR)
    })
    Vpn selectByPrimaryKey(Long vpnId);

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table vpn
     *
     * @mbg.generated Tue Nov 17 18:33:03 CST 2020
     */
    @UpdateProvider(type=VpnSqlProvider.class, method="updateByExampleSelective")
    int updateByExampleSelective(@Param("record") Vpn record, @Param("example") VpnExample example);

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table vpn
     *
     * @mbg.generated Tue Nov 17 18:33:03 CST 2020
     */
    @UpdateProvider(type=VpnSqlProvider.class, method="updateByExample")
    int updateByExample(@Param("record") Vpn record, @Param("example") VpnExample example);

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table vpn
     *
     * @mbg.generated Tue Nov 17 18:33:03 CST 2020
     */
    @UpdateProvider(type=VpnSqlProvider.class, method="updateByPrimaryKeySelective")
    int updateByPrimaryKeySelective(Vpn record);

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table vpn
     *
     * @mbg.generated Tue Nov 17 18:33:03 CST 2020
     */
    @Update({
        "update vpn",
        "set net_code = #{netCode,jdbcType=VARCHAR},",
          "crm_net_code = #{crmNetCode,jdbcType=VARCHAR},",
          "vpn_type = #{vpnType,jdbcType=SMALLINT},",
          "vsi = #{vsi,jdbcType=VARCHAR},",
          "vrf = #{vrf,jdbcType=VARCHAR},",
          "rd = #{rd,jdbcType=VARCHAR},",
          "cus_num = #{cusNum,jdbcType=VARCHAR},",
          "cus_name = #{cusName,jdbcType=VARCHAR},",
          "cus_name_ab = #{cusNameAb,jdbcType=VARCHAR},",
          "cus_address = #{cusAddress,jdbcType=VARCHAR},",
          "cus_contact = #{cusContact,jdbcType=VARCHAR},",
          "cus_tel = #{cusTel,jdbcType=VARCHAR},",
          "cus_fax_email = #{cusFaxEmail,jdbcType=VARCHAR},",
          "vpn_route_num = #{vpnRouteNum,jdbcType=DECIMAL},",
          "net_topo = #{netTopo,jdbcType=SMALLINT},",
          "busi_create_area = #{busiCreateArea,jdbcType=DECIMAL},",
          "vpn_type_detail = #{vpnTypeDetail,jdbcType=INTEGER},",
          "rt_ipv6 = #{rtIpv6,jdbcType=VARCHAR},",
          "optional_rd = #{optionalRd,jdbcType=VARCHAR},",
          "create_time = #{createTime,jdbcType=TIMESTAMP},",
          "rd_ipv6 = #{rdIpv6,jdbcType=VARCHAR},",
          "vpn_ipv6 = #{vpnIpv6,jdbcType=SMALLINT},",
          "accept_carrier = #{acceptCarrier,jdbcType=DECIMAL},",
          "optional_rd_ipv6 = #{optionalRdIpv6,jdbcType=VARCHAR},",
          "update_timestamp = #{updateTimestamp,jdbcType=TIMESTAMP},",
          "topology_level = #{topologyLevel,jdbcType=VARCHAR}",
        "where vpn_id = #{vpnId,jdbcType=DECIMAL}"
    })
    int updateByPrimaryKey(Vpn record);

    /**
     * 获取vpn数据
     * @param vpn
     * @return
     */
    @Select({
        "<script> " ,
           "select t.vpn_id " ,
                   ",t.net_code " ,
                   ",t.vpn_type " ,
                   ",t.vpn_type_detail " ,
                   ",t.cus_name " ,
                   ",t.cus_name_ab " ,
                   ",t.cus_address " ,
                   ",t.cus_contact " ,
                   ",t.cus_tel " ,
                   ",t.rd " ,
                   ",t.vrf " ,
                   ",t.vpn_route_num " ,
                   ",t.net_topo " ,
                   ",t.create_time " ,
                   ",t.update_timestamp " ,
                   "from vpn_db.vpn t ",
                   "where 1=1 ",
            "<if test=\"cusName != null and cusName != '' \">",
            "and t.cus_name = #{cusName} ",
            "</if>",
            "<if test=\"netCode != null and netCode != '' \">",
            "and t.net_code = #{netCode} ",
            "</if>",
            "<if test=\"vpnType != null and vpnType != '' \">",
            "and t.vpn_type = #{vpnType} ",
            "</if>",
            "<if test=\"vpnTypeDetail != null and vpnTypeDetail != '' \">",
            "and t.vpn_type_detail = #{vpnTypeDetail} ",
            "</if>",
            "<if test=\"vrf != null and vrf != '' \">",
            "and t.vrf = #{vrf} ",
            "</if>",
            "<if test=\"rd != null and rd != '' \">",
            "and t.rd = #{rd} ",
            "</if>",
        "</script> "
    })
    @Results({
            @Result(column="vpn_id", property="vpnId", jdbcType=JdbcType.VARCHAR),
            @Result(column="net_code", property="netCode", jdbcType=JdbcType.VARCHAR),
            @Result(column="vpn_type", property="vpnType", jdbcType=JdbcType.VARCHAR),
            @Result(column="vpn_type_detail", property="vpnTypeDetail", jdbcType=JdbcType.VARCHAR),
            @Result(column="cus_name", property="cusName", jdbcType=JdbcType.VARCHAR),
            @Result(column="cus_name_ab", property="cusNameAb", jdbcType=JdbcType.VARCHAR),
            @Result(column="cus_address", property="cusAddress", jdbcType=JdbcType.VARCHAR),
            @Result(column="cus_contact", property="cusContact", jdbcType=JdbcType.VARCHAR),
            @Result(column="cus_tel", property="cusTel", jdbcType=JdbcType.VARCHAR),
            @Result(column="vpn_route_num", property="vpnRouteNum", jdbcType=JdbcType.VARCHAR),
            @Result(column="net_topo", property="netTopo", jdbcType=JdbcType.VARCHAR),
            @Result(column="create_time", property="createTime", jdbcType=JdbcType.VARCHAR),
            @Result(column="update_timestamp", property="updateTimestamp", jdbcType=JdbcType.VARCHAR)
    })
    List<VpnInfoDto> getVpnData(Vpn vpn);

    /**
     * 模糊查用户
     * @param userName
     * @return
     */
    @Select({
            "<script>" ,
            "select t.user_id,t.user_name,t.user_full_name,t.address,t.connect_user,t.connect_tel ",
            "from bas_db.bas_protected_user t where 1=1 " ,
            "<if test=\"userName != null and userName != '' \">",
            "and t.user_full_name like CONCAT('%',#{userName},'%')",
            "</if>",
            "</script>"
    })
    @Results({
            @Result(column="user_id", property="userId", jdbcType=JdbcType.VARCHAR),
            @Result(column="user_name", property="cusNameAb", jdbcType=JdbcType.VARCHAR),
            @Result(column="user_full_name", property="cusName", jdbcType=JdbcType.VARCHAR),
            @Result(column="address", property="cusAddress", jdbcType=JdbcType.VARCHAR),
            @Result(column="connect_user", property="cusContact", jdbcType=JdbcType.VARCHAR),
            @Result(column="connect_tel", property="cusTel", jdbcType=JdbcType.VARCHAR),
    })
    List<ProtectUserDto> getUserInfo(@Param("userName") String userName);

}