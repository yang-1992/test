package com.ctsi.vpn.repository;

import com.ctsi.vpn.domain.Vpn;
import com.ctsi.vpn.domain.VpnExample.Criteria;
import com.ctsi.vpn.domain.VpnExample.Criterion;
import com.ctsi.vpn.domain.VpnExample;
import java.util.List;
import java.util.Map;
import org.apache.ibatis.jdbc.SQL;

/**
 * @author ctsi-biyi-generator
*/
public class VpnSqlProvider {

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table vpn
     *
     * @mbg.generated Tue Nov 17 18:33:03 CST 2020
     */
    public String countByExample(VpnExample example) {
        SQL sql = new SQL();
        sql.SELECT("count(*)").FROM("vpn");
        applyWhere(sql, example, false);
        return sql.toString();
    }

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table vpn
     *
     * @mbg.generated Tue Nov 17 18:33:03 CST 2020
     */
    public String deleteByExample(VpnExample example) {
        SQL sql = new SQL();
        sql.DELETE_FROM("vpn");
        applyWhere(sql, example, false);
        return sql.toString();
    }

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table vpn
     *
     * @mbg.generated Tue Nov 17 18:33:03 CST 2020
     */
    public String insertSelective(Vpn record) {
        SQL sql = new SQL();
        sql.INSERT_INTO("vpn");
        
        if (record.getVpnId() != null) {
            sql.VALUES("vpn_id", "#{vpnId,jdbcType=DECIMAL}");
        }
        
        if (record.getNetCode() != null) {
            sql.VALUES("net_code", "#{netCode,jdbcType=VARCHAR}");
        }
        
        if (record.getCrmNetCode() != null) {
            sql.VALUES("crm_net_code", "#{crmNetCode,jdbcType=VARCHAR}");
        }
        
        if (record.getVpnType() != null) {
            sql.VALUES("vpn_type", "#{vpnType,jdbcType=SMALLINT}");
        }
        
        if (record.getVsi() != null) {
            sql.VALUES("vsi", "#{vsi,jdbcType=VARCHAR}");
        }
        
        if (record.getVrf() != null) {
            sql.VALUES("vrf", "#{vrf,jdbcType=VARCHAR}");
        }
        
        if (record.getRd() != null) {
            sql.VALUES("rd", "#{rd,jdbcType=VARCHAR}");
        }
        
        if (record.getCusNum() != null) {
            sql.VALUES("cus_num", "#{cusNum,jdbcType=VARCHAR}");
        }
        
        if (record.getCusName() != null) {
            sql.VALUES("cus_name", "#{cusName,jdbcType=VARCHAR}");
        }
        
        if (record.getCusNameAb() != null) {
            sql.VALUES("cus_name_ab", "#{cusNameAb,jdbcType=VARCHAR}");
        }
        
        if (record.getCusAddress() != null) {
            sql.VALUES("cus_address", "#{cusAddress,jdbcType=VARCHAR}");
        }
        
        if (record.getCusContact() != null) {
            sql.VALUES("cus_contact", "#{cusContact,jdbcType=VARCHAR}");
        }
        
        if (record.getCusTel() != null) {
            sql.VALUES("cus_tel", "#{cusTel,jdbcType=VARCHAR}");
        }
        
        if (record.getCusFaxEmail() != null) {
            sql.VALUES("cus_fax_email", "#{cusFaxEmail,jdbcType=VARCHAR}");
        }
        
        if (record.getVpnRouteNum() != null) {
            sql.VALUES("vpn_route_num", "#{vpnRouteNum,jdbcType=DECIMAL}");
        }
        
        if (record.getNetTopo() != null) {
            sql.VALUES("net_topo", "#{netTopo,jdbcType=SMALLINT}");
        }
        
        if (record.getBusiCreateArea() != null) {
            sql.VALUES("busi_create_area", "#{busiCreateArea,jdbcType=DECIMAL}");
        }
        
        if (record.getVpnTypeDetail() != null) {
            sql.VALUES("vpn_type_detail", "#{vpnTypeDetail,jdbcType=INTEGER}");
        }
        
        if (record.getRtIpv6() != null) {
            sql.VALUES("rt_ipv6", "#{rtIpv6,jdbcType=VARCHAR}");
        }
        
        if (record.getOptionalRd() != null) {
            sql.VALUES("optional_rd", "#{optionalRd,jdbcType=VARCHAR}");
        }
        
        if (record.getCreateTime() != null) {
            sql.VALUES("create_time", "#{createTime,jdbcType=TIMESTAMP}");
        }
        
        if (record.getRdIpv6() != null) {
            sql.VALUES("rd_ipv6", "#{rdIpv6,jdbcType=VARCHAR}");
        }
        
        if (record.getVpnIpv6() != null) {
            sql.VALUES("vpn_ipv6", "#{vpnIpv6,jdbcType=SMALLINT}");
        }
        
        if (record.getAcceptCarrier() != null) {
            sql.VALUES("accept_carrier", "#{acceptCarrier,jdbcType=DECIMAL}");
        }
        
        if (record.getOptionalRdIpv6() != null) {
            sql.VALUES("optional_rd_ipv6", "#{optionalRdIpv6,jdbcType=VARCHAR}");
        }
        
        if (record.getUpdateTimestamp() != null) {
            sql.VALUES("update_timestamp", "#{updateTimestamp,jdbcType=TIMESTAMP}");
        }
        
        if (record.getTopologyLevel() != null) {
            sql.VALUES("topology_level", "#{topologyLevel,jdbcType=VARCHAR}");
        }
        
        return sql.toString();
    }

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table vpn
     *
     * @mbg.generated Tue Nov 17 18:33:03 CST 2020
     */
    public String selectByExample(VpnExample example) {
        SQL sql = new SQL();
        if (example != null && example.isDistinct()) {
            sql.SELECT_DISTINCT("vpn_id");
        } else {
            sql.SELECT("vpn_id");
        }
        sql.SELECT("net_code");
        sql.SELECT("crm_net_code");
        sql.SELECT("vpn_type");
        sql.SELECT("vsi");
        sql.SELECT("vrf");
        sql.SELECT("rd");
        sql.SELECT("cus_num");
        sql.SELECT("cus_name");
        sql.SELECT("cus_name_ab");
        sql.SELECT("cus_address");
        sql.SELECT("cus_contact");
        sql.SELECT("cus_tel");
        sql.SELECT("cus_fax_email");
        sql.SELECT("vpn_route_num");
        sql.SELECT("net_topo");
        sql.SELECT("busi_create_area");
        sql.SELECT("vpn_type_detail");
        sql.SELECT("rt_ipv6");
        sql.SELECT("optional_rd");
        sql.SELECT("create_time");
        sql.SELECT("rd_ipv6");
        sql.SELECT("vpn_ipv6");
        sql.SELECT("accept_carrier");
        sql.SELECT("optional_rd_ipv6");
        sql.SELECT("update_timestamp");
        sql.SELECT("topology_level");
        sql.FROM("vpn_db.vpn");
        applyWhere(sql, example, false);
        
        if (example != null && example.getOrderByClause() != null) {
            sql.ORDER_BY(example.getOrderByClause());
        }
        
        return sql.toString();
    }

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table vpn
     *
     * @mbg.generated Tue Nov 17 18:33:03 CST 2020
     */
    public String updateByExampleSelective(Map<String, Object> parameter) {
        Vpn record = (Vpn) parameter.get("record");
        VpnExample example = (VpnExample) parameter.get("example");
        
        SQL sql = new SQL();
        sql.UPDATE("vpn");
        
        if (record.getVpnId() != null) {
            sql.SET("vpn_id = #{record.vpnId,jdbcType=DECIMAL}");
        }
        
        if (record.getNetCode() != null) {
            sql.SET("net_code = #{record.netCode,jdbcType=VARCHAR}");
        }
        
        if (record.getCrmNetCode() != null) {
            sql.SET("crm_net_code = #{record.crmNetCode,jdbcType=VARCHAR}");
        }
        
        if (record.getVpnType() != null) {
            sql.SET("vpn_type = #{record.vpnType,jdbcType=SMALLINT}");
        }
        
        if (record.getVsi() != null) {
            sql.SET("vsi = #{record.vsi,jdbcType=VARCHAR}");
        }
        
        if (record.getVrf() != null) {
            sql.SET("vrf = #{record.vrf,jdbcType=VARCHAR}");
        }
        
        if (record.getRd() != null) {
            sql.SET("rd = #{record.rd,jdbcType=VARCHAR}");
        }
        
        if (record.getCusNum() != null) {
            sql.SET("cus_num = #{record.cusNum,jdbcType=VARCHAR}");
        }
        
        if (record.getCusName() != null) {
            sql.SET("cus_name = #{record.cusName,jdbcType=VARCHAR}");
        }
        
        if (record.getCusNameAb() != null) {
            sql.SET("cus_name_ab = #{record.cusNameAb,jdbcType=VARCHAR}");
        }
        
        if (record.getCusAddress() != null) {
            sql.SET("cus_address = #{record.cusAddress,jdbcType=VARCHAR}");
        }
        
        if (record.getCusContact() != null) {
            sql.SET("cus_contact = #{record.cusContact,jdbcType=VARCHAR}");
        }
        
        if (record.getCusTel() != null) {
            sql.SET("cus_tel = #{record.cusTel,jdbcType=VARCHAR}");
        }
        
        if (record.getCusFaxEmail() != null) {
            sql.SET("cus_fax_email = #{record.cusFaxEmail,jdbcType=VARCHAR}");
        }
        
        if (record.getVpnRouteNum() != null) {
            sql.SET("vpn_route_num = #{record.vpnRouteNum,jdbcType=DECIMAL}");
        }
        
        if (record.getNetTopo() != null) {
            sql.SET("net_topo = #{record.netTopo,jdbcType=SMALLINT}");
        }
        
        if (record.getBusiCreateArea() != null) {
            sql.SET("busi_create_area = #{record.busiCreateArea,jdbcType=DECIMAL}");
        }
        
        if (record.getVpnTypeDetail() != null) {
            sql.SET("vpn_type_detail = #{record.vpnTypeDetail,jdbcType=INTEGER}");
        }
        
        if (record.getRtIpv6() != null) {
            sql.SET("rt_ipv6 = #{record.rtIpv6,jdbcType=VARCHAR}");
        }
        
        if (record.getOptionalRd() != null) {
            sql.SET("optional_rd = #{record.optionalRd,jdbcType=VARCHAR}");
        }
        
        if (record.getCreateTime() != null) {
            sql.SET("create_time = #{record.createTime,jdbcType=TIMESTAMP}");
        }
        
        if (record.getRdIpv6() != null) {
            sql.SET("rd_ipv6 = #{record.rdIpv6,jdbcType=VARCHAR}");
        }
        
        if (record.getVpnIpv6() != null) {
            sql.SET("vpn_ipv6 = #{record.vpnIpv6,jdbcType=SMALLINT}");
        }
        
        if (record.getAcceptCarrier() != null) {
            sql.SET("accept_carrier = #{record.acceptCarrier,jdbcType=DECIMAL}");
        }
        
        if (record.getOptionalRdIpv6() != null) {
            sql.SET("optional_rd_ipv6 = #{record.optionalRdIpv6,jdbcType=VARCHAR}");
        }
        
        if (record.getUpdateTimestamp() != null) {
            sql.SET("update_timestamp = #{record.updateTimestamp,jdbcType=TIMESTAMP}");
        }
        
        if (record.getTopologyLevel() != null) {
            sql.SET("topology_level = #{record.topologyLevel,jdbcType=VARCHAR}");
        }
        
        applyWhere(sql, example, true);
        return sql.toString();
    }

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table vpn
     *
     * @mbg.generated Tue Nov 17 18:33:03 CST 2020
     */
    public String updateByExample(Map<String, Object> parameter) {
        SQL sql = new SQL();
        sql.UPDATE("vpn");
        
        sql.SET("vpn_id = #{record.vpnId,jdbcType=DECIMAL}");
        sql.SET("net_code = #{record.netCode,jdbcType=VARCHAR}");
        sql.SET("crm_net_code = #{record.crmNetCode,jdbcType=VARCHAR}");
        sql.SET("vpn_type = #{record.vpnType,jdbcType=SMALLINT}");
        sql.SET("vsi = #{record.vsi,jdbcType=VARCHAR}");
        sql.SET("vrf = #{record.vrf,jdbcType=VARCHAR}");
        sql.SET("rd = #{record.rd,jdbcType=VARCHAR}");
        sql.SET("cus_num = #{record.cusNum,jdbcType=VARCHAR}");
        sql.SET("cus_name = #{record.cusName,jdbcType=VARCHAR}");
        sql.SET("cus_name_ab = #{record.cusNameAb,jdbcType=VARCHAR}");
        sql.SET("cus_address = #{record.cusAddress,jdbcType=VARCHAR}");
        sql.SET("cus_contact = #{record.cusContact,jdbcType=VARCHAR}");
        sql.SET("cus_tel = #{record.cusTel,jdbcType=VARCHAR}");
        sql.SET("cus_fax_email = #{record.cusFaxEmail,jdbcType=VARCHAR}");
        sql.SET("vpn_route_num = #{record.vpnRouteNum,jdbcType=DECIMAL}");
        sql.SET("net_topo = #{record.netTopo,jdbcType=SMALLINT}");
        sql.SET("busi_create_area = #{record.busiCreateArea,jdbcType=DECIMAL}");
        sql.SET("vpn_type_detail = #{record.vpnTypeDetail,jdbcType=INTEGER}");
        sql.SET("rt_ipv6 = #{record.rtIpv6,jdbcType=VARCHAR}");
        sql.SET("optional_rd = #{record.optionalRd,jdbcType=VARCHAR}");
        sql.SET("create_time = #{record.createTime,jdbcType=TIMESTAMP}");
        sql.SET("rd_ipv6 = #{record.rdIpv6,jdbcType=VARCHAR}");
        sql.SET("vpn_ipv6 = #{record.vpnIpv6,jdbcType=SMALLINT}");
        sql.SET("accept_carrier = #{record.acceptCarrier,jdbcType=DECIMAL}");
        sql.SET("optional_rd_ipv6 = #{record.optionalRdIpv6,jdbcType=VARCHAR}");
        sql.SET("update_timestamp = #{record.updateTimestamp,jdbcType=TIMESTAMP}");
        sql.SET("topology_level = #{record.topologyLevel,jdbcType=VARCHAR}");
        
        VpnExample example = (VpnExample) parameter.get("example");
        applyWhere(sql, example, true);
        return sql.toString();
    }

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table vpn
     *
     * @mbg.generated Tue Nov 17 18:33:03 CST 2020
     */
    public String updateByPrimaryKeySelective(Vpn record) {
        SQL sql = new SQL();
        sql.UPDATE("vpn");
        
        if (record.getNetCode() != null) {
            sql.SET("net_code = #{netCode,jdbcType=VARCHAR}");
        }
        
        if (record.getCrmNetCode() != null) {
            sql.SET("crm_net_code = #{crmNetCode,jdbcType=VARCHAR}");
        }
        
        if (record.getVpnType() != null) {
            sql.SET("vpn_type = #{vpnType,jdbcType=SMALLINT}");
        }
        
        if (record.getVsi() != null) {
            sql.SET("vsi = #{vsi,jdbcType=VARCHAR}");
        }
        
        if (record.getVrf() != null) {
            sql.SET("vrf = #{vrf,jdbcType=VARCHAR}");
        }
        
        if (record.getRd() != null) {
            sql.SET("rd = #{rd,jdbcType=VARCHAR}");
        }
        
        if (record.getCusNum() != null) {
            sql.SET("cus_num = #{cusNum,jdbcType=VARCHAR}");
        }
        
        if (record.getCusName() != null) {
            sql.SET("cus_name = #{cusName,jdbcType=VARCHAR}");
        }
        
        if (record.getCusNameAb() != null) {
            sql.SET("cus_name_ab = #{cusNameAb,jdbcType=VARCHAR}");
        }
        
        if (record.getCusAddress() != null) {
            sql.SET("cus_address = #{cusAddress,jdbcType=VARCHAR}");
        }
        
        if (record.getCusContact() != null) {
            sql.SET("cus_contact = #{cusContact,jdbcType=VARCHAR}");
        }
        
        if (record.getCusTel() != null) {
            sql.SET("cus_tel = #{cusTel,jdbcType=VARCHAR}");
        }
        
        if (record.getCusFaxEmail() != null) {
            sql.SET("cus_fax_email = #{cusFaxEmail,jdbcType=VARCHAR}");
        }
        
        if (record.getVpnRouteNum() != null) {
            sql.SET("vpn_route_num = #{vpnRouteNum,jdbcType=DECIMAL}");
        }
        
        if (record.getNetTopo() != null) {
            sql.SET("net_topo = #{netTopo,jdbcType=SMALLINT}");
        }
        
        if (record.getBusiCreateArea() != null) {
            sql.SET("busi_create_area = #{busiCreateArea,jdbcType=DECIMAL}");
        }
        
        if (record.getVpnTypeDetail() != null) {
            sql.SET("vpn_type_detail = #{vpnTypeDetail,jdbcType=INTEGER}");
        }
        
        if (record.getRtIpv6() != null) {
            sql.SET("rt_ipv6 = #{rtIpv6,jdbcType=VARCHAR}");
        }
        
        if (record.getOptionalRd() != null) {
            sql.SET("optional_rd = #{optionalRd,jdbcType=VARCHAR}");
        }
        
        if (record.getCreateTime() != null) {
            sql.SET("create_time = #{createTime,jdbcType=TIMESTAMP}");
        }
        
        if (record.getRdIpv6() != null) {
            sql.SET("rd_ipv6 = #{rdIpv6,jdbcType=VARCHAR}");
        }
        
        if (record.getVpnIpv6() != null) {
            sql.SET("vpn_ipv6 = #{vpnIpv6,jdbcType=SMALLINT}");
        }
        
        if (record.getAcceptCarrier() != null) {
            sql.SET("accept_carrier = #{acceptCarrier,jdbcType=DECIMAL}");
        }
        
        if (record.getOptionalRdIpv6() != null) {
            sql.SET("optional_rd_ipv6 = #{optionalRdIpv6,jdbcType=VARCHAR}");
        }
        
        if (record.getUpdateTimestamp() != null) {
            sql.SET("update_timestamp = #{updateTimestamp,jdbcType=TIMESTAMP}");
        }
        
        if (record.getTopologyLevel() != null) {
            sql.SET("topology_level = #{topologyLevel,jdbcType=VARCHAR}");
        }
        
        sql.WHERE("vpn_id = #{vpnId,jdbcType=DECIMAL}");
        
        return sql.toString();
    }

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table vpn
     *
     * @mbg.generated Tue Nov 17 18:33:03 CST 2020
     */
    protected void applyWhere(SQL sql, VpnExample example, boolean includeExamplePhrase) {
        if (example == null) {
            return;
        }
        
        String parmPhrase1;
        String parmPhrase1_th;
        String parmPhrase2;
        String parmPhrase2_th;
        String parmPhrase3;
        String parmPhrase3_th;
        if (includeExamplePhrase) {
            parmPhrase1 = "%s #{example.oredCriteria[%d].allCriteria[%d].value}";
            parmPhrase1_th = "%s #{example.oredCriteria[%d].allCriteria[%d].value,typeHandler=%s}";
            parmPhrase2 = "%s #{example.oredCriteria[%d].allCriteria[%d].value} and #{example.oredCriteria[%d].criteria[%d].secondValue}";
            parmPhrase2_th = "%s #{example.oredCriteria[%d].allCriteria[%d].value,typeHandler=%s} and #{example.oredCriteria[%d].criteria[%d].secondValue,typeHandler=%s}";
            parmPhrase3 = "#{example.oredCriteria[%d].allCriteria[%d].value[%d]}";
            parmPhrase3_th = "#{example.oredCriteria[%d].allCriteria[%d].value[%d],typeHandler=%s}";
        } else {
            parmPhrase1 = "%s #{oredCriteria[%d].allCriteria[%d].value}";
            parmPhrase1_th = "%s #{oredCriteria[%d].allCriteria[%d].value,typeHandler=%s}";
            parmPhrase2 = "%s #{oredCriteria[%d].allCriteria[%d].value} and #{oredCriteria[%d].criteria[%d].secondValue}";
            parmPhrase2_th = "%s #{oredCriteria[%d].allCriteria[%d].value,typeHandler=%s} and #{oredCriteria[%d].criteria[%d].secondValue,typeHandler=%s}";
            parmPhrase3 = "#{oredCriteria[%d].allCriteria[%d].value[%d]}";
            parmPhrase3_th = "#{oredCriteria[%d].allCriteria[%d].value[%d],typeHandler=%s}";
        }
        
        StringBuilder sb = new StringBuilder();
        List<Criteria> oredCriteria = example.getOredCriteria();
        boolean firstCriteria = true;
        for (int i = 0; i < oredCriteria.size(); i++) {
            Criteria criteria = oredCriteria.get(i);
            if (criteria.isValid()) {
                if (firstCriteria) {
                    firstCriteria = false;
                } else {
                    sb.append(" or ");
                }
                
                sb.append('(');
                List<Criterion> criterions = criteria.getAllCriteria();
                boolean firstCriterion = true;
                for (int j = 0; j < criterions.size(); j++) {
                    Criterion criterion = criterions.get(j);
                    if (firstCriterion) {
                        firstCriterion = false;
                    } else {
                        sb.append(" and ");
                    }
                    
                    if (criterion.isNoValue()) {
                        sb.append(criterion.getCondition());
                    } else if (criterion.isSingleValue()) {
                        if (criterion.getTypeHandler() == null) {
                            sb.append(String.format(parmPhrase1, criterion.getCondition(), i, j));
                        } else {
                            sb.append(String.format(parmPhrase1_th, criterion.getCondition(), i, j,criterion.getTypeHandler()));
                        }
                    } else if (criterion.isBetweenValue()) {
                        if (criterion.getTypeHandler() == null) {
                            sb.append(String.format(parmPhrase2, criterion.getCondition(), i, j, i, j));
                        } else {
                            sb.append(String.format(parmPhrase2_th, criterion.getCondition(), i, j, criterion.getTypeHandler(), i, j, criterion.getTypeHandler()));
                        }
                    } else if (criterion.isListValue()) {
                        sb.append(criterion.getCondition());
                        sb.append(" (");
                        List<?> listItems = (List<?>) criterion.getValue();
                        boolean comma = false;
                        for (int k = 0; k < listItems.size(); k++) {
                            if (comma) {
                                sb.append(", ");
                            } else {
                                comma = true;
                            }
                            if (criterion.getTypeHandler() == null) {
                                sb.append(String.format(parmPhrase3, i, j, k));
                            } else {
                                sb.append(String.format(parmPhrase3_th, i, j, k, criterion.getTypeHandler()));
                            }
                        }
                        sb.append(')');
                    }
                }
                sb.append(')');
            }
        }
        
        if (sb.length() > 0) {
            sql.WHERE(sb.toString());
        }
    }
}