package com.ctsi.security.domain;

import com.ctsi.ssdc.criteria.*;
import com.ctsi.ssdc.example.BaseExample;
import io.swagger.annotations.ApiParam;
import org.apache.commons.lang3.StringUtils;

import java.time.ZonedDateTime;
import java.util.ArrayList;
import java.util.List;

/**
 * @author ctsi-biyi-generator
*/
public class BasUserExample extends BaseExample {
    /**
     * This field was generated by MyBatis Generator.
     * This field corresponds to the database table bas_user
     *
     * @mbg.generated Fri Sep 18 10:12:01 CST 2020
     */
    protected String orderByClause;

    /**
     * This field was generated by MyBatis Generator.
     * This field corresponds to the database table bas_user
     *
     * @mbg.generated Fri Sep 18 10:12:01 CST 2020
     */
    protected boolean distinct;

    /**
     * This field was generated by MyBatis Generator.
     * This field corresponds to the database table bas_user
     *
     * @mbg.generated Fri Sep 18 10:12:01 CST 2020
     */
    protected List<Criteria> oredCriteria;

    /**
     * This field was generated by MyBatis Generator.
     * This field corresponds to the database table bas_user
     *
     * @mbg.generated Fri Sep 18 10:12:01 CST 2020
     */
    private static final String LIKE_FORMAT = "%%%s%%";

    /**
     *
     * This field was generated by MyBatis Generator.
     * This field corresponds to the database column bas_user.user_id
     *
     * @mbg.generated Fri Sep 18 10:12:01 CST 2020
     */
    private LongCriteria userId;

    /**
     *
     * This field was generated by MyBatis Generator.
     * This field corresponds to the database column bas_user.user_name
     *
     * @mbg.generated Fri Sep 18 10:12:01 CST 2020
     */
    private StringCriteria userName;

    /**
     *
     * This field was generated by MyBatis Generator.
     * This field corresponds to the database column bas_user.user_mode
     *
     * @mbg.generated Fri Sep 18 10:12:01 CST 2020
     */
    private ByteCriteria userMode;

    /**
     *
     * This field was generated by MyBatis Generator.
     * This field corresponds to the database column bas_user.user_type_id
     *
     * @mbg.generated Fri Sep 18 10:12:01 CST 2020
     */
    private LongCriteria userTypeId;

    /**
     *
     * This field was generated by MyBatis Generator.
     * This field corresponds to the database column bas_user.user_login_name
     *
     * @mbg.generated Fri Sep 18 10:12:01 CST 2020
     */
    private StringCriteria userLoginName;

    /**
     *
     * This field was generated by MyBatis Generator.
     * This field corresponds to the database column bas_user.user_password
     *
     * @mbg.generated Fri Sep 18 10:12:01 CST 2020
     */
    private StringCriteria userPassword;

    /**
     *
     * This field was generated by MyBatis Generator.
     * This field corresponds to the database column bas_user.user_valid
     *
     * @mbg.generated Fri Sep 18 10:12:01 CST 2020
     */
    private ByteCriteria userValid;

    /**
     *
     * This field was generated by MyBatis Generator.
     * This field corresponds to the database column bas_user.user_work_num
     *
     * @mbg.generated Fri Sep 18 10:12:01 CST 2020
     */
    private StringCriteria userWorkNum;

    /**
     *
     * This field was generated by MyBatis Generator.
     * This field corresponds to the database column bas_user.user_tel
     *
     * @mbg.generated Fri Sep 18 10:12:01 CST 2020
     */
    private StringCriteria userTel;

    /**
     *
     * This field was generated by MyBatis Generator.
     * This field corresponds to the database column bas_user.user_email
     *
     * @mbg.generated Fri Sep 18 10:12:01 CST 2020
     */
    private StringCriteria userEmail;

    /**
     *
     * This field was generated by MyBatis Generator.
     * This field corresponds to the database column bas_user.user_fax
     *
     * @mbg.generated Fri Sep 18 10:12:01 CST 2020
     */
    private StringCriteria userFax;

    /**
     *
     * This field was generated by MyBatis Generator.
     * This field corresponds to the database column bas_user.note
     *
     * @mbg.generated Fri Sep 18 10:12:01 CST 2020
     */
    private StringCriteria note;

    /**
     *
     * This field was generated by MyBatis Generator.
     * This field corresponds to the database column bas_user.center_nms
     *
     * @mbg.generated Fri Sep 18 10:12:01 CST 2020
     */
    private LongCriteria centerNms;

    /**
     *
     * This field was generated by MyBatis Generator.
     * This field corresponds to the database column bas_user.org_id
     *
     * @mbg.generated Fri Sep 18 10:12:01 CST 2020
     */
    private LongCriteria orgId;

    /**
     *
     * This field was generated by MyBatis Generator.
     * This field corresponds to the database column bas_user.oa_user_id
     *
     * @mbg.generated Fri Sep 18 10:12:01 CST 2020
     */
    private StringCriteria oaUserId;

    /**
     *
     * This field was generated by MyBatis Generator.
     * This field corresponds to the database column bas_user.person_id
     *
     * @mbg.generated Fri Sep 18 10:12:01 CST 2020
     */
    private StringCriteria personId;

    /**
     *
     * This field was generated by MyBatis Generator.
     * This field corresponds to the database column bas_user.status
     *
     * @mbg.generated Fri Sep 18 10:12:01 CST 2020
     */
    private IntegerCriteria status;

    /**
     *
     * This field was generated by MyBatis Generator.
     * This field corresponds to the database column bas_user.update_time
     *
     * @mbg.generated Fri Sep 18 10:12:01 CST 2020
     */
    private ZonedDateTimeCriteria updateTime;

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table bas_user
     *
     * @mbg.generated Fri Sep 18 10:12:01 CST 2020
     */
    public BasUserExample() {
        oredCriteria = new ArrayList<Criteria>();
    }

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table bas_user
     *
     * @mbg.generated Fri Sep 18 10:12:01 CST 2020
     */
    public void setOrderByClause(String orderByClause) {
        this.orderByClause = orderByClause;
    }

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table bas_user
     *
     * @mbg.generated Fri Sep 18 10:12:01 CST 2020
     */
    public String getOrderByClause() {
        return orderByClause;
    }

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table bas_user
     *
     * @mbg.generated Fri Sep 18 10:12:01 CST 2020
     */
    public void setDistinct(boolean distinct) {
        this.distinct = distinct;
    }

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table bas_user
     *
     * @mbg.generated Fri Sep 18 10:12:01 CST 2020
     */
    public boolean isDistinct() {
        return distinct;
    }

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table bas_user
     *
     * @mbg.generated Fri Sep 18 10:12:01 CST 2020
     */
    public List<Criteria> getOredCriteria() {
        return oredCriteria;
    }

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table bas_user
     *
     * @mbg.generated Fri Sep 18 10:12:01 CST 2020
     */
    public void or(Criteria criteria) {
        oredCriteria.add(criteria);
    }

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table bas_user
     *
     * @mbg.generated Fri Sep 18 10:12:01 CST 2020
     */
    public Criteria or() {
        Criteria criteria = createCriteriaInternal();
        oredCriteria.add(criteria);
        return criteria;
    }

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table bas_user
     *
     * @mbg.generated Fri Sep 18 10:12:01 CST 2020
     */
    public Criteria createCriteria() {
        Criteria criteria = createCriteriaInternal();
        if (oredCriteria.size() == 0) {
            oredCriteria.add(criteria);
        }
        return criteria;
    }

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table bas_user
     *
     * @mbg.generated Fri Sep 18 10:12:01 CST 2020
     */
    protected Criteria createCriteriaInternal() {
        Criteria criteria = new Criteria();
        return criteria;
    }

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table bas_user
     *
     * @mbg.generated Fri Sep 18 10:12:01 CST 2020
     */
    public void clear() {
        oredCriteria.clear();
        orderByClause = null;
        distinct = false;
    }

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table bas_user
     *
     * @mbg.generated Fri Sep 18 10:12:01 CST 2020
     */
    public LongCriteria getUserId() {
        return userId;
    }

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table bas_user
     *
     * @mbg.generated Fri Sep 18 10:12:01 CST 2020
     */
    public void setUserId(LongCriteria userId) {
        this. userId = userId;
    }

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table bas_user
     *
     * @mbg.generated Fri Sep 18 10:12:01 CST 2020
     */
    private void buildUserIdCriteria(Criteria criteria) {
        if (this.getUserId() == null) {
            return;
        }
        if (this.getUserId().getEquals() != null) {
            criteria.andUserIdEqualTo(this.getUserId().getEquals());
        } else {
            if (this.getUserId().getGreaterOrEqualThan() != null) {
                criteria.andUserIdGreaterThanOrEqualTo(this.getUserId().getGreaterOrEqualThan());
            }
            if (this.getUserId().getLessOrEqualThan() != null) {
                criteria.andUserIdLessThanOrEqualTo(this.getUserId().getLessOrEqualThan());
            }
        }
    }

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table bas_user
     *
     * @mbg.generated Fri Sep 18 10:12:01 CST 2020
     */
    public StringCriteria getUserName() {
        return userName;
    }

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table bas_user
     *
     * @mbg.generated Fri Sep 18 10:12:01 CST 2020
     */
    public void setUserName(StringCriteria userName) {
        this. userName = userName;
    }

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table bas_user
     *
     * @mbg.generated Fri Sep 18 10:12:01 CST 2020
     */
    private void buildUserNameCriteria(Criteria criteria) {
        if (this.getUserName() == null) {
            return;
        }
        if (this.getUserName().getEquals() != null) {
            criteria.andUserNameEqualTo(this.getUserName().getEquals());
        } else {
            if (StringUtils.isNotBlank(this.getUserName().getContains())) {
                criteria.andUserNameLike(String.format(LIKE_FORMAT, this.getUserName().getContains()));
            }
        }
    }

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table bas_user
     *
     * @mbg.generated Fri Sep 18 10:12:01 CST 2020
     */
    public ByteCriteria getUserMode() {
        return userMode;
    }

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table bas_user
     *
     * @mbg.generated Fri Sep 18 10:12:01 CST 2020
     */
    public void setUserMode(ByteCriteria userMode) {
        this. userMode = userMode;
    }

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table bas_user
     *
     * @mbg.generated Fri Sep 18 10:12:01 CST 2020
     */
    private void buildUserModeCriteria(Criteria criteria) {
        if (this.getUserMode() == null) {
            return;
        }
        if (this.getUserMode().getEquals() != null) {
            criteria.andUserModeEqualTo(this.getUserMode().getEquals());
        } else {
            if (this.getUserMode().getGreaterOrEqualThan() != null) {
                criteria.andUserModeGreaterThanOrEqualTo(this.getUserMode().getGreaterOrEqualThan());
            }
            if (this.getUserMode().getLessOrEqualThan() != null) {
                criteria.andUserModeLessThanOrEqualTo(this.getUserMode().getLessOrEqualThan());
            }
        }
    }

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table bas_user
     *
     * @mbg.generated Fri Sep 18 10:12:01 CST 2020
     */
    public LongCriteria getUserTypeId() {
        return userTypeId;
    }

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table bas_user
     *
     * @mbg.generated Fri Sep 18 10:12:01 CST 2020
     */
    public void setUserTypeId(LongCriteria userTypeId) {
        this. userTypeId = userTypeId;
    }

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table bas_user
     *
     * @mbg.generated Fri Sep 18 10:12:01 CST 2020
     */
    private void buildUserTypeIdCriteria(Criteria criteria) {
        if (this.getUserTypeId() == null) {
            return;
        }
        if (this.getUserTypeId().getEquals() != null) {
            criteria.andUserTypeIdEqualTo(this.getUserTypeId().getEquals());
        } else {
            if (this.getUserTypeId().getGreaterOrEqualThan() != null) {
                criteria.andUserTypeIdGreaterThanOrEqualTo(this.getUserTypeId().getGreaterOrEqualThan());
            }
            if (this.getUserTypeId().getLessOrEqualThan() != null) {
                criteria.andUserTypeIdLessThanOrEqualTo(this.getUserTypeId().getLessOrEqualThan());
            }
        }
    }

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table bas_user
     *
     * @mbg.generated Fri Sep 18 10:12:01 CST 2020
     */
    public StringCriteria getUserLoginName() {
        return userLoginName;
    }

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table bas_user
     *
     * @mbg.generated Fri Sep 18 10:12:01 CST 2020
     */
    public void setUserLoginName(StringCriteria userLoginName) {
        this. userLoginName = userLoginName;
    }

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table bas_user
     *
     * @mbg.generated Fri Sep 18 10:12:01 CST 2020
     */
    private void buildUserLoginNameCriteria(Criteria criteria) {
        if (this.getUserLoginName() == null) {
            return;
        }
        if (this.getUserLoginName().getEquals() != null) {
            criteria.andUserLoginNameEqualTo(this.getUserLoginName().getEquals());
        } else {
            if (StringUtils.isNotBlank(this.getUserLoginName().getContains())) {
                criteria.andUserLoginNameLike(String.format(LIKE_FORMAT, this.getUserLoginName().getContains()));
            }
        }
    }

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table bas_user
     *
     * @mbg.generated Fri Sep 18 10:12:01 CST 2020
     */
    public StringCriteria getUserPassword() {
        return userPassword;
    }

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table bas_user
     *
     * @mbg.generated Fri Sep 18 10:12:01 CST 2020
     */
    public void setUserPassword(StringCriteria userPassword) {
        this. userPassword = userPassword;
    }

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table bas_user
     *
     * @mbg.generated Fri Sep 18 10:12:01 CST 2020
     */
    private void buildUserPasswordCriteria(Criteria criteria) {
        if (this.getUserPassword() == null) {
            return;
        }
        if (this.getUserPassword().getEquals() != null) {
            criteria.andUserPasswordEqualTo(this.getUserPassword().getEquals());
        } else {
            if (StringUtils.isNotBlank(this.getUserPassword().getContains())) {
                criteria.andUserPasswordLike(String.format(LIKE_FORMAT, this.getUserPassword().getContains()));
            }
        }
    }

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table bas_user
     *
     * @mbg.generated Fri Sep 18 10:12:01 CST 2020
     */
    public ByteCriteria getUserValid() {
        return userValid;
    }

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table bas_user
     *
     * @mbg.generated Fri Sep 18 10:12:01 CST 2020
     */
    public void setUserValid(ByteCriteria userValid) {
        this. userValid = userValid;
    }

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table bas_user
     *
     * @mbg.generated Fri Sep 18 10:12:01 CST 2020
     */
    private void buildUserValidCriteria(Criteria criteria) {
        if (this.getUserValid() == null) {
            return;
        }
        if (this.getUserValid().getEquals() != null) {
            criteria.andUserValidEqualTo(this.getUserValid().getEquals());
        } else {
            if (this.getUserValid().getGreaterOrEqualThan() != null) {
                criteria.andUserValidGreaterThanOrEqualTo(this.getUserValid().getGreaterOrEqualThan());
            }
            if (this.getUserValid().getLessOrEqualThan() != null) {
                criteria.andUserValidLessThanOrEqualTo(this.getUserValid().getLessOrEqualThan());
            }
        }
    }

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table bas_user
     *
     * @mbg.generated Fri Sep 18 10:12:01 CST 2020
     */
    public StringCriteria getUserWorkNum() {
        return userWorkNum;
    }

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table bas_user
     *
     * @mbg.generated Fri Sep 18 10:12:01 CST 2020
     */
    public void setUserWorkNum(StringCriteria userWorkNum) {
        this. userWorkNum = userWorkNum;
    }

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table bas_user
     *
     * @mbg.generated Fri Sep 18 10:12:01 CST 2020
     */
    private void buildUserWorkNumCriteria(Criteria criteria) {
        if (this.getUserWorkNum() == null) {
            return;
        }
        if (this.getUserWorkNum().getEquals() != null) {
            criteria.andUserWorkNumEqualTo(this.getUserWorkNum().getEquals());
        } else {
            if (StringUtils.isNotBlank(this.getUserWorkNum().getContains())) {
                criteria.andUserWorkNumLike(String.format(LIKE_FORMAT, this.getUserWorkNum().getContains()));
            }
        }
    }

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table bas_user
     *
     * @mbg.generated Fri Sep 18 10:12:01 CST 2020
     */
    public StringCriteria getUserTel() {
        return userTel;
    }

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table bas_user
     *
     * @mbg.generated Fri Sep 18 10:12:01 CST 2020
     */
    public void setUserTel(StringCriteria userTel) {
        this. userTel = userTel;
    }

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table bas_user
     *
     * @mbg.generated Fri Sep 18 10:12:01 CST 2020
     */
    private void buildUserTelCriteria(Criteria criteria) {
        if (this.getUserTel() == null) {
            return;
        }
        if (this.getUserTel().getEquals() != null) {
            criteria.andUserTelEqualTo(this.getUserTel().getEquals());
        } else {
            if (StringUtils.isNotBlank(this.getUserTel().getContains())) {
                criteria.andUserTelLike(String.format(LIKE_FORMAT, this.getUserTel().getContains()));
            }
        }
    }

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table bas_user
     *
     * @mbg.generated Fri Sep 18 10:12:01 CST 2020
     */
    public StringCriteria getUserEmail() {
        return userEmail;
    }

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table bas_user
     *
     * @mbg.generated Fri Sep 18 10:12:01 CST 2020
     */
    public void setUserEmail(StringCriteria userEmail) {
        this. userEmail = userEmail;
    }

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table bas_user
     *
     * @mbg.generated Fri Sep 18 10:12:01 CST 2020
     */
    private void buildUserEmailCriteria(Criteria criteria) {
        if (this.getUserEmail() == null) {
            return;
        }
        if (this.getUserEmail().getEquals() != null) {
            criteria.andUserEmailEqualTo(this.getUserEmail().getEquals());
        } else {
            if (StringUtils.isNotBlank(this.getUserEmail().getContains())) {
                criteria.andUserEmailLike(String.format(LIKE_FORMAT, this.getUserEmail().getContains()));
            }
        }
    }

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table bas_user
     *
     * @mbg.generated Fri Sep 18 10:12:01 CST 2020
     */
    public StringCriteria getUserFax() {
        return userFax;
    }

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table bas_user
     *
     * @mbg.generated Fri Sep 18 10:12:01 CST 2020
     */
    public void setUserFax(StringCriteria userFax) {
        this. userFax = userFax;
    }

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table bas_user
     *
     * @mbg.generated Fri Sep 18 10:12:01 CST 2020
     */
    private void buildUserFaxCriteria(Criteria criteria) {
        if (this.getUserFax() == null) {
            return;
        }
        if (this.getUserFax().getEquals() != null) {
            criteria.andUserFaxEqualTo(this.getUserFax().getEquals());
        } else {
            if (StringUtils.isNotBlank(this.getUserFax().getContains())) {
                criteria.andUserFaxLike(String.format(LIKE_FORMAT, this.getUserFax().getContains()));
            }
        }
    }

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table bas_user
     *
     * @mbg.generated Fri Sep 18 10:12:01 CST 2020
     */
    public StringCriteria getNote() {
        return note;
    }

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table bas_user
     *
     * @mbg.generated Fri Sep 18 10:12:01 CST 2020
     */
    public void setNote(StringCriteria note) {
        this. note = note;
    }

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table bas_user
     *
     * @mbg.generated Fri Sep 18 10:12:01 CST 2020
     */
    private void buildNoteCriteria(Criteria criteria) {
        if (this.getNote() == null) {
            return;
        }
        if (this.getNote().getEquals() != null) {
            criteria.andNoteEqualTo(this.getNote().getEquals());
        } else {
            if (StringUtils.isNotBlank(this.getNote().getContains())) {
                criteria.andNoteLike(String.format(LIKE_FORMAT, this.getNote().getContains()));
            }
        }
    }

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table bas_user
     *
     * @mbg.generated Fri Sep 18 10:12:01 CST 2020
     */
    public LongCriteria getCenterNms() {
        return centerNms;
    }

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table bas_user
     *
     * @mbg.generated Fri Sep 18 10:12:01 CST 2020
     */
    public void setCenterNms(LongCriteria centerNms) {
        this. centerNms = centerNms;
    }

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table bas_user
     *
     * @mbg.generated Fri Sep 18 10:12:01 CST 2020
     */
    private void buildCenterNmsCriteria(Criteria criteria) {
        if (this.getCenterNms() == null) {
            return;
        }
        if (this.getCenterNms().getEquals() != null) {
            criteria.andCenterNmsEqualTo(this.getCenterNms().getEquals());
        } else {
            if (this.getCenterNms().getGreaterOrEqualThan() != null) {
                criteria.andCenterNmsGreaterThanOrEqualTo(this.getCenterNms().getGreaterOrEqualThan());
            }
            if (this.getCenterNms().getLessOrEqualThan() != null) {
                criteria.andCenterNmsLessThanOrEqualTo(this.getCenterNms().getLessOrEqualThan());
            }
        }
    }

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table bas_user
     *
     * @mbg.generated Fri Sep 18 10:12:01 CST 2020
     */
    public LongCriteria getOrgId() {
        return orgId;
    }

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table bas_user
     *
     * @mbg.generated Fri Sep 18 10:12:01 CST 2020
     */
    public void setOrgId(LongCriteria orgId) {
        this. orgId = orgId;
    }

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table bas_user
     *
     * @mbg.generated Fri Sep 18 10:12:01 CST 2020
     */
    private void buildOrgIdCriteria(Criteria criteria) {
        if (this.getOrgId() == null) {
            return;
        }
        if (this.getOrgId().getEquals() != null) {
            criteria.andOrgIdEqualTo(this.getOrgId().getEquals());
        } else {
            if (this.getOrgId().getGreaterOrEqualThan() != null) {
                criteria.andOrgIdGreaterThanOrEqualTo(this.getOrgId().getGreaterOrEqualThan());
            }
            if (this.getOrgId().getLessOrEqualThan() != null) {
                criteria.andOrgIdLessThanOrEqualTo(this.getOrgId().getLessOrEqualThan());
            }
        }
    }

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table bas_user
     *
     * @mbg.generated Fri Sep 18 10:12:01 CST 2020
     */
    public StringCriteria getOaUserId() {
        return oaUserId;
    }

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table bas_user
     *
     * @mbg.generated Fri Sep 18 10:12:01 CST 2020
     */
    public void setOaUserId(StringCriteria oaUserId) {
        this. oaUserId = oaUserId;
    }

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table bas_user
     *
     * @mbg.generated Fri Sep 18 10:12:01 CST 2020
     */
    private void buildOaUserIdCriteria(Criteria criteria) {
        if (this.getOaUserId() == null) {
            return;
        }
        if (this.getOaUserId().getEquals() != null) {
            criteria.andOaUserIdEqualTo(this.getOaUserId().getEquals());
        } else {
            if (StringUtils.isNotBlank(this.getOaUserId().getContains())) {
                criteria.andOaUserIdLike(String.format(LIKE_FORMAT, this.getOaUserId().getContains()));
            }
        }
    }

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table bas_user
     *
     * @mbg.generated Fri Sep 18 10:12:01 CST 2020
     */
    public StringCriteria getPersonId() {
        return personId;
    }

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table bas_user
     *
     * @mbg.generated Fri Sep 18 10:12:01 CST 2020
     */
    public void setPersonId(StringCriteria personId) {
        this. personId = personId;
    }

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table bas_user
     *
     * @mbg.generated Fri Sep 18 10:12:01 CST 2020
     */
    private void buildPersonIdCriteria(Criteria criteria) {
        if (this.getPersonId() == null) {
            return;
        }
        if (this.getPersonId().getEquals() != null) {
            criteria.andPersonIdEqualTo(this.getPersonId().getEquals());
        } else {
            if (StringUtils.isNotBlank(this.getPersonId().getContains())) {
                criteria.andPersonIdLike(String.format(LIKE_FORMAT, this.getPersonId().getContains()));
            }
        }
    }

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table bas_user
     *
     * @mbg.generated Fri Sep 18 10:12:01 CST 2020
     */
    public IntegerCriteria getStatus() {
        return status;
    }

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table bas_user
     *
     * @mbg.generated Fri Sep 18 10:12:01 CST 2020
     */
    public void setStatus(IntegerCriteria status) {
        this. status = status;
    }

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table bas_user
     *
     * @mbg.generated Fri Sep 18 10:12:01 CST 2020
     */
    private void buildStatusCriteria(Criteria criteria) {
        if (this.getStatus() == null) {
            return;
        }
        if (this.getStatus().getEquals() != null) {
            criteria.andStatusEqualTo(this.getStatus().getEquals());
        } else {
            if (this.getStatus().getGreaterOrEqualThan() != null) {
                criteria.andStatusGreaterThanOrEqualTo(this.getStatus().getGreaterOrEqualThan());
            }
            if (this.getStatus().getLessOrEqualThan() != null) {
                criteria.andStatusLessThanOrEqualTo(this.getStatus().getLessOrEqualThan());
            }
        }
    }

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table bas_user
     *
     * @mbg.generated Fri Sep 18 10:12:01 CST 2020
     */
    public ZonedDateTimeCriteria getUpdateTime() {
        return updateTime;
    }

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table bas_user
     *
     * @mbg.generated Fri Sep 18 10:12:01 CST 2020
     */
    public void setUpdateTime(ZonedDateTimeCriteria updateTime) {
        this. updateTime = updateTime;
    }

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table bas_user
     *
     * @mbg.generated Fri Sep 18 10:12:01 CST 2020
     */
    private void buildUpdateTimeCriteria(Criteria criteria) {
        if (this.getUpdateTime() == null) {
            return;
        }
        if (this.getUpdateTime().getEquals() != null) {
            criteria.andUpdateTimeEqualTo(this.getUpdateTime().getEquals());
        } else {
            if (this.getUpdateTime().getGreaterOrEqualThan() != null) {
                criteria.andUpdateTimeGreaterThanOrEqualTo(this.getUpdateTime().getGreaterOrEqualThan());
            }
            if (this.getUpdateTime().getLessOrEqualThan() != null) {
                criteria.andUpdateTimeLessThanOrEqualTo(this.getUpdateTime().getLessOrEqualThan());
            }
        }
    }

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table bas_user
     *
     * @mbg.generated Fri Sep 18 10:12:01 CST 2020
     */
    public Object buildCriteria() {
        Criteria criteria = this.createCriteria();
        this.buildUserIdCriteria(criteria);
        this.buildUserNameCriteria(criteria);
        this.buildUserModeCriteria(criteria);
        this.buildUserTypeIdCriteria(criteria);
        this.buildUserLoginNameCriteria(criteria);
        this.buildUserPasswordCriteria(criteria);
        this.buildUserValidCriteria(criteria);
        this.buildUserWorkNumCriteria(criteria);
        this.buildUserTelCriteria(criteria);
        this.buildUserEmailCriteria(criteria);
        this.buildUserFaxCriteria(criteria);
        this.buildNoteCriteria(criteria);
        this.buildCenterNmsCriteria(criteria);
        this.buildOrgIdCriteria(criteria);
        this.buildOaUserIdCriteria(criteria);
        this.buildPersonIdCriteria(criteria);
        this.buildStatusCriteria(criteria);
        this.buildUpdateTimeCriteria(criteria);
        return criteria;
    }

    /**
     * This class was generated by MyBatis Generator.
     * This class corresponds to the database table bas_user
     *
     * @mbg.generated Fri Sep 18 10:12:01 CST 2020
     */
    protected abstract static class GeneratedCriteria {
        protected List<Criterion> criteria;

        protected GeneratedCriteria() {
            super();
            criteria = new ArrayList<Criterion>();
        }

        public boolean isValid() {
            return criteria.size() > 0;
        }

        public List<Criterion> getAllCriteria() {
            return criteria;
        }

        public List<Criterion> getCriteria() {
            return criteria;
        }

        protected void addCriterion(String condition) {
            if (condition == null) {
                throw new RuntimeException("Value for condition cannot be null");
            }
            criteria.add(new Criterion(condition));
        }

        protected void addCriterion(String condition, Object value, String property) {
            if (value == null) {
                throw new RuntimeException("Value for " + property + " cannot be null");
            }
            criteria.add(new Criterion(condition, value));
        }

        protected void addCriterion(String condition, Object value1, Object value2, String property) {
            if (value1 == null || value2 == null) {
                throw new RuntimeException("Between values for " + property + " cannot be null");
            }
            criteria.add(new Criterion(condition, value1, value2));
        }

        public Criteria andUserIdIsNull() {
            addCriterion("user_id is null");
            return (Criteria) this;
        }

        public Criteria andUserIdIsNotNull() {
            addCriterion("user_id is not null");
            return (Criteria) this;
        }

        public Criteria andUserIdEqualTo(Long value) {
            addCriterion("user_id =", value, "userId");
            return (Criteria) this;
        }

        public Criteria andUserIdNotEqualTo(Long value) {
            addCriterion("user_id <>", value, "userId");
            return (Criteria) this;
        }

        public Criteria andUserIdGreaterThan(Long value) {
            addCriterion("user_id >", value, "userId");
            return (Criteria) this;
        }

        public Criteria andUserIdGreaterThanOrEqualTo(Long value) {
            addCriterion("user_id >=", value, "userId");
            return (Criteria) this;
        }

        public Criteria andUserIdLessThan(Long value) {
            addCriterion("user_id <", value, "userId");
            return (Criteria) this;
        }

        public Criteria andUserIdLessThanOrEqualTo(Long value) {
            addCriterion("user_id <=", value, "userId");
            return (Criteria) this;
        }

        public Criteria andUserIdIn(List<Long> values) {
            addCriterion("user_id in", values, "userId");
            return (Criteria) this;
        }

        public Criteria andUserIdNotIn(List<Long> values) {
            addCriterion("user_id not in", values, "userId");
            return (Criteria) this;
        }

        public Criteria andUserIdBetween(Long value1, Long value2) {
            addCriterion("user_id between", value1, value2, "userId");
            return (Criteria) this;
        }

        public Criteria andUserIdNotBetween(Long value1, Long value2) {
            addCriterion("user_id not between", value1, value2, "userId");
            return (Criteria) this;
        }

        public Criteria andUserNameIsNull() {
            addCriterion("user_name is null");
            return (Criteria) this;
        }

        public Criteria andUserNameIsNotNull() {
            addCriterion("user_name is not null");
            return (Criteria) this;
        }

        public Criteria andUserNameEqualTo(String value) {
            addCriterion("user_name =", value, "userName");
            return (Criteria) this;
        }

        public Criteria andUserNameNotEqualTo(String value) {
            addCriterion("user_name <>", value, "userName");
            return (Criteria) this;
        }

        public Criteria andUserNameGreaterThan(String value) {
            addCriterion("user_name >", value, "userName");
            return (Criteria) this;
        }

        public Criteria andUserNameGreaterThanOrEqualTo(String value) {
            addCriterion("user_name >=", value, "userName");
            return (Criteria) this;
        }

        public Criteria andUserNameLessThan(String value) {
            addCriterion("user_name <", value, "userName");
            return (Criteria) this;
        }

        public Criteria andUserNameLessThanOrEqualTo(String value) {
            addCriterion("user_name <=", value, "userName");
            return (Criteria) this;
        }

        public Criteria andUserNameLike(String value) {
            addCriterion("user_name like", value, "userName");
            return (Criteria) this;
        }

        public Criteria andUserNameNotLike(String value) {
            addCriterion("user_name not like", value, "userName");
            return (Criteria) this;
        }

        public Criteria andUserNameIn(List<String> values) {
            addCriterion("user_name in", values, "userName");
            return (Criteria) this;
        }

        public Criteria andUserNameNotIn(List<String> values) {
            addCriterion("user_name not in", values, "userName");
            return (Criteria) this;
        }

        public Criteria andUserNameBetween(String value1, String value2) {
            addCriterion("user_name between", value1, value2, "userName");
            return (Criteria) this;
        }

        public Criteria andUserNameNotBetween(String value1, String value2) {
            addCriterion("user_name not between", value1, value2, "userName");
            return (Criteria) this;
        }

        public Criteria andUserModeIsNull() {
            addCriterion("user_mode is null");
            return (Criteria) this;
        }

        public Criteria andUserModeIsNotNull() {
            addCriterion("user_mode is not null");
            return (Criteria) this;
        }

        public Criteria andUserModeEqualTo(Byte value) {
            addCriterion("user_mode =", value, "userMode");
            return (Criteria) this;
        }

        public Criteria andUserModeNotEqualTo(Byte value) {
            addCriterion("user_mode <>", value, "userMode");
            return (Criteria) this;
        }

        public Criteria andUserModeGreaterThan(Byte value) {
            addCriterion("user_mode >", value, "userMode");
            return (Criteria) this;
        }

        public Criteria andUserModeGreaterThanOrEqualTo(Byte value) {
            addCriterion("user_mode >=", value, "userMode");
            return (Criteria) this;
        }

        public Criteria andUserModeLessThan(Byte value) {
            addCriterion("user_mode <", value, "userMode");
            return (Criteria) this;
        }

        public Criteria andUserModeLessThanOrEqualTo(Byte value) {
            addCriterion("user_mode <=", value, "userMode");
            return (Criteria) this;
        }

        public Criteria andUserModeIn(List<Byte> values) {
            addCriterion("user_mode in", values, "userMode");
            return (Criteria) this;
        }

        public Criteria andUserModeNotIn(List<Byte> values) {
            addCriterion("user_mode not in", values, "userMode");
            return (Criteria) this;
        }

        public Criteria andUserModeBetween(Byte value1, Byte value2) {
            addCriterion("user_mode between", value1, value2, "userMode");
            return (Criteria) this;
        }

        public Criteria andUserModeNotBetween(Byte value1, Byte value2) {
            addCriterion("user_mode not between", value1, value2, "userMode");
            return (Criteria) this;
        }

        public Criteria andUserTypeIdIsNull() {
            addCriterion("user_type_id is null");
            return (Criteria) this;
        }

        public Criteria andUserTypeIdIsNotNull() {
            addCriterion("user_type_id is not null");
            return (Criteria) this;
        }

        public Criteria andUserTypeIdEqualTo(Long value) {
            addCriterion("user_type_id =", value, "userTypeId");
            return (Criteria) this;
        }

        public Criteria andUserTypeIdNotEqualTo(Long value) {
            addCriterion("user_type_id <>", value, "userTypeId");
            return (Criteria) this;
        }

        public Criteria andUserTypeIdGreaterThan(Long value) {
            addCriterion("user_type_id >", value, "userTypeId");
            return (Criteria) this;
        }

        public Criteria andUserTypeIdGreaterThanOrEqualTo(Long value) {
            addCriterion("user_type_id >=", value, "userTypeId");
            return (Criteria) this;
        }

        public Criteria andUserTypeIdLessThan(Long value) {
            addCriterion("user_type_id <", value, "userTypeId");
            return (Criteria) this;
        }

        public Criteria andUserTypeIdLessThanOrEqualTo(Long value) {
            addCriterion("user_type_id <=", value, "userTypeId");
            return (Criteria) this;
        }

        public Criteria andUserTypeIdIn(List<Long> values) {
            addCriterion("user_type_id in", values, "userTypeId");
            return (Criteria) this;
        }

        public Criteria andUserTypeIdNotIn(List<Long> values) {
            addCriterion("user_type_id not in", values, "userTypeId");
            return (Criteria) this;
        }

        public Criteria andUserTypeIdBetween(Long value1, Long value2) {
            addCriterion("user_type_id between", value1, value2, "userTypeId");
            return (Criteria) this;
        }

        public Criteria andUserTypeIdNotBetween(Long value1, Long value2) {
            addCriterion("user_type_id not between", value1, value2, "userTypeId");
            return (Criteria) this;
        }

        public Criteria andUserLoginNameIsNull() {
            addCriterion("user_login_name is null");
            return (Criteria) this;
        }

        public Criteria andUserLoginNameIsNotNull() {
            addCriterion("user_login_name is not null");
            return (Criteria) this;
        }

        public Criteria andUserLoginNameEqualTo(String value) {
            addCriterion("user_login_name =", value, "userLoginName");
            return (Criteria) this;
        }

        public Criteria andUserLoginNameNotEqualTo(String value) {
            addCriterion("user_login_name <>", value, "userLoginName");
            return (Criteria) this;
        }

        public Criteria andUserLoginNameGreaterThan(String value) {
            addCriterion("user_login_name >", value, "userLoginName");
            return (Criteria) this;
        }

        public Criteria andUserLoginNameGreaterThanOrEqualTo(String value) {
            addCriterion("user_login_name >=", value, "userLoginName");
            return (Criteria) this;
        }

        public Criteria andUserLoginNameLessThan(String value) {
            addCriterion("user_login_name <", value, "userLoginName");
            return (Criteria) this;
        }

        public Criteria andUserLoginNameLessThanOrEqualTo(String value) {
            addCriterion("user_login_name <=", value, "userLoginName");
            return (Criteria) this;
        }

        public Criteria andUserLoginNameLike(String value) {
            addCriterion("user_login_name like", value, "userLoginName");
            return (Criteria) this;
        }

        public Criteria andUserLoginNameNotLike(String value) {
            addCriterion("user_login_name not like", value, "userLoginName");
            return (Criteria) this;
        }

        public Criteria andUserLoginNameIn(List<String> values) {
            addCriterion("user_login_name in", values, "userLoginName");
            return (Criteria) this;
        }

        public Criteria andUserLoginNameNotIn(List<String> values) {
            addCriterion("user_login_name not in", values, "userLoginName");
            return (Criteria) this;
        }

        public Criteria andUserLoginNameBetween(String value1, String value2) {
            addCriterion("user_login_name between", value1, value2, "userLoginName");
            return (Criteria) this;
        }

        public Criteria andUserLoginNameNotBetween(String value1, String value2) {
            addCriterion("user_login_name not between", value1, value2, "userLoginName");
            return (Criteria) this;
        }

        public Criteria andUserPasswordIsNull() {
            addCriterion("user_password is null");
            return (Criteria) this;
        }

        public Criteria andUserPasswordIsNotNull() {
            addCriterion("user_password is not null");
            return (Criteria) this;
        }

        public Criteria andUserPasswordEqualTo(String value) {
            addCriterion("user_password =", value, "userPassword");
            return (Criteria) this;
        }

        public Criteria andUserPasswordNotEqualTo(String value) {
            addCriterion("user_password <>", value, "userPassword");
            return (Criteria) this;
        }

        public Criteria andUserPasswordGreaterThan(String value) {
            addCriterion("user_password >", value, "userPassword");
            return (Criteria) this;
        }

        public Criteria andUserPasswordGreaterThanOrEqualTo(String value) {
            addCriterion("user_password >=", value, "userPassword");
            return (Criteria) this;
        }

        public Criteria andUserPasswordLessThan(String value) {
            addCriterion("user_password <", value, "userPassword");
            return (Criteria) this;
        }

        public Criteria andUserPasswordLessThanOrEqualTo(String value) {
            addCriterion("user_password <=", value, "userPassword");
            return (Criteria) this;
        }

        public Criteria andUserPasswordLike(String value) {
            addCriterion("user_password like", value, "userPassword");
            return (Criteria) this;
        }

        public Criteria andUserPasswordNotLike(String value) {
            addCriterion("user_password not like", value, "userPassword");
            return (Criteria) this;
        }

        public Criteria andUserPasswordIn(List<String> values) {
            addCriterion("user_password in", values, "userPassword");
            return (Criteria) this;
        }

        public Criteria andUserPasswordNotIn(List<String> values) {
            addCriterion("user_password not in", values, "userPassword");
            return (Criteria) this;
        }

        public Criteria andUserPasswordBetween(String value1, String value2) {
            addCriterion("user_password between", value1, value2, "userPassword");
            return (Criteria) this;
        }

        public Criteria andUserPasswordNotBetween(String value1, String value2) {
            addCriterion("user_password not between", value1, value2, "userPassword");
            return (Criteria) this;
        }

        public Criteria andUserValidIsNull() {
            addCriterion("user_valid is null");
            return (Criteria) this;
        }

        public Criteria andUserValidIsNotNull() {
            addCriterion("user_valid is not null");
            return (Criteria) this;
        }

        public Criteria andUserValidEqualTo(Byte value) {
            addCriterion("user_valid =", value, "userValid");
            return (Criteria) this;
        }

        public Criteria andUserValidNotEqualTo(Byte value) {
            addCriterion("user_valid <>", value, "userValid");
            return (Criteria) this;
        }

        public Criteria andUserValidGreaterThan(Byte value) {
            addCriterion("user_valid >", value, "userValid");
            return (Criteria) this;
        }

        public Criteria andUserValidGreaterThanOrEqualTo(Byte value) {
            addCriterion("user_valid >=", value, "userValid");
            return (Criteria) this;
        }

        public Criteria andUserValidLessThan(Byte value) {
            addCriterion("user_valid <", value, "userValid");
            return (Criteria) this;
        }

        public Criteria andUserValidLessThanOrEqualTo(Byte value) {
            addCriterion("user_valid <=", value, "userValid");
            return (Criteria) this;
        }

        public Criteria andUserValidIn(List<Byte> values) {
            addCriterion("user_valid in", values, "userValid");
            return (Criteria) this;
        }

        public Criteria andUserValidNotIn(List<Byte> values) {
            addCriterion("user_valid not in", values, "userValid");
            return (Criteria) this;
        }

        public Criteria andUserValidBetween(Byte value1, Byte value2) {
            addCriterion("user_valid between", value1, value2, "userValid");
            return (Criteria) this;
        }

        public Criteria andUserValidNotBetween(Byte value1, Byte value2) {
            addCriterion("user_valid not between", value1, value2, "userValid");
            return (Criteria) this;
        }

        public Criteria andUserWorkNumIsNull() {
            addCriterion("user_work_num is null");
            return (Criteria) this;
        }

        public Criteria andUserWorkNumIsNotNull() {
            addCriterion("user_work_num is not null");
            return (Criteria) this;
        }

        public Criteria andUserWorkNumEqualTo(String value) {
            addCriterion("user_work_num =", value, "userWorkNum");
            return (Criteria) this;
        }

        public Criteria andUserWorkNumNotEqualTo(String value) {
            addCriterion("user_work_num <>", value, "userWorkNum");
            return (Criteria) this;
        }

        public Criteria andUserWorkNumGreaterThan(String value) {
            addCriterion("user_work_num >", value, "userWorkNum");
            return (Criteria) this;
        }

        public Criteria andUserWorkNumGreaterThanOrEqualTo(String value) {
            addCriterion("user_work_num >=", value, "userWorkNum");
            return (Criteria) this;
        }

        public Criteria andUserWorkNumLessThan(String value) {
            addCriterion("user_work_num <", value, "userWorkNum");
            return (Criteria) this;
        }

        public Criteria andUserWorkNumLessThanOrEqualTo(String value) {
            addCriterion("user_work_num <=", value, "userWorkNum");
            return (Criteria) this;
        }

        public Criteria andUserWorkNumLike(String value) {
            addCriterion("user_work_num like", value, "userWorkNum");
            return (Criteria) this;
        }

        public Criteria andUserWorkNumNotLike(String value) {
            addCriterion("user_work_num not like", value, "userWorkNum");
            return (Criteria) this;
        }

        public Criteria andUserWorkNumIn(List<String> values) {
            addCriterion("user_work_num in", values, "userWorkNum");
            return (Criteria) this;
        }

        public Criteria andUserWorkNumNotIn(List<String> values) {
            addCriterion("user_work_num not in", values, "userWorkNum");
            return (Criteria) this;
        }

        public Criteria andUserWorkNumBetween(String value1, String value2) {
            addCriterion("user_work_num between", value1, value2, "userWorkNum");
            return (Criteria) this;
        }

        public Criteria andUserWorkNumNotBetween(String value1, String value2) {
            addCriterion("user_work_num not between", value1, value2, "userWorkNum");
            return (Criteria) this;
        }

        public Criteria andUserTelIsNull() {
            addCriterion("user_tel is null");
            return (Criteria) this;
        }

        public Criteria andUserTelIsNotNull() {
            addCriterion("user_tel is not null");
            return (Criteria) this;
        }

        public Criteria andUserTelEqualTo(String value) {
            addCriterion("user_tel =", value, "userTel");
            return (Criteria) this;
        }

        public Criteria andUserTelNotEqualTo(String value) {
            addCriterion("user_tel <>", value, "userTel");
            return (Criteria) this;
        }

        public Criteria andUserTelGreaterThan(String value) {
            addCriterion("user_tel >", value, "userTel");
            return (Criteria) this;
        }

        public Criteria andUserTelGreaterThanOrEqualTo(String value) {
            addCriterion("user_tel >=", value, "userTel");
            return (Criteria) this;
        }

        public Criteria andUserTelLessThan(String value) {
            addCriterion("user_tel <", value, "userTel");
            return (Criteria) this;
        }

        public Criteria andUserTelLessThanOrEqualTo(String value) {
            addCriterion("user_tel <=", value, "userTel");
            return (Criteria) this;
        }

        public Criteria andUserTelLike(String value) {
            addCriterion("user_tel like", value, "userTel");
            return (Criteria) this;
        }

        public Criteria andUserTelNotLike(String value) {
            addCriterion("user_tel not like", value, "userTel");
            return (Criteria) this;
        }

        public Criteria andUserTelIn(List<String> values) {
            addCriterion("user_tel in", values, "userTel");
            return (Criteria) this;
        }

        public Criteria andUserTelNotIn(List<String> values) {
            addCriterion("user_tel not in", values, "userTel");
            return (Criteria) this;
        }

        public Criteria andUserTelBetween(String value1, String value2) {
            addCriterion("user_tel between", value1, value2, "userTel");
            return (Criteria) this;
        }

        public Criteria andUserTelNotBetween(String value1, String value2) {
            addCriterion("user_tel not between", value1, value2, "userTel");
            return (Criteria) this;
        }

        public Criteria andUserEmailIsNull() {
            addCriterion("user_email is null");
            return (Criteria) this;
        }

        public Criteria andUserEmailIsNotNull() {
            addCriterion("user_email is not null");
            return (Criteria) this;
        }

        public Criteria andUserEmailEqualTo(String value) {
            addCriterion("user_email =", value, "userEmail");
            return (Criteria) this;
        }

        public Criteria andUserEmailNotEqualTo(String value) {
            addCriterion("user_email <>", value, "userEmail");
            return (Criteria) this;
        }

        public Criteria andUserEmailGreaterThan(String value) {
            addCriterion("user_email >", value, "userEmail");
            return (Criteria) this;
        }

        public Criteria andUserEmailGreaterThanOrEqualTo(String value) {
            addCriterion("user_email >=", value, "userEmail");
            return (Criteria) this;
        }

        public Criteria andUserEmailLessThan(String value) {
            addCriterion("user_email <", value, "userEmail");
            return (Criteria) this;
        }

        public Criteria andUserEmailLessThanOrEqualTo(String value) {
            addCriterion("user_email <=", value, "userEmail");
            return (Criteria) this;
        }

        public Criteria andUserEmailLike(String value) {
            addCriterion("user_email like", value, "userEmail");
            return (Criteria) this;
        }

        public Criteria andUserEmailNotLike(String value) {
            addCriterion("user_email not like", value, "userEmail");
            return (Criteria) this;
        }

        public Criteria andUserEmailIn(List<String> values) {
            addCriterion("user_email in", values, "userEmail");
            return (Criteria) this;
        }

        public Criteria andUserEmailNotIn(List<String> values) {
            addCriterion("user_email not in", values, "userEmail");
            return (Criteria) this;
        }

        public Criteria andUserEmailBetween(String value1, String value2) {
            addCriterion("user_email between", value1, value2, "userEmail");
            return (Criteria) this;
        }

        public Criteria andUserEmailNotBetween(String value1, String value2) {
            addCriterion("user_email not between", value1, value2, "userEmail");
            return (Criteria) this;
        }

        public Criteria andUserFaxIsNull() {
            addCriterion("user_fax is null");
            return (Criteria) this;
        }

        public Criteria andUserFaxIsNotNull() {
            addCriterion("user_fax is not null");
            return (Criteria) this;
        }

        public Criteria andUserFaxEqualTo(String value) {
            addCriterion("user_fax =", value, "userFax");
            return (Criteria) this;
        }

        public Criteria andUserFaxNotEqualTo(String value) {
            addCriterion("user_fax <>", value, "userFax");
            return (Criteria) this;
        }

        public Criteria andUserFaxGreaterThan(String value) {
            addCriterion("user_fax >", value, "userFax");
            return (Criteria) this;
        }

        public Criteria andUserFaxGreaterThanOrEqualTo(String value) {
            addCriterion("user_fax >=", value, "userFax");
            return (Criteria) this;
        }

        public Criteria andUserFaxLessThan(String value) {
            addCriterion("user_fax <", value, "userFax");
            return (Criteria) this;
        }

        public Criteria andUserFaxLessThanOrEqualTo(String value) {
            addCriterion("user_fax <=", value, "userFax");
            return (Criteria) this;
        }

        public Criteria andUserFaxLike(String value) {
            addCriterion("user_fax like", value, "userFax");
            return (Criteria) this;
        }

        public Criteria andUserFaxNotLike(String value) {
            addCriterion("user_fax not like", value, "userFax");
            return (Criteria) this;
        }

        public Criteria andUserFaxIn(List<String> values) {
            addCriterion("user_fax in", values, "userFax");
            return (Criteria) this;
        }

        public Criteria andUserFaxNotIn(List<String> values) {
            addCriterion("user_fax not in", values, "userFax");
            return (Criteria) this;
        }

        public Criteria andUserFaxBetween(String value1, String value2) {
            addCriterion("user_fax between", value1, value2, "userFax");
            return (Criteria) this;
        }

        public Criteria andUserFaxNotBetween(String value1, String value2) {
            addCriterion("user_fax not between", value1, value2, "userFax");
            return (Criteria) this;
        }

        public Criteria andNoteIsNull() {
            addCriterion("note is null");
            return (Criteria) this;
        }

        public Criteria andNoteIsNotNull() {
            addCriterion("note is not null");
            return (Criteria) this;
        }

        public Criteria andNoteEqualTo(String value) {
            addCriterion("note =", value, "note");
            return (Criteria) this;
        }

        public Criteria andNoteNotEqualTo(String value) {
            addCriterion("note <>", value, "note");
            return (Criteria) this;
        }

        public Criteria andNoteGreaterThan(String value) {
            addCriterion("note >", value, "note");
            return (Criteria) this;
        }

        public Criteria andNoteGreaterThanOrEqualTo(String value) {
            addCriterion("note >=", value, "note");
            return (Criteria) this;
        }

        public Criteria andNoteLessThan(String value) {
            addCriterion("note <", value, "note");
            return (Criteria) this;
        }

        public Criteria andNoteLessThanOrEqualTo(String value) {
            addCriterion("note <=", value, "note");
            return (Criteria) this;
        }

        public Criteria andNoteLike(String value) {
            addCriterion("note like", value, "note");
            return (Criteria) this;
        }

        public Criteria andNoteNotLike(String value) {
            addCriterion("note not like", value, "note");
            return (Criteria) this;
        }

        public Criteria andNoteIn(List<String> values) {
            addCriterion("note in", values, "note");
            return (Criteria) this;
        }

        public Criteria andNoteNotIn(List<String> values) {
            addCriterion("note not in", values, "note");
            return (Criteria) this;
        }

        public Criteria andNoteBetween(String value1, String value2) {
            addCriterion("note between", value1, value2, "note");
            return (Criteria) this;
        }

        public Criteria andNoteNotBetween(String value1, String value2) {
            addCriterion("note not between", value1, value2, "note");
            return (Criteria) this;
        }

        public Criteria andCenterNmsIsNull() {
            addCriterion("center_nms is null");
            return (Criteria) this;
        }

        public Criteria andCenterNmsIsNotNull() {
            addCriterion("center_nms is not null");
            return (Criteria) this;
        }

        public Criteria andCenterNmsEqualTo(Long value) {
            addCriterion("center_nms =", value, "centerNms");
            return (Criteria) this;
        }

        public Criteria andCenterNmsNotEqualTo(Long value) {
            addCriterion("center_nms <>", value, "centerNms");
            return (Criteria) this;
        }

        public Criteria andCenterNmsGreaterThan(Long value) {
            addCriterion("center_nms >", value, "centerNms");
            return (Criteria) this;
        }

        public Criteria andCenterNmsGreaterThanOrEqualTo(Long value) {
            addCriterion("center_nms >=", value, "centerNms");
            return (Criteria) this;
        }

        public Criteria andCenterNmsLessThan(Long value) {
            addCriterion("center_nms <", value, "centerNms");
            return (Criteria) this;
        }

        public Criteria andCenterNmsLessThanOrEqualTo(Long value) {
            addCriterion("center_nms <=", value, "centerNms");
            return (Criteria) this;
        }

        public Criteria andCenterNmsIn(List<Long> values) {
            addCriterion("center_nms in", values, "centerNms");
            return (Criteria) this;
        }

        public Criteria andCenterNmsNotIn(List<Long> values) {
            addCriterion("center_nms not in", values, "centerNms");
            return (Criteria) this;
        }

        public Criteria andCenterNmsBetween(Long value1, Long value2) {
            addCriterion("center_nms between", value1, value2, "centerNms");
            return (Criteria) this;
        }

        public Criteria andCenterNmsNotBetween(Long value1, Long value2) {
            addCriterion("center_nms not between", value1, value2, "centerNms");
            return (Criteria) this;
        }

        public Criteria andOrgIdIsNull() {
            addCriterion("org_id is null");
            return (Criteria) this;
        }

        public Criteria andOrgIdIsNotNull() {
            addCriterion("org_id is not null");
            return (Criteria) this;
        }

        public Criteria andOrgIdEqualTo(Long value) {
            addCriterion("org_id =", value, "orgId");
            return (Criteria) this;
        }

        public Criteria andOrgIdNotEqualTo(Long value) {
            addCriterion("org_id <>", value, "orgId");
            return (Criteria) this;
        }

        public Criteria andOrgIdGreaterThan(Long value) {
            addCriterion("org_id >", value, "orgId");
            return (Criteria) this;
        }

        public Criteria andOrgIdGreaterThanOrEqualTo(Long value) {
            addCriterion("org_id >=", value, "orgId");
            return (Criteria) this;
        }

        public Criteria andOrgIdLessThan(Long value) {
            addCriterion("org_id <", value, "orgId");
            return (Criteria) this;
        }

        public Criteria andOrgIdLessThanOrEqualTo(Long value) {
            addCriterion("org_id <=", value, "orgId");
            return (Criteria) this;
        }

        public Criteria andOrgIdIn(List<Long> values) {
            addCriterion("org_id in", values, "orgId");
            return (Criteria) this;
        }

        public Criteria andOrgIdNotIn(List<Long> values) {
            addCriterion("org_id not in", values, "orgId");
            return (Criteria) this;
        }

        public Criteria andOrgIdBetween(Long value1, Long value2) {
            addCriterion("org_id between", value1, value2, "orgId");
            return (Criteria) this;
        }

        public Criteria andOrgIdNotBetween(Long value1, Long value2) {
            addCriterion("org_id not between", value1, value2, "orgId");
            return (Criteria) this;
        }

        public Criteria andOaUserIdIsNull() {
            addCriterion("oa_user_id is null");
            return (Criteria) this;
        }

        public Criteria andOaUserIdIsNotNull() {
            addCriterion("oa_user_id is not null");
            return (Criteria) this;
        }

        public Criteria andOaUserIdEqualTo(String value) {
            addCriterion("oa_user_id =", value, "oaUserId");
            return (Criteria) this;
        }

        public Criteria andOaUserIdNotEqualTo(String value) {
            addCriterion("oa_user_id <>", value, "oaUserId");
            return (Criteria) this;
        }

        public Criteria andOaUserIdGreaterThan(String value) {
            addCriterion("oa_user_id >", value, "oaUserId");
            return (Criteria) this;
        }

        public Criteria andOaUserIdGreaterThanOrEqualTo(String value) {
            addCriterion("oa_user_id >=", value, "oaUserId");
            return (Criteria) this;
        }

        public Criteria andOaUserIdLessThan(String value) {
            addCriterion("oa_user_id <", value, "oaUserId");
            return (Criteria) this;
        }

        public Criteria andOaUserIdLessThanOrEqualTo(String value) {
            addCriterion("oa_user_id <=", value, "oaUserId");
            return (Criteria) this;
        }

        public Criteria andOaUserIdLike(String value) {
            addCriterion("oa_user_id like", value, "oaUserId");
            return (Criteria) this;
        }

        public Criteria andOaUserIdNotLike(String value) {
            addCriterion("oa_user_id not like", value, "oaUserId");
            return (Criteria) this;
        }

        public Criteria andOaUserIdIn(List<String> values) {
            addCriterion("oa_user_id in", values, "oaUserId");
            return (Criteria) this;
        }

        public Criteria andOaUserIdNotIn(List<String> values) {
            addCriterion("oa_user_id not in", values, "oaUserId");
            return (Criteria) this;
        }

        public Criteria andOaUserIdBetween(String value1, String value2) {
            addCriterion("oa_user_id between", value1, value2, "oaUserId");
            return (Criteria) this;
        }

        public Criteria andOaUserIdNotBetween(String value1, String value2) {
            addCriterion("oa_user_id not between", value1, value2, "oaUserId");
            return (Criteria) this;
        }

        public Criteria andPersonIdIsNull() {
            addCriterion("person_id is null");
            return (Criteria) this;
        }

        public Criteria andPersonIdIsNotNull() {
            addCriterion("person_id is not null");
            return (Criteria) this;
        }

        public Criteria andPersonIdEqualTo(String value) {
            addCriterion("person_id =", value, "personId");
            return (Criteria) this;
        }

        public Criteria andPersonIdNotEqualTo(String value) {
            addCriterion("person_id <>", value, "personId");
            return (Criteria) this;
        }

        public Criteria andPersonIdGreaterThan(String value) {
            addCriterion("person_id >", value, "personId");
            return (Criteria) this;
        }

        public Criteria andPersonIdGreaterThanOrEqualTo(String value) {
            addCriterion("person_id >=", value, "personId");
            return (Criteria) this;
        }

        public Criteria andPersonIdLessThan(String value) {
            addCriterion("person_id <", value, "personId");
            return (Criteria) this;
        }

        public Criteria andPersonIdLessThanOrEqualTo(String value) {
            addCriterion("person_id <=", value, "personId");
            return (Criteria) this;
        }

        public Criteria andPersonIdLike(String value) {
            addCriterion("person_id like", value, "personId");
            return (Criteria) this;
        }

        public Criteria andPersonIdNotLike(String value) {
            addCriterion("person_id not like", value, "personId");
            return (Criteria) this;
        }

        public Criteria andPersonIdIn(List<String> values) {
            addCriterion("person_id in", values, "personId");
            return (Criteria) this;
        }

        public Criteria andPersonIdNotIn(List<String> values) {
            addCriterion("person_id not in", values, "personId");
            return (Criteria) this;
        }

        public Criteria andPersonIdBetween(String value1, String value2) {
            addCriterion("person_id between", value1, value2, "personId");
            return (Criteria) this;
        }

        public Criteria andPersonIdNotBetween(String value1, String value2) {
            addCriterion("person_id not between", value1, value2, "personId");
            return (Criteria) this;
        }

        public Criteria andStatusIsNull() {
            addCriterion("status is null");
            return (Criteria) this;
        }

        public Criteria andStatusIsNotNull() {
            addCriterion("status is not null");
            return (Criteria) this;
        }

        public Criteria andStatusEqualTo(Integer value) {
            addCriterion("status =", value, "status");
            return (Criteria) this;
        }

        public Criteria andStatusNotEqualTo(Integer value) {
            addCriterion("status <>", value, "status");
            return (Criteria) this;
        }

        public Criteria andStatusGreaterThan(Integer value) {
            addCriterion("status >", value, "status");
            return (Criteria) this;
        }

        public Criteria andStatusGreaterThanOrEqualTo(Integer value) {
            addCriterion("status >=", value, "status");
            return (Criteria) this;
        }

        public Criteria andStatusLessThan(Integer value) {
            addCriterion("status <", value, "status");
            return (Criteria) this;
        }

        public Criteria andStatusLessThanOrEqualTo(Integer value) {
            addCriterion("status <=", value, "status");
            return (Criteria) this;
        }

        public Criteria andStatusIn(List<Integer> values) {
            addCriterion("status in", values, "status");
            return (Criteria) this;
        }

        public Criteria andStatusNotIn(List<Integer> values) {
            addCriterion("status not in", values, "status");
            return (Criteria) this;
        }

        public Criteria andStatusBetween(Integer value1, Integer value2) {
            addCriterion("status between", value1, value2, "status");
            return (Criteria) this;
        }

        public Criteria andStatusNotBetween(Integer value1, Integer value2) {
            addCriterion("status not between", value1, value2, "status");
            return (Criteria) this;
        }

        public Criteria andUpdateTimeIsNull() {
            addCriterion("update_time is null");
            return (Criteria) this;
        }

        public Criteria andUpdateTimeIsNotNull() {
            addCriterion("update_time is not null");
            return (Criteria) this;
        }

        public Criteria andUpdateTimeEqualTo(ZonedDateTime value) {
            addCriterion("update_time =", value, "updateTime");
            return (Criteria) this;
        }

        public Criteria andUpdateTimeNotEqualTo(ZonedDateTime value) {
            addCriterion("update_time <>", value, "updateTime");
            return (Criteria) this;
        }

        public Criteria andUpdateTimeGreaterThan(ZonedDateTime value) {
            addCriterion("update_time >", value, "updateTime");
            return (Criteria) this;
        }

        public Criteria andUpdateTimeGreaterThanOrEqualTo(ZonedDateTime value) {
            addCriterion("update_time >=", value, "updateTime");
            return (Criteria) this;
        }

        public Criteria andUpdateTimeLessThan(ZonedDateTime value) {
            addCriterion("update_time <", value, "updateTime");
            return (Criteria) this;
        }

        public Criteria andUpdateTimeLessThanOrEqualTo(ZonedDateTime value) {
            addCriterion("update_time <=", value, "updateTime");
            return (Criteria) this;
        }

        public Criteria andUpdateTimeIn(List<ZonedDateTime> values) {
            addCriterion("update_time in", values, "updateTime");
            return (Criteria) this;
        }

        public Criteria andUpdateTimeNotIn(List<ZonedDateTime> values) {
            addCriterion("update_time not in", values, "updateTime");
            return (Criteria) this;
        }

        public Criteria andUpdateTimeBetween(ZonedDateTime value1, ZonedDateTime value2) {
            addCriterion("update_time between", value1, value2, "updateTime");
            return (Criteria) this;
        }

        public Criteria andUpdateTimeNotBetween(ZonedDateTime value1, ZonedDateTime value2) {
            addCriterion("update_time not between", value1, value2, "updateTime");
            return (Criteria) this;
        }
    }

    /**
     * This class was generated by MyBatis Generator.
     * This class corresponds to the database table bas_user
     *
     * @mbg.generated do_not_delete_during_merge Fri Sep 18 10:12:01 CST 2020
     */
    public static class Criteria extends GeneratedCriteria {

        protected Criteria() {
            super();
        }
    }

    /**
     * This class was generated by MyBatis Generator.
     * This class corresponds to the database table bas_user
     *
     * @mbg.generated Fri Sep 18 10:12:01 CST 2020
     */
    public static class Criterion {
        @ApiParam(hidden=true)
        private String condition;

        @ApiParam(hidden=true)
        private Object value;

        @ApiParam(hidden=true)
        private Object secondValue;

        @ApiParam(hidden=true)
        private boolean noValue;

        @ApiParam(hidden=true)
        private boolean singleValue;

        @ApiParam(hidden=true)
        private boolean betweenValue;

        @ApiParam(hidden=true)
        private boolean listValue;

        @ApiParam(hidden=true)
        private String typeHandler;

        public String getCondition() {
            return condition;
        }

        public Object getValue() {
            return value;
        }

        public Object getSecondValue() {
            return secondValue;
        }

        public boolean isNoValue() {
            return noValue;
        }

        public boolean isSingleValue() {
            return singleValue;
        }

        public boolean isBetweenValue() {
            return betweenValue;
        }

        public boolean isListValue() {
            return listValue;
        }

        public String getTypeHandler() {
            return typeHandler;
        }

        protected Criterion(String condition) {
            super();
            this.condition = condition;
            this.typeHandler = null;
            this.noValue = true;
        }

        protected Criterion(String condition, Object value, String typeHandler) {
            super();
            this.condition = condition;
            this.value = value;
            this.typeHandler = typeHandler;
            if (value instanceof List<?>) {
                this.listValue = true;
            } else {
                this.singleValue = true;
            }
        }

        protected Criterion(String condition, Object value) {
            this(condition, value, null);
        }

        protected Criterion(String condition, Object value, Object secondValue, String typeHandler) {
            super();
            this.condition = condition;
            this.value = value;
            this.secondValue = secondValue;
            this.typeHandler = typeHandler;
            this.betweenValue = true;
        }

        protected Criterion(String condition, Object value, Object secondValue) {
            this(condition, value, secondValue, null);
        }
    }
}