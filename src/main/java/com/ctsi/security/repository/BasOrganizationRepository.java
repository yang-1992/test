package com.ctsi.security.repository;

import com.ctsi.security.domain.BasOrganization;
import com.ctsi.security.domain.BasOrganizationExample;
import com.ctsi.security.domain.dto.UserOrgInfoDto;
import com.ctsi.space.domain.dto.SimpleOrgDto;
import com.ctsi.space.domain.dto.StationOrgTreeNode;
import org.apache.ibatis.annotations.*;
import org.apache.ibatis.type.JdbcType;

import java.util.List;

/**
 * @author ctsi-biyi-generator
*/
@Mapper
public interface BasOrganizationRepository extends com.ctsi.ssdc.repository.BaseRepository<BasOrganization, Long, BasOrganizationExample> {
    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table bas_organization
     *
     * @mbg.generated Thu Sep 10 15:58:37 GMT+08:00 2020
     */
    @SelectProvider(type=BasOrganizationSqlProvider.class, method="countByExample")
    long countByExample(BasOrganizationExample example);

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table bas_organization
     *
     * @mbg.generated Thu Sep 10 15:58:37 GMT+08:00 2020
     */
    @DeleteProvider(type=BasOrganizationSqlProvider.class, method="deleteByExample")
    int deleteByExample(BasOrganizationExample example);

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table bas_organization
     *
     * @mbg.generated Thu Sep 10 15:58:37 GMT+08:00 2020
     */
    @Delete({
        "delete from bas_organization",
        "where org_id = #{orgId,jdbcType=DECIMAL}"
    })
    int deleteByPrimaryKey(Long orgId);

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table bas_organization
     *
     * @mbg.generated Thu Sep 10 15:58:37 GMT+08:00 2020
     */
    @Insert({
        "insert into bas_organization (org_id, org_name, ",
        "parent_org_id, org_map_type, ",
        "org_type, org_serial, ",
        "data_position, org_site_type, ",
        "delegate_org_id, delegate_org_position, ",
        "trans_flag, data_flag, ",
        "admin_district_flag, is_oss, ",
        "itsm_org_id, note, ",
        "org_order, org_level, ",
        "org_full_name, res_no, ",
        "inner_order, inner_code, ",
        "is_valid, org_path)",
        "values (#{orgId,jdbcType=DECIMAL}, #{orgName,jdbcType=VARCHAR}, ",
        "#{parentOrgId,jdbcType=DECIMAL}, #{orgMapType,jdbcType=SMALLINT}, ",
        "#{orgType,jdbcType=SMALLINT}, #{orgSerial,jdbcType=VARCHAR}, ",
        "#{dataPosition,jdbcType=SMALLINT}, #{orgSiteType,jdbcType=SMALLINT}, ",
        "#{delegateOrgId,jdbcType=DECIMAL}, #{delegateOrgPosition,jdbcType=SMALLINT}, ",
        "#{transFlag,jdbcType=INTEGER}, #{dataFlag,jdbcType=INTEGER}, ",
        "#{adminDistrictFlag,jdbcType=INTEGER}, #{isOss,jdbcType=TINYINT}, ",
        "#{itsmOrgId,jdbcType=DECIMAL}, #{note,jdbcType=VARCHAR}, ",
        "#{orgOrder,jdbcType=INTEGER}, #{orgLevel,jdbcType=INTEGER}, ",
        "#{orgFullName,jdbcType=VARCHAR}, #{resNo,jdbcType=VARCHAR}, ",
        "#{innerOrder,jdbcType=VARCHAR}, #{innerCode,jdbcType=VARCHAR}, ",
        "#{isValid,jdbcType=TINYINT}, #{orgPath,jdbcType=VARCHAR})"
    })
    int insert(BasOrganization record);

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table bas_organization
     *
     * @mbg.generated Thu Sep 10 15:58:37 GMT+08:00 2020
     */
    @InsertProvider(type=BasOrganizationSqlProvider.class, method="insertSelective")
    int insertSelective(BasOrganization record);

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table bas_organization
     *
     * @mbg.generated Thu Sep 10 15:58:37 GMT+08:00 2020
     */
    @SelectProvider(type=BasOrganizationSqlProvider.class, method="selectByExample")
    @Results({
        @Result(column="bo_org_id", property="orgId", jdbcType=JdbcType.DECIMAL, id=true),
        @Result(column="bo_org_name", property="orgName", jdbcType=JdbcType.VARCHAR),
        @Result(column="bo_parent_org_id", property="parentOrgId", jdbcType=JdbcType.DECIMAL),
        @Result(column="bo_org_map_type", property="orgMapType", jdbcType=JdbcType.SMALLINT),
        @Result(column="bo_org_type", property="orgType", jdbcType=JdbcType.SMALLINT),
        @Result(column="bo_org_serial", property="orgSerial", jdbcType=JdbcType.VARCHAR),
        @Result(column="bo_data_position", property="dataPosition", jdbcType=JdbcType.SMALLINT),
        @Result(column="bo_org_site_type", property="orgSiteType", jdbcType=JdbcType.SMALLINT),
        @Result(column="bo_delegate_org_id", property="delegateOrgId", jdbcType=JdbcType.DECIMAL),
        @Result(column="bo_delegate_org_position", property="delegateOrgPosition", jdbcType=JdbcType.SMALLINT),
        @Result(column="bo_trans_flag", property="transFlag", jdbcType=JdbcType.INTEGER),
        @Result(column="bo_data_flag", property="dataFlag", jdbcType=JdbcType.INTEGER),
        @Result(column="bo_admin_district_flag", property="adminDistrictFlag", jdbcType=JdbcType.INTEGER),
        @Result(column="bo_is_oss", property="isOss", jdbcType=JdbcType.TINYINT),
        @Result(column="bo_itsm_org_id", property="itsmOrgId", jdbcType=JdbcType.DECIMAL),
        @Result(column="bo_note", property="note", jdbcType=JdbcType.VARCHAR),
        @Result(column="bo_org_order", property="orgOrder", jdbcType=JdbcType.INTEGER),
        @Result(column="bo_org_level", property="orgLevel", jdbcType=JdbcType.INTEGER),
        @Result(column="bo_org_full_name", property="orgFullName", jdbcType=JdbcType.VARCHAR),
        @Result(column="bo_res_no", property="resNo", jdbcType=JdbcType.VARCHAR),
        @Result(column="bo_inner_order", property="innerOrder", jdbcType=JdbcType.VARCHAR),
        @Result(column="bo_inner_code", property="innerCode", jdbcType=JdbcType.VARCHAR),
        @Result(column="bo_is_valid", property="isValid", jdbcType=JdbcType.TINYINT),
        @Result(column="bo_org_path", property="orgPath", jdbcType=JdbcType.VARCHAR)
    })
    List<BasOrganization> selectByExample(BasOrganizationExample example);

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table bas_organization
     *
     * @mbg.generated Thu Sep 10 15:58:37 GMT+08:00 2020
     */
    @Select({
        "select",
        "bo.org_id as bo_org_id, bo.org_name as bo_org_name, bo.parent_org_id as bo_parent_org_id, ",
        "bo.org_map_type as bo_org_map_type, bo.org_type as bo_org_type, bo.org_serial as bo_org_serial, ",
        "bo.data_position as bo_data_position, bo.org_site_type as bo_org_site_type, ",
        "bo.delegate_org_id as bo_delegate_org_id, bo.delegate_org_position as bo_delegate_org_position, ",
        "bo.trans_flag as bo_trans_flag, bo.data_flag as bo_data_flag, bo.admin_district_flag as bo_admin_district_flag, ",
        "bo.is_oss as bo_is_oss, bo.itsm_org_id as bo_itsm_org_id, bo.note as bo_note, ",
        "bo.org_order as bo_org_order, bo.org_level as bo_org_level, bo.org_full_name as bo_org_full_name, ",
        "bo.res_no as bo_res_no, bo.inner_order as bo_inner_order, bo.inner_code as bo_inner_code, ",
        "bo.is_valid as bo_is_valid, bo.org_path as bo_org_path",
        "from bas_organization bo",
        "where bo.org_id = #{orgId,jdbcType=DECIMAL}"
    })
    @Results({
        @Result(column="bo_org_id", property="orgId", jdbcType=JdbcType.DECIMAL, id=true),
        @Result(column="bo_org_name", property="orgName", jdbcType=JdbcType.VARCHAR),
        @Result(column="bo_parent_org_id", property="parentOrgId", jdbcType=JdbcType.DECIMAL),
        @Result(column="bo_org_map_type", property="orgMapType", jdbcType=JdbcType.SMALLINT),
        @Result(column="bo_org_type", property="orgType", jdbcType=JdbcType.SMALLINT),
        @Result(column="bo_org_serial", property="orgSerial", jdbcType=JdbcType.VARCHAR),
        @Result(column="bo_data_position", property="dataPosition", jdbcType=JdbcType.SMALLINT),
        @Result(column="bo_org_site_type", property="orgSiteType", jdbcType=JdbcType.SMALLINT),
        @Result(column="bo_delegate_org_id", property="delegateOrgId", jdbcType=JdbcType.DECIMAL),
        @Result(column="bo_delegate_org_position", property="delegateOrgPosition", jdbcType=JdbcType.SMALLINT),
        @Result(column="bo_trans_flag", property="transFlag", jdbcType=JdbcType.INTEGER),
        @Result(column="bo_data_flag", property="dataFlag", jdbcType=JdbcType.INTEGER),
        @Result(column="bo_admin_district_flag", property="adminDistrictFlag", jdbcType=JdbcType.INTEGER),
        @Result(column="bo_is_oss", property="isOss", jdbcType=JdbcType.TINYINT),
        @Result(column="bo_itsm_org_id", property="itsmOrgId", jdbcType=JdbcType.DECIMAL),
        @Result(column="bo_note", property="note", jdbcType=JdbcType.VARCHAR),
        @Result(column="bo_org_order", property="orgOrder", jdbcType=JdbcType.INTEGER),
        @Result(column="bo_org_level", property="orgLevel", jdbcType=JdbcType.INTEGER),
        @Result(column="bo_org_full_name", property="orgFullName", jdbcType=JdbcType.VARCHAR),
        @Result(column="bo_res_no", property="resNo", jdbcType=JdbcType.VARCHAR),
        @Result(column="bo_inner_order", property="innerOrder", jdbcType=JdbcType.VARCHAR),
        @Result(column="bo_inner_code", property="innerCode", jdbcType=JdbcType.VARCHAR),
        @Result(column="bo_is_valid", property="isValid", jdbcType=JdbcType.TINYINT),
        @Result(column="bo_org_path", property="orgPath", jdbcType=JdbcType.VARCHAR)
    })
    BasOrganization selectByPrimaryKey(Long orgId);

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table bas_organization
     *
     * @mbg.generated Thu Sep 10 15:58:37 GMT+08:00 2020
     */
    @UpdateProvider(type=BasOrganizationSqlProvider.class, method="updateByExampleSelective")
    int updateByExampleSelective(@Param("record") BasOrganization record, @Param("example") BasOrganizationExample example);

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table bas_organization
     *
     * @mbg.generated Thu Sep 10 15:58:37 GMT+08:00 2020
     */
    @UpdateProvider(type=BasOrganizationSqlProvider.class, method="updateByExample")
    int updateByExample(@Param("record") BasOrganization record, @Param("example") BasOrganizationExample example);

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table bas_organization
     *
     * @mbg.generated Thu Sep 10 15:58:37 GMT+08:00 2020
     */
    @UpdateProvider(type=BasOrganizationSqlProvider.class, method="updateByPrimaryKeySelective")
    int updateByPrimaryKeySelective(BasOrganization record);

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table bas_organization
     *
     * @mbg.generated Thu Sep 10 15:58:37 GMT+08:00 2020
     */
    @Update({
        "update bas_organization",
        "set org_name = #{orgName,jdbcType=VARCHAR},",
          "parent_org_id = #{parentOrgId,jdbcType=DECIMAL},",
          "org_map_type = #{orgMapType,jdbcType=SMALLINT},",
          "org_type = #{orgType,jdbcType=SMALLINT},",
          "org_serial = #{orgSerial,jdbcType=VARCHAR},",
          "data_position = #{dataPosition,jdbcType=SMALLINT},",
          "org_site_type = #{orgSiteType,jdbcType=SMALLINT},",
          "delegate_org_id = #{delegateOrgId,jdbcType=DECIMAL},",
          "delegate_org_position = #{delegateOrgPosition,jdbcType=SMALLINT},",
          "trans_flag = #{transFlag,jdbcType=INTEGER},",
          "data_flag = #{dataFlag,jdbcType=INTEGER},",
          "admin_district_flag = #{adminDistrictFlag,jdbcType=INTEGER},",
          "is_oss = #{isOss,jdbcType=TINYINT},",
          "itsm_org_id = #{itsmOrgId,jdbcType=DECIMAL},",
          "note = #{note,jdbcType=VARCHAR},",
          "org_order = #{orgOrder,jdbcType=INTEGER},",
          "org_level = #{orgLevel,jdbcType=INTEGER},",
          "org_full_name = #{orgFullName,jdbcType=VARCHAR},",
          "res_no = #{resNo,jdbcType=VARCHAR},",
          "inner_order = #{innerOrder,jdbcType=VARCHAR},",
          "inner_code = #{innerCode,jdbcType=VARCHAR},",
          "is_valid = #{isValid,jdbcType=TINYINT},",
          "org_path = #{orgPath,jdbcType=VARCHAR}",
        "where org_id = #{orgId,jdbcType=DECIMAL}"
    })
    int updateByPrimaryKey(BasOrganization record);

    /**
     * 获取用户的组织信息
     *
     * @param userId 用户ID
     * @return 用户的组织信息
     */
    @Select("SELECT u.user_id userId,u.user_name userName,u.org_id orgId,o.org_name orgName, " +
            "o.org_full_name orgFullName,o.org_level orgLevel,o.parent_org_id parentOrgId " +
            "FROM bas_user u " +
            "JOIN bas_organization o ON o.org_id = u.org_id " +
            "WHERE u.user_id=#{userId} AND o.is_valid=0")
    UserOrgInfoDto getUserOrgInfo(Long userId);

    /**
     * 获取某组织下的所有组织信息
     *
     * @param orgId 组织ID
     * @return 某组织下的所有组织信息
     */
    @Select("SELECT o.org_id `id`,o.org_name `name`,o.parent_org_id parentId,o.org_level `level` " +
            "FROM bas_organization o WHERE o.org_path LIKE '%/${orgId}/%' AND o.is_valid=0")
    List<StationOrgTreeNode> findChildrenOrg(@Param("orgId") Long orgId);

    /**
     * 获取对应组织ID的组织路径
     * @param orgId 组织ID
     * @return 组织路径
     */
    @Select("SELECT org_path FROM bas_organization WHERE org_id = #{orgId} AND o.is_valid=0")
    String selectOrgPathByOrgId(Long orgId);

    /**
     * 获取某组织下的子组织的简要信息
     * @param orgId 组织ID
     * @return 所有子组织的简要信息
     */
    @Select("SELECT o.org_id `orgId`,o.org_name `orgName`, o.org_full_name `orgFullName`," +
            "SUBSTRING_INDEX(SUBSTRING_INDEX(o.org_path,'/',2),'/', -1) orgType " +
            "FROM bas_organization o WHERE o.is_valid=0 AND o.parent_org_id=#{orgId}")
    List<SimpleOrgDto> findChildrenOrgSimpleInfo(Long orgId);

    @Select("SELECT o.org_id orgId, o.org_full_name orgFullName FROM bas_organization o " +
            "WHERE o.org_full_name LIKE '%${orgFullName}%' AND o.is_valid=0 " +
            "UNION ALL " +
            "SELECT c.cus_id orgId, c.cus_name_ab orgFullName FROM bas_customer c " +
            "WHERE c.cus_name_ab LIKE '%${orgFullName}%' AND c.is_valid=0 LIMIT 10 ")
    List<SimpleOrgDto> searchByOrgFullName(@Param("orgFullName") String orgFullName);
}